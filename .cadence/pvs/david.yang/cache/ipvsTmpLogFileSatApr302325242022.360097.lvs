********************************************************************************
pvs 20.10-p029 64 bit (Mon Sep 28 20:09:41 PDT 2020)
Build Ref No.: 029 Production (09-28-2020) [pvs_2010]

Copyright 2020 Cadence Design Systems, Inc.
All rights reserved worldwide.

Build O/S:       Linux x86_64 2.6.32-431.11.2.el6.x86_64
Executed on:     ice05 (Linux x86_64 3.10.0-1160.62.1.el7.x86_64)
Process Id:      21074
Starting Time:   Sat Apr 30 23:25:22 2022 (Sun May  1 03:25:22 2022 GMT)
With parameters: -lvs -get_rules /tmp/pvsrng.10592@ice05.1 -tc top -gds /dev/null -get_options /tmp/pvsoptpar.10592@ice05.1 -gen_tags /tmp/pvsgentags.10592@ice05.1 -stc top -cdl /dev/null -control /tmp/ipvsRulesCheckControl.10592@ice05.1 /afs/ee.cooper.edu/user/d/david.yang/VLSI_tsmc65/yangd_lvs/.technology.rul.10592@ice05.1 
********************************************************************************


########################################################################
Get host info ...
########################################################################
CPU info:
    model name      :  Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz
    cpu MHz         :  3899.084
    cache size      :  8192 KB
    physical cores  :  4
    logical cores   :  8
    hyper-threading on

Memory info:
    7744M physical memory installed.

    MemTotal:        7930696 kB
    MemFree:         1490192 kB
    MemAvailable:    2946016 kB
    Buffers:           94744 kB
    Cached:          1485400 kB
    SwapCached:        21240 kB
    Active:          3900360 kB
    Inactive:        1717560 kB
    Active(anon):    3169276 kB
    Inactive(anon):  1054264 kB
    Active(file):     731084 kB
    Inactive(file):   663296 kB
    Unevictable:           0 kB
    Mlocked:               0 kB
    SwapTotal:       8388604 kB
    SwapFree:        7967996 kB
    Dirty:              3072 kB
    Writeback:             0 kB
    AnonPages:       4033436 kB
    Mapped:           598444 kB
    Shmem:            185772 kB
    Slab:             473760 kB
    SReclaimable:     365152 kB
    SUnreclaim:       108608 kB
    KernelStack:       23904 kB
    PageTables:       151432 kB
    NFS_Unstable:          0 kB
    Bounce:                0 kB
    WritebackTmp:          0 kB
    CommitLimit:    12353952 kB
    Committed_AS:   14401916 kB
    VmallocTotal:   34359738367 kB
    VmallocUsed:      117072 kB
    VmallocChunk:   34359491396 kB
    Percpu:             2752 kB
    HardwareCorrupted:     0 kB
    AnonHugePages:    169984 kB
    CmaTotal:              0 kB
    CmaFree:               0 kB
    HugePages_Total:       0
    HugePages_Free:        0
    HugePages_Rsvd:        0
    HugePages_Surp:        0
    Hugepagesize:       2048 kB
    DirectMap4k:      125056 kB
    DirectMap2M:     5040128 kB
    DirectMap1G:     3145728 kB


########################################################################
Get environment info ...
########################################################################
ENV VAR: TCL_LIBRARY = /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/tcltk/08.64/tcl8.6
ENV VAR: TCLX_LIBRARY = /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/tclx/08.40
ENV VAR: TCLLIBPATH = /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/itcl/3.4.1 /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/tclxml/3.2 /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/tcllib/1.18 /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/itcl/3.4.1 /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/tclxml/3.2 /afs/ee.cooper.edu/dist/cadence-2021/installs/pvs/share/lib/tcllib/1.18 


########################################################################
Parsing Control File /tmp/ipvsRulesCheckControl.10592@ice05.1 ...
########################################################################
RESULTS_DB -erc "/afs/ee.cooper.edu/user/d/david.yang/VLSI_tsmc65/yangd_lvs/TwoStage_layout.erc_errors.ascii" -ascii;
LVS_RUN_ERC_CHECKS yes;

########################################################################
Parsing Rule File /afs/ee.cooper.edu/user/d/david.yang/VLSI_tsmc65/yangd_lvs/.technology.rul.10592@ice05.1 ...
########################################################################
TECHNOLOGY tsmcN65_pvs -ruleSet 0___N65_UTM_9M_6x1z1u -techLib /afs/ee.cooper.edu/user/d/david.yang/VLSI_tsmc65/pvstech.lib;
[INFO] TECHNOLOGY: Rules file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m will be included after the remainder of the current rules are processed.
[INFO] TECHNOLOGY tsmcN65_pvs -ruleSet 0___N65_UTM_9M_6x1z1u -techLib /afs/ee.cooper.edu/user/d/david.yang/VLSI_tsmc65/pvstech.lib: End of additions.
#DEFINE WELL_TO_PG_CHECK
#DEFINE DS_TO_PG_CHECK
#DEFINE FLOATING_WELL_CHECK
variable WPED 5;
variable PRESCALE 1;
variable POWER_NAME AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL;
variable GROUND_NAME AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB;
variable PMOS_TOP_EXT 0;
variable NMOS_BOT_EXT 0;
variable MOS_LR_EXT 0;
variable MOS_Werr 0;
variable MOS_Lerr 0;
variable LDD_Werr 0;
variable LDD_Lerr 0;
variable DIO_Aerr 0;
variable DIO_Werr 0;
variable DIO_Lerr 0;
variable BJT_Aerr 0;
variable RES_Werr 0;
variable RES_Lerr 0;
variable RFMOS_Werr 0;
variable RFMOS_Lerr 0;
variable MOSCAP_Werr 0;
variable MOSCAP_Lerr 0;
variable VAR_Werr 0;
variable VAR_Lerr 0;
variable PROBE_Aerr 0;
variable PROBE_Perr 0;
variable SPIRAL_Werr 0;
variable SPIRAL_Serr 0;
variable SBD_Werr 0;
variable SBD_Lerr 0;
variable CAP_Werr 0;
variable CAP_Lerr 0;
variable MOM_Werr 0;
variable MOM_Serr 0;
variable MOM_Lerr 0;
variable MIN_MOM_LR 1;
LAYOUT_CELL_LIST pcells "crtmom*" crtmom_2t* crtmom_mx* crtmom_rf* crtmom_rf_rdk* fmom* fmom_mx* lincap_rf* lincap_rf_25* lowcpad* lowcpad* mimcap_um_rf* mimcap_woum_rf* moscap_rf* moscap_rf18* moscap_rf18_nw* moscap_rf25* moscap_rf25_nw* moscap_rf33* moscap_rf33_nw* moscap_rf_hvt* moscap_rf_hvt_nw* moscap_rf_nw* moscap_rf_rdk* ndio_hia_rf* nmos_rf* nmos_rf_18* nmos_rf_18_6t* nmos_rf_18_nodnw* nmos_rf_25* nmos_rf_25_6t* nmos_rf_25_nodnw* nmos_rf_25_nodnwod33* nmos_rf_25_nodnwud18* nmos_rf_25od33* nmos_rf_25od33_6t* nmos_rf_25ud18* nmos_rf_25ud18_6t* nmos_rf_33* nmos_rf_33_6t* nmos_rf_33_nodnw* nmos_rf_6t* nmos_rf_cas_nw* nmos_rf_cross_nw* nmos_rf_diff_nw* nmos_rf_hvt* nmos_rf_hvt_6t* nmos_rf_hvt_nodnw* nmos_rf_lvt* nmos_rf_lvt_6t* nmos_rf_lvt_nodnw* nmos_rf_mlvt* nmos_rf_mlvt_6t* nmos_rf_mlvt_nodnw* nmos_rf_na18* nmos_rf_nodnw* nmos_rf_rdk* pdio_hia_rf* pmos_rf* pmos_rf_18* pmos_rf_18_5t* pmos_rf_18_nw* pmos_rf_18_nw_5t* pmos_rf_25* pmos_rf_25_5t* pmos_rf_25_nw* pmos_rf_25_nw_5t* pmos_rf_25_nwod33* pmos_rf_25_nwud18* pmos_rf_25od33* pmos_rf_25od33_5t* pmos_rf_25od33_nw_5t* pmos_rf_25ud18* pmos_rf_25ud18_5t* pmos_rf_25ud18_nw_5t* pmos_rf_33* pmos_rf_33_5t* pmos_rf_33_nw* pmos_rf_33_nw_5t* pmos_rf_5t* pmos_rf_hvt* pmos_rf_hvt_5t* pmos_rf_hvt_nw* pmos_rf_hvt_nw_5t* pmos_rf_lvt* pmos_rf_lvt_5t* pmos_rf_lvt_nw* pmos_rf_lvt_nw_5t* pmos_rf_mlvt* pmos_rf_mlvt_5t* pmos_rf_mlvt_nw* pmos_rf_mlvt_nw_5t* pmos_rf_nw* pmos_rf_nw_5t* pmos_rf_rdk* pmoscap_rf* pmoscap_rf18* pmoscap_rf25* rfesd_rf1* rfesd_rf2* rfesd_rf3* rfesd_rf4* rfesd_rf5* rfesd_rf6* rfesd_rf7* rfesd_rf8* rppoly_rf* rppoly_rf_rdk* rppoly_rf* rppoly_rf_rdk* rppolywo_rf* rppolywo_rf_rdk* sbd_rf* sbd_rf_nw* sline_gscpw_mu* sline_ms_mu* spiral_std_mu_4x_n65* spiral_std_mu_4x_n65_custom* spiral_std_mu_4x_n65_em* spiral_std_mu_a_n65* spiral_std_mu_a_n65_custom* spiral_std_mu_a_n65_em* spiral_std_mu_a_n65* spiral_std_mu_a_n65_custom* spiral_std_mu_a_n65_em* spiral_std_mu_a_n65* spiral_std_mu_a_n65_custom* spiral_std_mu_a_n65_em* spiral_std_mu_z* spiral_std_mu_z_rdk* spiral_sym_ct_mu_4x_a_n65* spiral_sym_ct_mu_4x_a_n65_custom* spiral_sym_ct_mu_4x_a_n65_em* spiral_sym_ct_mu_a_a_n65* spiral_sym_ct_mu_a_a_n65_custom* spiral_sym_ct_mu_a_a_n65_em* spiral_sym_ct_mu_z* spiral_sym_ct_mu_z_rdk* spiral_sym_mu_4x_n65* spiral_sym_mu_4x_n65_custom* spiral_sym_mu_4x_n65_em* spiral_sym_mu_a_n65* spiral_sym_mu_a_n65_custom* spiral_sym_mu_a_n65_em* spiral_sym_mu_z* spiral_sym_mu_z_rdk* xjvar* xjvar_nw*;
PRESERVE_CELL_LIST pcells;
LAYOUT_PRIMARY "lvs_top";
[WARN] Cmd-line override: LAYOUT_PRIMARY "top";
LAYOUT_PATH "lvs_top.gds";
[WARN] Cmd-line override: LAYOUT_PATH "/dev/null";
LAYOUT_FORMAT GDSII;
SCHEMATIC_PRIMARY "lvs_top";
[WARN] Cmd-line override: SCHEMATIC_PRIMARY "top";
SCHEMATIC_PATH "lvs_top.cdl";
[WARN] Cmd-line override: SCHEMATIC_PATH "/dev/null";
SCHEMATIC_FORMAT SPICE;
[WARN] Cmd-line override: SCHEMATIC_FORMAT "cdl";
RESULTS_DB -DRC "drc.db" -GDSII;
[WARN] option -drc is skipped at line 691 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m
REPORT_SUMMARY -DRC "drc.sum";
[WARN] REPORT_SUMMARY -drc is skipped at line 692 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m
RESULTS_DB -ERC "erc.db" -GDSII;
REPORT_SUMMARY -ERC "erc.sum";
LVS_REPORT_FILE "lvs.rep";
LVS_REPORT_MAX 1000;
MASK_RESULTS_DB -NONE;
LVS_FIND_SHORTS YES;
LVS_REPORT_OPT S;
INPUT_DB_SCALE 1000;
INPUT_SCALE 1000;
MAGNIFY_IN AUTO;
GRID 1;
UNIT -LENGTH U;
TEXT_DEPTH -PRIMARY;
PORT -DEPTH -PRIMARY;
FLAG -SKEW YES;
FLAG -OFFGRID YES;
LVS_DERIVE_LOGIC NO;
LVS_SPICE -PREFER_PINS YES;
LVS_ABORT -SUPPLY_ERROR NO;
LVS_ALL_CAP_PINS_SWAPPABLE YES;
LVS_RECOGNIZE_GATES -NONE;
LVS_IGNORE_PORTS NO;
LVS_COMPARE_PORT_NAMES YES;
LVS_REDUCE YES -PARALLEL_BIPOLAR;
LVS_REDUCE YES -PARALLEL_MOS;
LVS_REDUCE YES -PARALLEL_DIODES;
LVS_REDUCE YES -PARALLEL_CAPS;
LVS_REDUCE YES -PARALLEL_RESISTORS;
LVS_REDUCE YES -SERIES_RESISTORS;
LVS_REDUCE YES -SERIES_CAPS;
LVS_REDUCE_SPLIT_GATES NO;
LVS_FILTER_OPTION AG RC RE RG;
LVS_BREAK_AMBIG_MAX 65536;
BASE_LAYER ODI POI NP PP CO;
VIRTUAL_CONNECT -COLON YES;
LVS_POWER_NAME "AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL ";
LVS_GROUND_NAME "AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB ";
LAYER_DEF MAC 3000;
LAYER_MAP 208 -DATATYPE 1 3000;
LAYER_DEF RDKDMY 3001;
LAYER_MAP 208 -DATATYPE 2 3001;
LAYER_DEF DNW 1;
LAYER_DEF NW 3;
LAYER_DEF ODI_inter1 6;
LAYER_DEF ODI_inter2 7;
LAYER_DEF ODI_inter3 8;
CAT ODI_inter1 ODI_inter2 ODI_inter3 ODI;
LAYER_DEF DOD 3004;
LAYER_MAP 6 -DATATYPE 1 3004;
LAYER_DEF NT_Ni 11;
LAYER_DEF VTL_N 3006;
LAYER_MAP 12 -DATATYPE 0 3006;
LAYER_DEF VTL_N25 3007;
LAYER_MAP 12 -DATATYPE 2 3007;
LAYER_DEF VTL_P 3008;
LAYER_MAP 13 -DATATYPE 0 3008;
LAYER_DEF VTL_P25 3009;
LAYER_MAP 13 -DATATYPE 2 3009;
LAYER_DEF OD33 15;
LAYER_DEF OD18 16;
LAYER_DEF POI 17;
LAYER_DEF DPO 3013;
LAYER_MAP 17 -DATATYPE 1 3013;
LAYER_DEF CPO 3014;
LAYER_MAP 17 -DATATYPE 11 3014;
LAYER_DEF ILVT 3015;
LAYER_MAP 17 -DATATYPE 51 3015;
LAYER_DEF OD25 3016;
LAYER_MAP 18 -DATATYPE 0 3016;
LAYER_DEF OD25_33 3017;
LAYER_MAP 18 -DATATYPE 3 3017;
LAYER_DEF OD25_18 3018;
LAYER_MAP 18 -DATATYPE 4 3018;
LAYER_DEF OD25_28 3019;
LAYER_MAP 18 -DATATYPE 5 3019;
LAYER_DEF crown 102;
LAYER_DEF p3 103;
LAYER_DEF OD1T 27;
LAYER_DEF CAP1TDMY 78;
LAYER_DEF blc 101;
LAYER_DEF EDRAM_DECAP 3025;
LAYER_MAP 92 -DATATYPE 1 3025;
LAYER_DEF PP 25;
LAYER_DEF NP 26;
LAYER_DEF RPO 29;
LAYER_DEF CO 30;
LAYER_DEF M1 31;
LAYER_DEF M1_marker 3031;
LAYER_MAP 31 -DATATYPE 212 3031;
LAYER_MAP 31 -DATATYPE 220 3031;
LAYER_MAP 31 -DATATYPE 221 3031;
LAYER_MAP 31 -DATATYPE 225 3031;
LAYER_MAP 31 -DATATYPE 226 3031;
LAYER_MAP 31 -DATATYPE 227 3031;
LAYER_MAP 31 -DATATYPE 228 3031;
LAYER_DEF DUM1 3032;
LAYER_MAP 31 -DATATYPE 1 3032;
LAYER_MAP 31 -DATATYPE 41 3032;
LAYER_DEF M2 32;
LAYER_DEF M2_marker 3034;
LAYER_MAP 32 -DATATYPE 212 3034;
LAYER_MAP 32 -DATATYPE 220 3034;
LAYER_MAP 32 -DATATYPE 221 3034;
LAYER_MAP 32 -DATATYPE 225 3034;
LAYER_MAP 32 -DATATYPE 226 3034;
LAYER_MAP 32 -DATATYPE 227 3034;
LAYER_MAP 32 -DATATYPE 228 3034;
LAYER_DEF DUM2 3035;
LAYER_MAP 32 -DATATYPE 1 3035;
LAYER_MAP 32 -DATATYPE 41 3035;
LAYER_DEF M3 33;
LAYER_DEF M3_marker 3037;
LAYER_MAP 33 -DATATYPE 212 3037;
LAYER_MAP 33 -DATATYPE 220 3037;
LAYER_MAP 33 -DATATYPE 221 3037;
LAYER_MAP 33 -DATATYPE 225 3037;
LAYER_MAP 33 -DATATYPE 226 3037;
LAYER_MAP 33 -DATATYPE 227 3037;
LAYER_MAP 33 -DATATYPE 228 3037;
LAYER_DEF DUM3 3038;
LAYER_MAP 33 -DATATYPE 1 3038;
LAYER_MAP 33 -DATATYPE 21 3038;
LAYER_MAP 33 -DATATYPE 41 3038;
LAYER_MAP 33 -DATATYPE 81 3038;
LAYER_DEF M4 34;
LAYER_DEF M4_marker 3040;
LAYER_MAP 34 -DATATYPE 212 3040;
LAYER_MAP 34 -DATATYPE 220 3040;
LAYER_MAP 34 -DATATYPE 221 3040;
LAYER_MAP 34 -DATATYPE 225 3040;
LAYER_MAP 34 -DATATYPE 226 3040;
LAYER_MAP 34 -DATATYPE 227 3040;
LAYER_MAP 34 -DATATYPE 228 3040;
LAYER_DEF DUM4 3041;
LAYER_MAP 34 -DATATYPE 1 3041;
LAYER_MAP 34 -DATATYPE 21 3041;
LAYER_MAP 34 -DATATYPE 41 3041;
LAYER_MAP 34 -DATATYPE 61 3041;
LAYER_MAP 34 -DATATYPE 81 3041;
LAYER_DEF M5 35;
LAYER_DEF M5_marker 3043;
LAYER_MAP 35 -DATATYPE 212 3043;
LAYER_MAP 35 -DATATYPE 220 3043;
LAYER_MAP 35 -DATATYPE 221 3043;
LAYER_MAP 35 -DATATYPE 225 3043;
LAYER_MAP 35 -DATATYPE 226 3043;
LAYER_MAP 35 -DATATYPE 227 3043;
LAYER_MAP 35 -DATATYPE 228 3043;
LAYER_DEF DUM5 3044;
LAYER_MAP 35 -DATATYPE 1 3044;
LAYER_MAP 35 -DATATYPE 21 3044;
LAYER_MAP 35 -DATATYPE 41 3044;
LAYER_MAP 35 -DATATYPE 61 3044;
LAYER_MAP 35 -DATATYPE 81 3044;
LAYER_DEF M6 36;
LAYER_DEF M6_marker 3046;
LAYER_MAP 36 -DATATYPE 212 3046;
LAYER_MAP 36 -DATATYPE 220 3046;
LAYER_MAP 36 -DATATYPE 221 3046;
LAYER_MAP 36 -DATATYPE 225 3046;
LAYER_MAP 36 -DATATYPE 226 3046;
LAYER_MAP 36 -DATATYPE 227 3046;
LAYER_MAP 36 -DATATYPE 228 3046;
LAYER_DEF DUM6 3047;
LAYER_MAP 36 -DATATYPE 1 3047;
LAYER_MAP 36 -DATATYPE 21 3047;
LAYER_MAP 36 -DATATYPE 41 3047;
LAYER_MAP 36 -DATATYPE 61 3047;
LAYER_MAP 36 -DATATYPE 81 3047;
LAYER_DEF M7 37;
LAYER_DEF M7_marker 3049;
LAYER_MAP 37 -DATATYPE 212 3049;
LAYER_MAP 37 -DATATYPE 220 3049;
LAYER_MAP 37 -DATATYPE 221 3049;
LAYER_MAP 37 -DATATYPE 225 3049;
LAYER_MAP 37 -DATATYPE 226 3049;
LAYER_MAP 37 -DATATYPE 227 3049;
LAYER_MAP 37 -DATATYPE 228 3049;
LAYER_DEF DUM7 3050;
LAYER_MAP 37 -DATATYPE 1 3050;
LAYER_MAP 37 -DATATYPE 21 3050;
LAYER_MAP 37 -DATATYPE 41 3050;
LAYER_MAP 37 -DATATYPE 61 3050;
LAYER_MAP 37 -DATATYPE 81 3050;
LAYER_DEF M8 38;
LAYER_DEF DUM8 3052;
LAYER_MAP 38 -DATATYPE 1 3052;
LAYER_MAP 38 -DATATYPE 21 3052;
LAYER_MAP 38 -DATATYPE 41 3052;
LAYER_MAP 38 -DATATYPE 61 3052;
LAYER_MAP 38 -DATATYPE 81 3052;
LAYER_DEF M9 39;
LAYER_DEF DUM9 3054;
LAYER_MAP 39 -DATATYPE 1 3054;
LAYER_MAP 39 -DATATYPE 21 3054;
LAYER_MAP 39 -DATATYPE 41 3054;
LAYER_MAP 39 -DATATYPE 61 3054;
LAYER_MAP 39 -DATATYPE 81 3054;
LAYER_DEF SRM 3055;
LAYER_MAP 50 -DATATYPE 0 3055;
LAYER_DEF SRM10 3056;
LAYER_MAP 50 -DATATYPE 10 3056;
LAYER_DEF SRM11 3057;
LAYER_MAP 50 -DATATYPE 11 3057;
LAYER_DEF SRM12 3058;
LAYER_MAP 50 -DATATYPE 12 3058;
LAYER_DEF SRM13 3059;
LAYER_MAP 50 -DATATYPE 13 3059;
LAYER_DEF SRM14 3060;
LAYER_MAP 50 -DATATYPE 14 3060;
LAYER_DEF SRM15 3061;
LAYER_MAP 50 -DATATYPE 15 3061;
LAYER_DEF SRM16 3062;
LAYER_MAP 50 -DATATYPE 16 3062;
LAYER_DEF SRM17 3063;
LAYER_MAP 50 -DATATYPE 17 3063;
LAYER_DEF SRM23 3064;
LAYER_MAP 50 -DATATYPE 23 3064;
LAYER_DEF SRM_ULL 3065;
LAYER_MAP 50 -DATATYPE 68 3065;
LAYER_DEF VIA1i 51;
LAYER_DEF VIA2i 52;
LAYER_DEF VIA3i 53;
LAYER_DEF VIA4i 54;
LAYER_DEF VIA5i 55;
LAYER_DEF VIA6i 56;
LAYER_DEF VIA7i 57;
LAYER_DEF VIA8i 58;
LAYER_DEF VTH_N 67;
LAYER_DEF VTH_P 68;
LAYER_DEF VAR 3076;
LAYER_MAP 143 -DATATYPE 0 3076;
LAYER_DEF CI_CAP 3077;
LAYER_MAP 143 -DATATYPE 20 3077;
LAYER_DEF SBDDMY 3078;
LAYER_MAP 113 -DATATYPE 0 3078;
LAYER_DEF SBD3TDMY 3079;
LAYER_MAP 113 -DATATYPE 1 3079;
LAYER_DEF RH 117;
LAYER_DEF HRI 70;
LAYER_DEF ESD3 147;
LAYER_DEF CBD 169;
LAYER_DEF CB 76;
LAYER_DEF CB2 3085;
LAYER_MAP 86 -DATATYPE 0 3085;
LAYER_DEF AP 3086;
LAYER_MAP 74 -DATATYPE 0 3086;
LAYER_DEF DAP 3087;
LAYER_MAP 74 -DATATYPE 1 3087;
LAYER_DEF RV 85;
LAYER_DEF OD5 3089;
LAYER_MAP 82 -DATATYPE 4 3089;
LAYER_DEF OD6 3090;
LAYER_MAP 82 -DATATYPE 6 3090;
LAYER_DEF OD6_5 3091;
LAYER_MAP 82 -DATATYPE 42 3091;
LAYER_DEF DEP_VTN 3092;
LAYER_MAP 82 -DATATYPE 9 3092;
LAYER_DEF HVNWi 3093;
LAYER_MAP 154 -DATATYPE 5 3093;
LAYER_DEF HVPWi 3094;
LAYER_MAP 154 -DATATYPE 6 3094;
LAYER_DEF HVPSUB 3095;
LAYER_MAP 154 -DATATYPE 9 3095;
LAYER_DEF MCEL1 3096;
LAYER_MAP 154 -DATATYPE 13 3096;
LAYER_DEF CG 3097;
LAYER_MAP 154 -DATATYPE 14 3097;
LAYER_DEF HVT_HVNW 3098;
LAYER_MAP 154 -DATATYPE 27 3098;
LAYER_DEF HVT_HVPW 3099;
LAYER_MAP 154 -DATATYPE 28 3099;
LAYER_DEF VTUL_N 3100;
LAYER_MAP 151 -DATATYPE 0 3100;
LAYER_DEF VTUL_P 3101;
LAYER_MAP 152 -DATATYPE 0 3101;
LAYER_DEF HVD_P 3102;
LAYER_MAP 91 -DATATYPE 2 3102;
LAYER_DEF HVD_NW 3103;
LAYER_MAP 91 -DATATYPE 3 3103;
LAYER_DEF HVD_DPW 3104;
LAYER_MAP 91 -DATATYPE 4 3104;
LAYER_DEF HVD_DEP 3105;
LAYER_MAP 91 -DATATYPE 5 3105;
LAYER_DEF UHVT_N 3106;
LAYER_MAP 93 -DATATYPE 0 3106;
LAYER_DEF UHVT_P 3107;
LAYER_MAP 94 -DATATYPE 0 3107;
LAYER_DEF EHVT_N 3108;
LAYER_MAP 93 -DATATYPE 1 3108;
LAYER_DEF EHVT_P 3109;
LAYER_MAP 94 -DATATYPE 1 3109;
LAYER_DEF ELVT_N 3110;
LAYER_MAP 151 -DATATYPE 2 3110;
LAYER_DEF ELVT_P 3111;
LAYER_MAP 152 -DATATYPE 2 3111;
LAYER_DEF RODMY 49;
LAYER_DEF BJTDMY 3113;
LAYER_MAP 110 -DATATYPE 0 3113;
LAYER_DEF BJTDMY1 3114;
LAYER_MAP 110 -DATATYPE 1 3114;
LAYER_DEF BJT4TDMY 3115;
LAYER_MAP 110 -DATATYPE 2 3115;
LAYER_DEF BJT7TDMY 3116;
LAYER_MAP 110 -DATATYPE 3 3116;
LAYER_DEF BJTMDDMY 3117;
LAYER_MAP 110 -DATATYPE 4 3117;
LAYER_DEF BJTSNDMY 3118;
LAYER_MAP 110 -DATATYPE 5 3118;
LAYER_DEF BJT7TDMY_19 3119;
LAYER_MAP 110 -DATATYPE 6 3119;
LAYER_DEF BJT7TDMY_33 3120;
LAYER_MAP 110 -DATATYPE 7 3120;
LAYER_DEF BJT5TDMY 3121;
LAYER_MAP 110 -DATATYPE 8 3121;
LAYER_DEF PSUB2 111;
LAYER_DEF NWDMYi 3123;
LAYER_MAP 114 -DATATYPE 0 3123;
LAYER_DEF NWDMY1 3124;
LAYER_MAP 114 -DATATYPE 1 3124;
LAYER_DEF RPDMYi 3125;
LAYER_MAP 115 -DATATYPE 0 3125;
LAYER_DEF RPDMY1 3126;
LAYER_MAP 115 -DATATYPE 1 3126;
LAYER_DEF DIODMY 119;
LAYER_DEF DIO3TDMY 3128;
LAYER_MAP 119 -DATATYPE 1 3128;
LAYER_DEF MOMDMY0 3129;
LAYER_MAP 155 -DATATYPE 0 3129;
LAYER_DEF MOMDMY1 3130;
LAYER_MAP 155 -DATATYPE 1 3130;
LAYER_DEF MOMDMY2 3131;
LAYER_MAP 155 -DATATYPE 2 3131;
LAYER_DEF MOMDMY3 3132;
LAYER_MAP 155 -DATATYPE 3 3132;
LAYER_DEF MOMDMY4 3133;
LAYER_MAP 155 -DATATYPE 4 3133;
LAYER_DEF MOMDMY5 3134;
LAYER_MAP 155 -DATATYPE 5 3134;
LAYER_DEF MOMDMY6 3135;
LAYER_MAP 155 -DATATYPE 6 3135;
LAYER_DEF MOMDMY7 3136;
LAYER_MAP 155 -DATATYPE 7 3136;
LAYER_DEF MOMDMY_2T 3137;
LAYER_MAP 155 -DATATYPE 27 3137;
LAYER_DEF MOMDMY21 3138;
LAYER_MAP 155 -DATATYPE 21 3138;
LAYER_DEF MOMDMY22 3139;
LAYER_MAP 155 -DATATYPE 22 3139;
LAYER_DEF MOMDMY23 3140;
LAYER_MAP 155 -DATATYPE 23 3140;
LAYER_DEF MOMDMY24 3141;
LAYER_MAP 155 -DATATYPE 24 3141;
LAYER_DEF MOMDMY25 3142;
LAYER_MAP 155 -DATATYPE 25 3142;
LAYER_DEF RFDMY 161;
LAYER_DEF RFDMY5T 3144;
LAYER_MAP 161 -DATATYPE 3 3144;
LAYER_DEF RFDMY6T 3145;
LAYER_MAP 161 -DATATYPE 4 3145;
LAYER_DEF RFDMYUD 3146;
LAYER_MAP 161 -DATATYPE 10 3146;
LAYER_DEF RMDMY1 3147;
LAYER_MAP 116 -DATATYPE 1 3147;
LAYER_DEF RMDMY2 3148;
LAYER_MAP 116 -DATATYPE 2 3148;
LAYER_DEF RMDMY3 3149;
LAYER_MAP 116 -DATATYPE 3 3149;
LAYER_DEF RMDMY4 3150;
LAYER_MAP 116 -DATATYPE 4 3150;
LAYER_DEF RMDMY5 3151;
LAYER_MAP 116 -DATATYPE 5 3151;
LAYER_DEF RMDMY6 3152;
LAYER_MAP 116 -DATATYPE 6 3152;
LAYER_DEF RMDMY7 3153;
LAYER_MAP 116 -DATATYPE 7 3153;
LAYER_DEF RMDMY8 3154;
LAYER_MAP 116 -DATATYPE 8 3154;
LAYER_DEF RMDMY9 3155;
LAYER_MAP 116 -DATATYPE 9 3155;
LAYER_DEF RMDMYAP 3156;
LAYER_MAP 116 -DATATYPE 16 3156;
LAYER_DEF SRAMDMY 3157;
LAYER_MAP 186 -DATATYPE 0 3157;
LAYER_DEF SRAMPSGT 3158;
LAYER_MAP 186 -DATATYPE 1 3158;
LAYER_DEF SRAMCVSS 3159;
LAYER_MAP 186 -DATATYPE 3 3159;
LAYER_DEF SRAMTIMER 3160;
LAYER_MAP 186 -DATATYPE 6 3160;
LAYER_DEF IND_STD 3161;
LAYER_MAP 144 -DATATYPE 0 3161;
LAYER_DEF IND_SYM 3162;
LAYER_MAP 144 -DATATYPE 1 3162;
LAYER_DEF IND_CT 3163;
LAYER_MAP 144 -DATATYPE 2 3163;
LAYER_DEF IND_STD_MUA 3164;
LAYER_MAP 144 -DATATYPE 6 3164;
LAYER_DEF IND_SYM_MUA 3165;
LAYER_MAP 144 -DATATYPE 7 3165;
LAYER_DEF IND_CT_MUA 3166;
LAYER_MAP 144 -DATATYPE 8 3166;
LAYER_DEF IND_STD_MZAA 3167;
LAYER_MAP 144 -DATATYPE 9 3167;
LAYER_DEF IND_SYM_MZAA 3168;
LAYER_MAP 144 -DATATYPE 10 3168;
LAYER_DEF IND_CT_MZAA 3169;
LAYER_MAP 144 -DATATYPE 11 3169;
LAYER_DEF IND_STD_MZAA28 3170;
LAYER_MAP 144 -DATATYPE 44 3170;
LAYER_DEF IND_SYM_MZAA28 3171;
LAYER_MAP 144 -DATATYPE 45 3171;
LAYER_DEF IND_CT_MZAA28 3172;
LAYER_MAP 144 -DATATYPE 46 3172;
LAYER_DEF IND_RADi 3173;
LAYER_MAP 144 -DATATYPE 30 3173;
LAYER_DEF IND_GDIS 3174;
LAYER_MAP 144 -DATATYPE 31 3174;
LAYER_DEF IND_NR 3175;
LAYER_MAP 144 -DATATYPE 32 3175;
LAYER_DEF IND_MP 3176;
LAYER_MAP 144 -DATATYPE 33 3176;
LAYER_DEF IND_D4 3177;
LAYER_MAP 144 -DATATYPE 34 3177;
LAYER_DEF IND_S 3178;
LAYER_MAP 144 -DATATYPE 35 3178;
LAYER_DEF IND_PSW 3179;
LAYER_MAP 144 -DATATYPE 41 3179;
LAYER_DEF IND_W 3180;
LAYER_MAP 144 -DATATYPE 42 3180;
LAYER_DEF IND_CTW 3181;
LAYER_MAP 144 -DATATYPE 43 3181;
LAYER_DEF TLDMY 3182;
LAYER_MAP 144 -DATATYPE 40 3182;
LAYER_DEF DRAIN 3183;
LAYER_MAP 6 -DATATYPE 3 3183;
LAYER_DEF ctm 77;
LAYER_DEF cbm 88;
LAYER_DEF CAP1P5 3186;
LAYER_MAP 148 -DATATYPE 115 3186;
LAYER_DEF CAP2P0 3187;
LAYER_MAP 148 -DATATYPE 120 3187;
LAYER_DEF CAP1P0 3188;
LAYER_MAP 148 -DATATYPE 110 3188;
LAYER_DEF MIM_3TDMY 3189;
LAYER_MAP 148 -DATATYPE 21 3189;
LAYER_DEF CTMDMYUD 3190;
LAYER_MAP 148 -DATATYPE 10 3190;
LAYER_DEF PROBEM1 3191;
LAYER_MAP 75 -DATATYPE 1 3191;
LAYER_DEF PROBEM2 3192;
LAYER_MAP 75 -DATATYPE 2 3192;
LAYER_DEF PROBEM3 3193;
LAYER_MAP 75 -DATATYPE 3 3193;
LAYER_DEF PROBEM4 3194;
LAYER_MAP 75 -DATATYPE 4 3194;
LAYER_DEF PROBEM5 3195;
LAYER_MAP 75 -DATATYPE 5 3195;
LAYER_DEF PROBEM6 3196;
LAYER_MAP 75 -DATATYPE 6 3196;
LAYER_DEF PROBEM7 3197;
LAYER_MAP 75 -DATATYPE 7 3197;
LAYER_DEF PROBEAP 3198;
LAYER_MAP 75 -DATATYPE 16 3198;
LAYER_DEF DCO 3199;
LAYER_MAP 90 -DATATYPE 0 3199;
LAYER_DEF TCDDMY 3200;
LAYER_MAP 165 -DATATYPE 1 3200;
LAYER_DEF VTDN 3201;
LAYER_MAP 66 -DATATYPE 0 3201;
LAYER_DEF RFPADDMY 3202;
LAYER_MAP 129 -DATATYPE 0 3202;
LAYER_DEF RFPADDMY1 3203;
LAYER_MAP 129 -DATATYPE 1 3203;
LAYER_DEF RFPADDMY2 3204;
LAYER_MAP 129 -DATATYPE 2 3204;
LAYER_DEF RFPADDMY3 3205;
LAYER_MAP 129 -DATATYPE 3 3205;
LAYER_DEF HIADMY 3206;
LAYER_MAP 168 -DATATYPE 0 3206;
LAYER_DEF RHRI 3207;
LAYER_MAP 120 -DATATYPE 0 3207;
LAYER_DEF CAP_IMP 3208;
LAYER_MAP 121 -DATATYPE 4 3208;
LAYER_DEF CELLM 3209;
LAYER_MAP 121 -DATATYPE 5 3209;
LAYER_DEF MEDP 3210;
LAYER_MAP 121 -DATATYPE 6 3210;
LAYER_DEF CIRPO 3211;
LAYER_MAP 121 -DATATYPE 22 3211;
LAYER_DEF CTP 3212;
LAYER_MAP 121 -DATATYPE 14 3212;
LAYER_DEF HRP 3213;
LAYER_MAP 121 -DATATYPE 12 3213;
LAYER_DEF RBCDMY 3214;
LAYER_MAP 208 -DATATYPE 100 3214;
LAYER_DEF DIFRBC 3215;
LAYER_MAP 208 -DATATYPE 101 3215;
LAYER_DEF XCLRBC 3216;
LAYER_MAP 208 -DATATYPE 102 3216;
LAYER_DEF CASRBC 3217;
LAYER_MAP 208 -DATATYPE 103 3217;
LAYER_DEF GTDMY1 3218;
LAYER_MAP 208 -DATATYPE 104 3218;
LAYER_DEF GTDMY2 3219;
LAYER_MAP 208 -DATATYPE 105 3219;
LAYER_DEF RFESDMY 3220;
LAYER_MAP 208 -DATATYPE 106 3220;
LAYER_DEF TSV 3221;
LAYER_MAP 251 -DATATYPE 0 3221;
LAYER_DEF APB 3222;
LAYER_MAP 74 -DATATYPE 100 3222;
LAYER_DEF CB2Bi 3223;
LAYER_MAP 86 -DATATYPE 100 3223;
LAYER_DEF IND_TEXT 3224;
LAYER_MAP 144 -TEXTTYPE 39 3224;
LAYER_DEF IND_STD_TEXT 3225;
LAYER_MAP 144 -TEXTTYPE 39 3225;
LAYER_DEF RBC_TEXT 3226;
LAYER_MAP 208 -TEXTTYPE 108 3226;
LAYER_DEF metal1_text 3227;
LAYER_MAP 131 -TEXTTYPE -lege 0 255 3227;
PORT -TEXT_LAYER metal1_text;
TEXT_LAYER metal1_text;
ATTACH metal1_text metal1;
LAYER_DEF metal10_text 3228;
LAYER_MAP 126 -TEXTTYPE -lege 0 255 3228;
PORT -TEXT_LAYER metal10_text;
TEXT_LAYER metal10_text;
ATTACH metal10_text metal10;
LAYER_DEF metal2_text 3229;
LAYER_MAP 132 -TEXTTYPE -lege 0 255 3229;
PORT -TEXT_LAYER metal2_text;
TEXT_LAYER metal2_text;
ATTACH metal2_text metal2;
LAYER_DEF metal3_text 3230;
LAYER_MAP 133 -TEXTTYPE -lege 0 255 3230;
PORT -TEXT_LAYER metal3_text;
TEXT_LAYER metal3_text;
ATTACH metal3_text metal3;
LAYER_DEF metal4_text 3231;
LAYER_MAP 134 -TEXTTYPE -lege 0 255 3231;
PORT -TEXT_LAYER metal4_text;
TEXT_LAYER metal4_text;
ATTACH metal4_text metal4;
LAYER_DEF metal5_text 3232;
LAYER_MAP 135 -TEXTTYPE -lege 0 255 3232;
PORT -TEXT_LAYER metal5_text;
TEXT_LAYER metal5_text;
ATTACH metal5_text metal5;
LAYER_DEF metal6_text 3233;
LAYER_MAP 136 -TEXTTYPE -lege 0 255 3233;
PORT -TEXT_LAYER metal6_text;
TEXT_LAYER metal6_text;
ATTACH metal6_text metal6;
LAYER_DEF metal7_text 3234;
LAYER_MAP 137 -TEXTTYPE -lege 0 255 3234;
PORT -TEXT_LAYER metal7_text;
TEXT_LAYER metal7_text;
ATTACH metal7_text metal7;
LAYER_DEF metal8_text 3235;
LAYER_MAP 138 -TEXTTYPE -lege 0 255 3235;
PORT -TEXT_LAYER metal8_text;
TEXT_LAYER metal8_text;
ATTACH metal8_text metal8;
LAYER_DEF metal9_text 3236;
LAYER_MAP 139 -TEXTTYPE -lege 0 255 3236;
PORT -TEXT_LAYER metal9_text;
TEXT_LAYER metal9_text;
ATTACH metal9_text metal9;
LAYER_DEF poly_text 3237;
LAYER_MAP 149 -TEXTTYPE -lege 0 255 3237;
TEXT_LAYER poly_text;
ATTACH poly_text poly;
PORT -TEXT_LAYER poly_text;
LAYER_DEF sline_m9m_text 3238;
LAYER_MAP 139 -TEXTTYPE -lege 0 255 3238;
PORT -TEXT_LAYER sline_m9m_text;
TEXT_LAYER sline_m9m_text;
ATTACH sline_m9m_text sline_m9m;
LAYER_DEF sline_m9p_text 3239;
LAYER_MAP 139 -TEXTTYPE -lege 0 255 3239;
PORT -TEXT_LAYER sline_m9p_text;
TEXT_LAYER sline_m9p_text;
ATTACH sline_m9p_text sline_m9p;
EXTENT DRC:1;
SIZE DRC:1 -BY 0.005 BULK;
AND POI RH rpolywo1;
AND rpolywo1 RPO rpolywo2;
OR RPDMYi RPDMY1 RPDMY;
OR ODI DOD OD;
AND RODMY SRM rodsrm;
NOT OD rodsrm diffa;
SELECT -INTERACT diffa CO diff;
SELECT -INTERACT RPDMY diff -NOT rp1;
SELECT -INTERACT rp1 POI p1rdum;
SELECT -INTERACT rpolywo2 p1rdum rpolywo;
NOT POI rpolywo poly1;
AND POI p1rdum rpoly1;
SELECT -INTERACT rpoly1 RPO -NOT rpoly;
NOT poly1 rpoly poly21;
OR poly21 DPO poly_org;
COPY poly_org poly;
SELECT -INSIDE poly diff dumpo1;
SELECT -INTERACT dumpo1 CO -NOT dumpo2;
NOT poly dumpo2 realpo;
AND diff RH rodwo1;
AND rodwo1 RPO rodwo2;
SELECT -INTERACT RPDMY diff drdum;
SELECT -INTERACT rodwo2 drdum rodwo3;
SELECT -INTERACT rodwo3 ODI rodwo;
NOT diff rodwo mdiff1;
AND diff drdum rod1;
SELECT -INTERACT rod1 RPO -NOT rod2;
SELECT -INTERACT rod2 ODI rod;
NOT mdiff1 rod mdiff;
AND realpo mdiff gate11;
AND realpo RBCDMY poly_rbc_dmy1;
OR GTDMY1 GTDMY2 GTDMY;
SELECT -INTERACT poly_rbc_dmy1 GTDMY -NOT poly_rbc_dmy;
NOT gate11 poly_rbc_dmy gate1;
SELECT -INTERACT RFDMY RBCDMY -NOT RFDMY_pure;
AND gate1 RFDMY_pure gate_a_rfi1;
NOT gate_a_rfi1 SRM gate_a_rfi;
SELECT -INTERACT poly CO poly_rf1;
SELECT -INTERACT poly_rf1 DRAIN poly_rf;
AND gate_a_rfi poly_rf gate_rfb;
NOT gate1 gate_rfb gate_a;
AND gate1 RBCDMY gate_a_rbc;
SELECT -INTERACT poly_rf1 GTDMY poly_rbc;
AND gate_a_rbc poly_rbc gate_rbc;
NOT gate_a gate_rbc gate_b;
OR gate_a_rbc gate_a_rfi gate_a_rf;
SELECT -INTERACT mdiff DRAIN rf_diff;
SELECT -INTERACT gate_a_rf rf_diff poly_rf_all;
SELECT -INTERACT poly_rf_all CO -NOT poly_rf_noco;
NOT gate_b poly_rf_noco gate;
NOT gate SRM gate_nosr1;
COPY HVNWi HVNW;
NOT gate_nosr1 HVNW gate_nosr2;
COPY HVPWi HVPW;
NOT gate_nosr2 HVPW gate_nosr3;
NOT gate_nosr3 HVPSUB gate_nosr;
OR NWDMYi NWDMY1 NWDMY;
NOT NW NWDMY nxwella;
NOT nxwella HVNW nxwell;
NOT gate_nosr nxwell gatennw;
AND gatennw NP tngate1;
COPY tngate1 tngate1a;
NOT tngate1a OD5 tngate1b;
NOT tngate1b OD6 tngate1c;
NOT tngate1c OD25 tngate2;
NOT tngate2 OD33 tngate3;
NOT tngate3 OD18 tngate4;
NOT tngate4 NT_Ni tngate5;
NOT tngate5 DNW tngate6;
AND tngate6 VTL_N nlvgate_org11;
COPY nlvgate_org11 nlvgate_org1;
NOT tngate6 nlvgate_org1 ngate1;
AND tngate6 VTH_N nhvgate1;
NOT nhvgate1 DCO nhvgate2;
NOT ngate1 nhvgate2 ngate21;
NOT tngate6 VTH_N nehvgate1;
NOT nehvgate1 DCO nehvgate2;
NOT nehvgate2 ELVT_N nehvgate_org1;
AND nehvgate_org1 EHVT_N nehvgate_org;
NOT ngate21 nehvgate_org ngate22;
AND nehvgate2 ELVT_N nelvgate_org;
NOT ngate22 nelvgate_org ngate2;
NOT tngate6 OD1T tngate7;
AND tngate7 VTUL_N nuvgate_org1;
NOT ngate2 nuvgate_org1 ngate31;
AND tngate6 UHVT_N nuhvgate_org1;
NOT ngate31 nuhvgate_org1 ngate3;
NOT ngate3 OD1T ngate4;
NOT ngate4 ILVT ngate51;
AND gate1 NP hngate0;
AND hngate0 HVPSUB hngate1;
NOT ngate51 hngate1 ngate5;
NOT ngate5 DCO ngate_org1;
COPY ngate_org1 ngate_org;
NOT ngate_org MAC ngate;
AND mdiff NP nthin1;
AND ESD3 OD ydio_a;
SIZE ydio_a -BY -0.2 ydio_c;
AND ydio_c NP ydio_d;
AND ydio_d RPO ydio_e;
NOT ydio_e NW ydio_f;
AND ESD3 POI ydio_g;
SIZE ydio_g -BY 0.2 ydio_h;
NOT ydio_f ydio_h ydio_i;
SIZE ydio_i -BY -0.8 ydio_j;
SIZE ydio_j -BY 0.6 ydio;
NOT nthin1 ydio nthin;
NOT nthin gate1 tndiffa;
NOT diffa diff diffb;
AND diffb NP ndiffb;
OR tndiffa ndiffb tndiff_ori;
NOT tndiff_ori DRAIN s_tndiff1;
SELECT -OUTSIDE s_tndiff1 GTDMY2 s_tndiff1_1;
NOT gate_rfb VAR gate_rf;
OR gate_rbc gate_rf gate_rf_all;
SELECT -INTERACT s_tndiff1_1 gate_rf_all s_tndiff;
NOT tndiff_ori s_tndiff tndiff_ori1;
SELECT -INTERACT s_tndiff1 GTDMY2 s_tndiff_cas1;
SELECT -INTERACT s_tndiff_cas1 CO s_tndiff_cas;
NOT tndiff_ori1 s_tndiff_cas tndiff_ori2_1;
AND tndiff_ori HVD_NW d_nd25hvdw1;
NOT d_nd25hvdw1 HVD_DPW d_nd25hvdw;
NOT tndiff_ori2_1 d_nd25hvdw tndiff_ori2_2;
AND tndiff_ori HVD_DPW d_nd25hvi1;
AND d_nd25hvi1 HVD_NW d_nd25hvi;
NOT tndiff_ori2_2 d_nd25hvi tndiff_ori2;
AND tndiff_ori DRAIN d_tndiff;
NOT tndiff_ori2 d_tndiff tndiff;
OR HVNW NW anwel;
NOT BULK anwel ppsub;
SIZE PSUB2 -BY 0.01 psub2s;
NOT psub2s PSUB2 psubband;
NOT ppsub psubband psub;
AND ngate_org MAC ngate_mac;
COPY nlvgate_org1 nlvgate_org;
NOT nlvgate_org MAC nlvgate;
AND nlvgate_org MAC nlvgate_mac;
AND gate SRM gate_s1a;
NOT gate_s1a HVNW gate_s1b;
NOT gate_s1b HVPW gate_s1c;
NOT gate_s1c HVPSUB gate_s1;
NOT gate_s1 nxwell gatennw_s;
AND gatennw_s NP ngate_s1;
NOT ngate_s1 OD5 ngate_s21;
NOT ngate_s21 OD6 ngate_s22;
NOT ngate_s22 OD25 ngate_s2;
NOT ngate_s2 OD33 ngate_s3;
NOT ngate_s3 OD18 ngate_s4;
NOT ngate_s4 VTL_N ngate_s5;
NOT ngate_s5 VTUL_N ngate_s611;
NOT ngate_s611 UHVT_N ngate_s612;
NOT ngate_s612 SRAMTIMER ngate_s61;
NOT ngate_s61 SRM14 ngate_s62;
NOT ngate_s62 SRM12 ngate_s63;
NOT ngate_s63 SRM13 ngate_s64;
NOT ngate_s64 SRM17 ngate_s65;
NOT ngate_s65 SRM16 ngate_s6;
NOT ngate_s6 VTH_N ngate_s_org1;
SIZE SRM10 -BY 0.005 SRM10_1;
NOT SRM10 SRM10_1 LPSRM10;
NOT ngate_s_org1 LPSRM10 ngate_s_org2;
SIZE SRM11 -BY 0.005 SRM11_1;
NOT SRM11 SRM11_1 LPSRM11;
NOT ngate_s_org2 LPSRM11 ngate_s_org;
NOT ngate_s_org DCO ngate_s;
AND ngate_s SRAMPSGT ngate_spg;
NOT ngate_s SRAMPSGT ngate_spd;
NOT ngate_s62 SRM17 ngate_s71;
AND ngate_s71 SRM12 ngate_s7;
NOT ngate_s7 VTH_N ngate_sdp_org;
NOT ngate_sdp_org DCO ngate_sdp;
AND ngate_sdp SRAMPSGT ngate_spgdp;
NOT ngate_sdp SRAMPSGT ngate_spddp;
AND gate_nosr nxwell gatenw;
AND gatenw PP tpgate1;
NOT tpgate1 OD5 tpgate1a;
NOT tpgate1a OD6 tpgate1b;
NOT tpgate1b OD25 tpgate2;
NOT tpgate2 OD33 tpgate3;
NOT tpgate3 OD18 tpgate4;
AND tpgate4 VTL_P plvgate_org11;
COPY plvgate_org11 plvgate_org1;
NOT tpgate4 plvgate_org1 pgate1;
AND tpgate4 VTH_P phvgate1;
NOT phvgate1 DCO phvgate2;
NOT pgate1 phvgate2 pgate21;
NOT tpgate4 VTH_P pehvgate1;
NOT pehvgate1 DCO pehvgate2;
NOT pehvgate2 ELVT_P pehvgate_org1;
AND pehvgate_org1 EHVT_P pehvgate_org;
NOT pgate21 pehvgate_org pgate22;
AND pehvgate2 ELVT_P pelvgate_org;
NOT pgate22 pelvgate_org pgate2;
NOT tpgate3 OD1T tpgate5;
AND tpgate5 VTUL_P puvgate_org1;
NOT pgate2 puvgate_org1 pgate31;
AND tpgate4 UHVT_P puhvgate_org1;
NOT pgate31 puhvgate_org1 pgate3;
NOT pgate3 ILVT pgate4;
NOT pgate4 OD1T pgate5;
NOT pgate5 DCO pgate6;
COPY pgate6 pgate_org;
NOT pgate_org MAC pgate;
AND mdiff PP pthin;
NOT pthin gate1 tpdiffa;
NOT diffb ndiffb pdiffb;
OR tpdiffa pdiffb tpdiff_ori;
NOT tpdiff_ori DRAIN s_tpdiff1;
SELECT -INTERACT s_tpdiff1 gate_rf s_tpdiff;
NOT tpdiff_ori s_tpdiff tpdiff_ori1_1;
AND tpdiff_ori HVD_P d_pd25hvd;
NOT tpdiff_ori1_1 d_pd25hvd tpdiff_ori1;
AND tpdiff_ori DRAIN d_tpdiff;
NOT tpdiff_ori1 d_tpdiff tpdiff;
AND pgate_org MAC pgate_mac;
COPY plvgate_org1 plvgate_org;
NOT plvgate_org MAC plvgate;
AND plvgate_org MAC plvgate_mac;
AND gate_s1 nxwell gatenw_s;
AND gatenw_s PP pgate_s1;
NOT pgate_s1 OD5 pgate_s21;
NOT pgate_s21 OD6 pgate_s22;
NOT pgate_s22 OD25 pgate_s2;
NOT pgate_s2 OD33 pgate_s3;
NOT pgate_s3 OD18 pgate_s4;
NOT pgate_s4 VTL_P pgate_s5;
NOT pgate_s5 VTUL_P pgate_s611;
NOT pgate_s611 UHVT_P pgate_s612;
NOT pgate_s612 SRAMTIMER pgate_s61;
NOT pgate_s61 SRM14 pgate_s62;
NOT pgate_s62 SRM12 pgate_s63;
NOT pgate_s63 SRM13 pgate_s64;
NOT pgate_s64 SRM17 pgate_s6;
NOT pgate_s6 VTH_P pgate_s_org1;
NOT pgate_s_org1 LPSRM10 pgate_s_org2;
NOT pgate_s_org2 LPSRM11 pgate_s_org;
NOT pgate_s_org DCO pgate_s;
NOT pgate_s62 SRM17 pgate_s71;
AND pgate_s71 SRM12 pgate_s7;
NOT pgate_s7 VTH_P pgate_sdp_org;
NOT pgate_sdp_org DCO pgate_sdp;
NOT hngate1 HVNW hngate2;
OR OD25 OD18 OD_thk;
OR OD_thk OD33 OD2;
NOT hngate2 OD2 hngate3;
NOT hngate3 NT_Ni hngate4;
NOT hngate4 VTL_N hngate5;
NOT hngate5 VTH_N hngate6;
NOT hngate6 UHVT_N hngate7;
NOT hngate7 DNW hngate8;
AND hngate8 HVPW hngate;
NOT hngate8 HVPW hzgate;
AND gate1 PP hpgate0;
NOT hpgate0 HVPSUB hpgate1;
NOT hpgate1 HVPW hpgate2;
AND hpgate2 HVNW hpgate3;
NOT hpgate3 OD2 hpgate4;
NOT hpgate4 VTL_P hpgate5;
NOT hpgate5 VTH_P hpgate6;
NOT hpgate6 UHVT_P hpgate;
AND tngate5 DNW tdgate1a;
NOT tdgate1a OD1T tdgate1;
AND tdgate1 VTL_N n1lvgate_org1;
NOT tdgate1 n1lvgate_org1 nrgate1;
AND tdgate1 VTH_N n1hvgate1;
NOT n1hvgate1 DCO n1hvgate_org1;
NOT nrgate1 n1hvgate_org1 nrgate21;
NOT tdgate1 VTH_N n1ehvgate1;
NOT n1ehvgate1 DCO n1ehvgate_org1;
NOT n1ehvgate_org1 ELVT_N n1ehvgate_org2;
AND n1ehvgate_org2 EHVT_N n1ehvgate_org;
NOT nrgate21 n1ehvgate_org nrgate22;
AND n1ehvgate_org1 ELVT_N n1elvgate_org;
NOT nrgate22 n1elvgate_org nrgate2;
AND tdgate1 VTUL_N n1uvgate_org1;
NOT nrgate2 n1uvgate_org1 nrgate31;
AND tdgate1 UHVT_N n1uhvgate_org1;
NOT nrgate31 n1uhvgate_org1 nrgate3;
NOT nrgate3 ILVT nrgate4;
NOT nrgate4 DCO nrgate_org1;
COPY nrgate_org1 nrgate_org;
NOT nrgate_org MAC nrgate;
AND nrgate_org MAC nrgate_mac;
NOT nhvgate2 EHVT_N nhvgate_org1;
NOT nhvgate_org1 ELVT_N nhvgate_org;
NOT nhvgate_org MAC nhvgate;
NOT n1hvgate_org1 EHVT_N n1hvgate_org2;
NOT n1hvgate_org2 ELVT_N n1hvgate_org;
NOT n1hvgate_org MAC n1hvgate;
AND nhvgate_org MAC nhvgate_mac;
AND n1hvgate_org MAC n1hvgate_mac;
COPY n1lvgate_org1 n1lvgate_org;
NOT n1lvgate_org MAC n1lvgate;
AND n1lvgate_org MAC n1lvgate_mac;
COPY nuvgate_org1 nuvgate_org;
NOT nuvgate_org MAC nuvgate;
COPY n1uvgate_org1 n1uvgate_org;
NOT n1uvgate_org MAC n1uvgate;
AND nuvgate_org MAC nuvgate_mac;
AND n1uvgate_org MAC n1uvgate_mac;
COPY nuhvgate_org1 nuhvgate_org;
NOT nuhvgate_org MAC nuhvgate;
COPY n1uhvgate_org1 n1uhvgate_org;
NOT n1uhvgate_org MAC n1uhvgate;
AND nuhvgate_org MAC nuhvgate_mac;
AND n1uhvgate_org MAC n1uhvgate_mac;
NOT tngate5 nlvgate_org1 ngatelpg1;
NOT ngatelpg1 nhvgate2 ngatelpg2;
NOT ngatelpg2 nuvgate_org1 ngatelpg3;
NOT ngatelpg3 nuhvgate_org1 ngatelpg4;
NOT ngatelpg4 OD1T ngatelpg5;
NOT ngatelpg5 ILVT ngatelpg6;
AND tngate5 VTH_N nhvgate1a;
AND nhvgate1a DCO nhvgatelpg;
NOT ngatelpg6 nhvgatelpg ngatelpg7;
AND ngatelpg7 DCO ngatelpg;
AND tngate4 NT_Ni nlgate1;
NOT nlgate1 VTL_N nlgate2;
NOT nlgate2 VTH_N nlgate3;
NOT nlgate3 VTUL_N nlgate4;
NOT nlgate4 DNW nlgate5;
NOT nlgate5 ILVT nlgate6;
AND nlgate6 DCO nlgatelpg;
NOT nlgate6 DCO nlgate7;
NOT nlgate7 MAC nlgate;
AND nlgate7 MAC nlgate_mac;
AND tngate5 OD1T ngate_1ta;
NOT ngate_1ta VTL_N ngate_1tb1;
COPY ngate_1tb1 ngate_1tb;
NOT ngate_1tb VTH_N ngate_1tc;
NOT ngate_1tc VTUL_N ngate_1td;
NOT ngate_1td CAP1TDMY ngate_1te;
SELECT -INTERACT ngate_1te p3 -NOT ngate_1tf;
NOT ngate_1tf DNW ngate_w1t;
AND ngate_1tc VTUL_N ngate_1tg;
NOT ngate_1tg CAP1TDMY ngate_1th;
SELECT -INTERACT ngate_1th p3 -NOT ngate_1ti;
NOT ngate_1ti DNW ngate_w1t_lvt;
AND ngate_1tf DNW ngate_dnw_w;
AND ngate_1ti DNW ngate_dnw_w_lvt;
AND ngate_1te DNW ngate_1te_dnw;
SELECT -INTERACT ngate_1te_dnw p3 ngate_1tr;
AND ngate3 ILVT nilvtgate_org1;
COPY nilvtgate_org1 nilvtgate_org;
NOT nilvtgate_org MAC nilvtgate;
AND nrgate3 ILVT n1ilvtgate_org1;
COPY n1ilvtgate_org1 n1ilvtgate_org;
NOT n1ilvtgate_org MAC n1ilvtgate;
AND nilvtgate_org MAC nilvtgate_mac;
AND n1ilvtgate_org MAC n1ilvtgate_mac;
AND pgate3 ILVT pilvtgate_org1;
COPY pilvtgate_org1 pilvtgate_org;
NOT pilvtgate_org MAC pilvtgate;
AND pilvtgate_org MAC pilvtgate_mac;
AND ngate_s_org DCO ngate_slpg;
AND ngate_slpg SRAMPSGT ngate_spglpg;
NOT ngate_slpg SRAMPSGT ngate_spdlpg;
AND ngate_s65 VTH_N ngate_hvs1;
NOT ngate_hvs1 SRM_ULL ngate_hvs;
AND ngate_hvs SRAMPSGT ngate_hvspg;
NOT ngate_hvs SRAMPSGT ngate_hvspd;
AND ngate_s612 SRAMTIMER ngate_st;
AND ngate_sdp_org DCO ngate_sdplpg;
AND ngate_sdplpg SRAMPSGT ngate_spglpgdp;
NOT ngate_sdplpg SRAMPSGT ngate_spdlpgdp;
AND ngate_s7 VTH_N ngate_hvsdp1;
NOT ngate_hvsdp1 SRM_ULL ngate_hvsdp;
AND ngate_hvsdp SRAMPSGT ngate_hvspgdp;
NOT ngate_hvsdp SRAMPSGT ngate_hvspddp;
AND ngate_s63 SRM13 ngate_s8;
NOT ngate_s8 VTH_N ngate_sdphc;
AND ngate_sdphc SRAMPSGT ngate_spgdphc;
NOT ngate_sdphc SRAMPSGT ngate_spddphc;
AND ngate_s8 VTH_N ngate_hvsdphc;
AND ngate_hvsdphc SRAMPSGT ngate_hvspgdphc;
NOT ngate_hvsdphc SRAMPSGT ngate_hvspddphc;
AND ngate_s63 SRM16 ngate_s9;
NOT ngate_s9 VTH_N ngate_swo1;
AND ngate_s_org2 LPSRM11 ngate_swo2;
OR ngate_swo1 ngate_swo2 ngate_swo;
AND ngate_swo SRAMPSGT ngate_spgwo;
NOT ngate_swo SRAMPSGT ngate_spdwo;
NOT ngate_s_org1 LPSRM11 ngate_swi1;
AND ngate_swi1 LPSRM10 ngate_swi;
AND ngate_swi SRAMPSGT ngate_spgwi;
NOT ngate_swi SRAMPSGT ngate_spdwi;
AND pgate_s_org2 LPSRM11 pgate_swo;
NOT pgate_s_org1 LPSRM11 pgate_swi1;
AND pgate_swi1 LPSRM10 pgate_swi;
AND ngate_s62 SRM17 ngate_s10;
NOT ngate_s10 SRM12 ngate_s11;
AND ngate_s11 VTH_N ngate_sulp;
AND ngate_sulp SRAMPSGT ngate_spgulp;
NOT ngate_sulp SRAMPSGT ngate_spdulp;
AND ngate_s10 SRM12 ngate_s12;
AND ngate_s12 VTH_N ngate_sdpulp;
AND ngate_sdpulp SRAMPSGT ngate_spgulpdp;
NOT ngate_sdpulp SRAMPSGT ngate_spdulpdp;
AND ngate_s61 SRM14 ngate_s13;
NOT ngate_s13 VTH_N ngate_stp_org;
AND ngate_stp_org DCO ngate_stplpg;
AND ngate_stplpg SRAMPSGT ngate_spglpgtp;
NOT ngate_stplpg SRAMPSGT ngate_spdlpgtp;
AND tngate1 OD18 ngate_18a1;
COPY ngate_18a1 ngate_18a;
NOT ngate_18a NT_Ni ngate_18b;
NOT ngate_18b DNW ngate_18c;
NOT ngate_18c VTL_N ngate_18_org11;
COPY ngate_18_org11 ngate_18_org1;
SELECT -INTERACT ngate_18_org1 RH -NOT ngate_18_org;
NOT ngate_18_org MAC ngate_18;
AND ngate_18b DNW dngate_18a;
NOT dngate_18a VTL_N dngate_18_org1;
SELECT -INTERACT dngate_18_org1 RH -NOT dngate_18_org;
NOT dngate_18_org MAC dngate_18;
AND ngate_18_org MAC ngate_18_mac;
AND dngate_18_org MAC dngate_18_mac;
SELECT -INTERACT ngate_18_org1 RH ngate_esd18_org1;
SELECT -INTERACT ngate_esd18_org1 RPO ngate_esd18_org;
NOT ngate_esd18_org MAC ngate_esd18;
SELECT -INTERACT dngate_18_org1 RH dngate_esd18_org1;
SELECT -INTERACT dngate_esd18_org1 RPO dngate_esd18_org;
NOT dngate_esd18_org MAC dngate_esd18;
AND ngate_esd18_org MAC ngate_esd18_mac;
AND dngate_esd18_org MAC dngate_esd18_mac;
AND tngate1 OD25 ngate_25a1;
COPY ngate_25a1 ngate_25a;
NOT ngate_25a NT_Ni ngate_25b;
NOT ngate_25b DNW ngate_25c1;
NOT ngate_25c1 CELLM ngate_25c2;
NOT ngate_25c2 CAP_IMP ngate_25c;
SELECT -INTERACT ngate_25c HVD_NW -NOT ngate_25e;
NOT ngate_25e VTL_N ngate_25_org1;
COPY ngate_25_org1 ngate_25_org;
AND ngate_25_org OD25_18 ngate_25ud1;
NOT ngate_25_org ngate_25ud1 ngate_25z;
AND ngate_25_org OD25_33 ngate_25od1;
NOT ngate_25z ngate_25od1 ngate_25y;
AND ngate_25_org OD25_28 ngate_25od281;
NOT ngate_25y ngate_25od281 ngate_25x;
NOT ngate_25x MAC ngate_25;
AND ngate_25b DNW dngate_25a1;
NOT dngate_25a1 HVD_DPW dngate_25a;
NOT dngate_25a CELLM dngate_25b;
NOT dngate_25b CAP_IMP dngate_25c;
NOT dngate_25c VTL_N dngate_25_org1;
COPY dngate_25_org1 dngate_25_org;
AND dngate_25_org OD25_18 dngate_25ud1;
NOT dngate_25_org dngate_25ud1 dngate_25z;
AND dngate_25_org OD25_33 dngate_25od1;
NOT dngate_25z dngate_25od1 dngate_25y;
AND dngate_25_org OD25_28 dngate_25od281;
NOT dngate_25y dngate_25od281 dngate_25x;
NOT dngate_25x MAC dngate_25;
AND ngate_25x MAC ngate_25_mac;
AND dngate_25x MAC dngate_25_mac;
NOT ngate_25ud1 MAC ngate_25ud;
NOT dngate_25ud1 MAC dngate_25ud;
AND ngate_25ud1 MAC ngate_25ud_mac;
AND dngate_25ud1 MAC dngate_25ud_mac;
NOT ngate_25od1 MAC ngate_25od;
NOT dngate_25od1 MAC dngate_25od;
AND ngate_25od1 MAC ngate_25od_mac;
AND dngate_25od1 MAC dngate_25od_mac;
SELECT -INTERACT ngate_25c HVD_NW ngate_25hvdw_org1;
NOT ngate_25hvdw_org1 HVD_DPW ngate_25hvdw_org;
NOT ngate_25hvdw_org MAC ngate_25hvdw;
NOT tndiff_ori HVD_NW s_nd25hvdw1;
NOT s_nd25hvdw1 HVD_DPW s_nd25hvdw2;
SELECT -INTERACT s_nd25hvdw2 ngate_25hvdw_org s_nd25hvdw;
AND ngate_25hvdw_org MAC ngate_25hvdw_mac;
AND tpgate1 OD25 pgate_25a1;
NOT pgate_25a1 MEDP pgate_25a;
SELECT -INTERACT pgate_25a HVD_P pgate_25hvd_org;
NOT pgate_25hvd_org MAC pgate_25hvd;
NOT tpdiff_ori HVD_P s_pd25hvd1;
SELECT -INTERACT s_pd25hvd1 pgate_25hvd_org s_pd25hvd;
AND pgate_25hvd_org MAC pgate_25hvd_mac;
AND tngate1 OD33 ngate_33a1;
COPY ngate_33a1 ngate_33a;
NOT ngate_33a NT_Ni ngate_33b;
NOT ngate_33b DNW ngate_33c;
NOT ngate_33c VTL_N ngate_33_org11;
COPY ngate_33_org11 ngate_33_org1;
NOT ngate_33_org1 CAP_IMP ngate_33_org2;
NOT ngate_33_org2 CELLM ngate_33_org;
NOT ngate_33_org MAC ngate_33;
AND ngate_33b DNW dngate_33a;
NOT dngate_33a VTL_N dngate_33_org1;
COPY dngate_33_org1 dngate_33_org2;
NOT dngate_33_org2 CAP_IMP dngate_33_org3;
NOT dngate_33_org3 CELLM dngate_33_org;
NOT dngate_33_org MAC dngate_33;
AND ngate_33_org MAC ngate_33_mac;
AND dngate_33_org MAC dngate_33_mac;
AND ngate_25a NT_Ni ngate_25na1;
NOT ngate_25na1 VTL_N ngate_25na2;
COPY ngate_25na2 ngate_25na3;
NOT ngate_25na3 DNW ngate_25na4;
NOT ngate_25na4 CAP_IMP ngate_25na_org;
AND ngate_25na_org OD25_18 ngate_25naud1;
NOT ngate_25na_org ngate_25naud1 ngate_25naz;
AND ngate_25na_org OD25_33 ngate_25naod1;
NOT ngate_25naz ngate_25naod1 ngate_25nay;
NOT ngate_25nay MAC ngate_25na;
AND ngate_25nay MAC ngate_25na_mac;
NOT ngate_25naud1 MAC ngate_25naud;
AND ngate_25naud1 MAC ngate_25naud_mac;
NOT ngate_25naod1 MAC ngate_25naod;
AND ngate_25naod1 MAC ngate_25naod_mac;
AND ngate_18a NT_Ni ngate_18na1;
NOT ngate_18na1 VTL_N ngate_18na2;
NOT ngate_18na2 DNW ngate_18na_org;
NOT ngate_18na_org MAC ngate_18na;
AND ngate_18na_org MAC ngate_18na_mac;
AND ngate_33a NT_Ni ngate_33na1;
NOT ngate_33na1 VTL_N ngate_33na2;
COPY ngate_33na2 ngate_33na3;
NOT ngate_33na3 DNW ngate_33na_org1;
NOT ngate_33na_org1 CAP_IMP ngate_33na_org;
NOT ngate_33na_org MAC ngate_33na;
AND ngate_33na_org MAC ngate_33na_mac;
NOT ngate_25od281 MAC ngate_25od28;
AND ngate_25od281 MAC ngate_25od28_mac;
NOT dngate_25od281 MAC dngate_25od28;
AND dngate_25od281 MAC dngate_25od28_mac;
SELECT -INTERACT pgate_25a HVD_P -NOT pgate_25b;
NOT pgate_25b VTL_P pgate_25_org1;
COPY pgate_25_org1 pgate_25_org;
AND pgate_25_org OD25_28 pagte_25od281;
NOT pagte_25od281 MAC pgate_25od28;
AND pagte_25od281 MAC pgate_25od28_mac;
NOT phvgate2 EHVT_P phvgate_org1;
NOT phvgate_org1 ELVT_P phvgate_org;
NOT phvgate_org MAC phvgate;
AND phvgate_org MAC phvgate_mac;
COPY puhvgate_org1 puhvgate_org;
NOT puhvgate_org MAC puhvgate;
AND puhvgate_org MAC puhvgate_mac;
COPY puvgate_org1 puvgate_org;
NOT puvgate_org MAC puvgate;
AND puvgate_org MAC puvgate_mac;
AND pgate5 DCO pgatelpg1;
NOT pgatelpg1 VTH_P pgatelpg;
AND phvgate1 DCO phvgatelpg;
AND tpgate4 OD1T pgate_1ta;
NOT pgate_1ta VTL_P pgate_1tb1;
COPY pgate_1tb1 pgate_1tb;
NOT pgate_1tb VTH_P pgate_1tc;
NOT pgate_1tc VTUL_P pgate_1td;
NOT pgate_1td CAP1TDMY pgate_1te;
SELECT -INTERACT pgate_1te p3 -NOT pgate_w1t;
AND pgate_1tc VTUL_P pgate_1tf;
NOT pgate_1tf CAP1TDMY pgate_1tg;
SELECT -INTERACT pgate_1tg p3 -NOT pgate_w1t_lvt;
SELECT -INTERACT pgate_1te p3 pgate_1tr;
AND pgate_s_org DCO pgate_slpg;
AND pgate_s6 VTH_P pgate_hvs1;
NOT pgate_hvs1 SRM_ULL pgate_hvs;
AND pgate_s612 SRAMTIMER pgate_st;
AND pgate_sdp_org DCO pgate_sdplpg;
NOT pgate_s7 SRM_ULL pgate_hvsdp1;
AND pgate_hvsdp1 VTH_P pgate_hvsdp;
AND pgate_s63 SRM13 pgate_s8;
NOT pgate_s8 VTH_P pgate_sdphc;
AND pgate_s8 VTH_P pgate_hvsdphc;
AND pgate_s62 SRM17 pgate_s10;
NOT pgate_s10 SRM12 pgate_s11;
AND pgate_s11 VTH_P pgate_sulp;
AND pgate_s10 SRM12 pgate_s12;
AND pgate_s12 VTH_P pgate_sdpulp;
AND pgate_s61 SRM14 pgate_s13;
NOT pgate_s13 VTH_P pgate_stp_org;
AND pgate_stp_org DCO pgate_stplpg;
AND tpgate1 OD18 pgate_18a;
NOT pgate_18a VTL_P pgate_18_org1;
COPY pgate_18_org1 pgate_18_org;
NOT pgate_18_org MAC pgate_18;
AND pgate_18_org MAC pgate_18_mac;
AND pgate_25_org OD25_18 pgate_25ud1;
NOT pgate_25_org pgate_25ud1 pgate_25z;
AND pgate_25_org OD25_33 pgate_25od1;
NOT pgate_25z pgate_25od1 pgate_25y;
NOT pgate_25y pagte_25od281 pgate_25x;
NOT pgate_25x MAC pgate_25;
AND pgate_25x MAC pgate_25_mac;
NOT pgate_25ud1 MAC pgate_25ud;
AND pgate_25ud1 MAC pgate_25ud_mac;
NOT pgate_25od1 MAC pgate_25od;
AND pgate_25od1 MAC pgate_25od_mac;
AND tpgate1 OD33 pgate_33a;
NOT pgate_33a VTL_P pgate_33_org1;
COPY pgate_33_org1 pgate_33_org;
NOT pgate_33_org MAC pgate_33;
AND pgate_33_org MAC pgate_33_mac;
AND tpdiff DIODMY pdio1a;
NOT pdio1a HIADMY pdio1c;
NOT pdio1c DIO3TDMY pdio1;
AND pdio1 nxwell pdio2a;
NOT pdio2a HVNW pdio2;
NOT pdio2 OD25 pdio3;
NOT pdio3 OD33 pdio4;
NOT pdio4 OD18 pdio5;
NOT pdio5 VTL_P pdio8;
NOT pdio8 UHVT_P pdio9;
NOT pdio9 EHVT_P pdio10;
NOT pdio10 ELVT_P pdio11;
NOT pdio11 VTH_P cpdio1;
NOT cpdio1 VTL_P cpdio2;
NOT cpdio2 ILVT cpdio3;
NOT cpdio3 DCO cpdio4;
NOT cpdio4 OD1T cpdio6;
NOT cpdio6 OD6 cpdio7;
NOT cpdio7 OD5 cpdio;
AND tndiff DIODMY ndio1a;
NOT ndio1a HIADMY ndio1;
AND ndio1 psub ndio2a;
NOT ndio2a HVNW ndio2b;
NOT ndio2b HVPW ndio2c;
NOT ndio2c HVPSUB ndio2;
NOT ndio2 OD25 ndio3;
NOT ndio3 OD33 ndio4;
NOT ndio4 OD18 ndio5;
NOT ndio5 NT_Ni ndio6;
NOT ndio6 VTL_N ndio9;
NOT ndio9 UHVT_N ndio10;
NOT ndio10 EHVT_N ndio11;
NOT ndio11 ELVT_N ndio12;
NOT ndio12 VTH_N cndio1;
NOT cndio1 VTL_N cndio2;
NOT cndio2 ILVT cndio3;
NOT cndio3 DCO cndio4;
NOT cndio4 OD1T cndio6;
NOT cndio6 OD5 cndio7;
NOT cndio7 OD6 cndio;
NOT ndio6 OD5 ndio6a;
AND ndio6a VTL_N ndiol;
NOT pdio5 OD5 pdio5a;
AND pdio5a VTL_P pdiol;
NOT ndio2b HVNW ndio2_1;
AND ndio2_1 HVPSUB ndio2_2;
AND ndio2_2 HVPW hv_ndio;
AND pdio1 HVNW hv_pdio1;
NOT hv_pdio1 HVPW hv_pdio2;
NOT hv_pdio2 HVPSUB hv_pdio;
NOT ndio2_2 HVPW hv_zdio;
AND cpdio3 DCO cpdio5;
NOT cpdio5 OD1T cpdiolpg;
AND cndio3 DCO cndio5;
NOT cndio5 OD1T cndiolpg;
AND cpdio4 OD1T epdio;
AND cndio4 OD1T endio;
SELECT -OUTSIDE DIODMY tpdiff DIONW;
AND nxwell DIONW nwdio1;
COPY nwdio1 cnwdio;
NOT pdio5 DCO pdio6;
AND pdio6 VTH_P pdio61;
NOT pdio61 EHVT_P pdioh1;
NOT pdioh1 ELVT_P pdioh;
AND pdio5 DCO pdio7;
AND pdio7 VTH_P pdiohlpg;
NOT ndio6 DCO ndio7;
AND ndio7 VTH_N ndio71;
NOT ndio71 EHVT_N ndioh1;
NOT ndioh1 ELVT_N ndioh;
AND ndio6 DCO ndio8;
AND ndio8 VTH_N ndiohlpg;
AND cpdio2 ILVT pdioilvt;
AND cndio2 ILVT cndioilvt;
AND pdio8 UHVT_P pdiouh;
AND ndio9 UHVT_N ndiouh;
AND pdio2 OD18 ipdio_18;
AND ndio2 OD18 ndio_18a;
NOT ndio_18a NT_Ni indio_18;
AND pdio2 OD25 ipdio_25_org1;
NOT ipdio_25_org1 MEDP ipdio_25_org2;
SELECT -INTERACT ipdio_25_org2 HVD_P -NOT ipdio_25_org;
NOT ipdio_25_org OD25_18 ipdio_25z;
NOT ipdio_25z OD25_33 ipdio_25y;
NOT ipdio_25y OD25_28 ipdio_25;
AND ndio2 OD25 ndio_25a1;
NOT ndio_25a1 CELLM ndio_25a;
SELECT -INTERACT ndio_25a HVD_NW -NOT ndio_25c;
NOT ndio_25c NT_Ni indio_25_org;
NOT indio_25_org OD25_18 indio_25z;
NOT indio_25z OD25_33 indio_25y;
NOT indio_25y OD25_28 indio_25;
AND ipdio_25_org OD25_18 ipdio_25ud;
AND indio_25_org OD25_18 indio_25ud;
AND ipdio_25_org OD25_33 ipdio_25od;
AND indio_25_org OD25_33 indio_25od;
AND ipdio_25_org OD25_28 ipdio_25od28;
AND indio_25_org OD25_28 indio_25od28;
AND pdio2 OD33 ipdio_33;
AND ndio2 OD33 ndio_33a;
NOT ndio_33a NT_Ni indio_33;
AND ndio5 NT_Ni nndio1;
NOT nndio1 VTH_N cndion1;
NOT cndion1 UHVT_N cndion2;
NOT cndion2 DCO cndion3;
NOT cndion3 VTL_N cndion;
AND cndion2 DCO cndion4;
NOT cndion4 VTL_N cndionlpg;
AND ndio_18a NT_Ni ndio_18na;
AND ndio_25c NT_Ni ndio_25na_org;
NOT ndio_25na_org OD25_18 ndio_25naz;
NOT ndio_25naz OD25_33 ndio_25na;
AND ndio_25na_org OD25_18 ndio_25naud;
AND ndio_25na_org OD25_33 ndio_25naod;
AND ndio_33a NT_Ni ndio_33na;
HOLES ydio ydio_hole;
AND tpdiff BJTDMY ttdiff;
SELECT -INTERACT nxwell DNW -NOT nbase1k;
AND nbase1k BJTDMY nbase1;
NOT nbase1 OD25 cnbase1;
AND ttdiff cnbase1 cemit1a;
SELECT -INTERACT cemit1a RPO cemit1;
AREA cemit1 -ltgt 99.999 100.001 cemit10_org;
NOT cemit10_org BJTDMY1 cemit10_orgi;
NOT cemit10_orgi MAC cemit10;
SELECT -TOUCH psub nbase1 collsur;
OR collsur nbase1 coll1a;
AND DNW BJTDMY npnrg;
AND tndiff npnrg nndiff;
AND psub npnrg pbase1;
NOT pbase1 OD25 cpbase1;
AND nndiff cpbase1 cnemit1a;
SELECT -INTERACT cnemit1a RPO cnemit1;
SELECT -TOUCH collsur cnemit1 collsura;
NOT coll1a collsura coll1b;
NOT coll1b cemit1 coll1;
AREA cemit1 -ltgt 24.999 25.001 cemit5_org;
NOT cemit5_org BJTDMY1 cemit5_orgi;
NOT cemit5_orgi MAC cemit5;
AREA cemit1 -ltgt 3.999 4.001 cemit2_org;
NOT cemit2_org BJTDMY1 cemit2_orgi;
NOT cemit2_orgi MAC cemit2;
AREA cnemit1 -ltgt 99.999 100.001 cnemit10_org;
NOT cnemit10_org BJTDMY1 cnemit10_orgi;
NOT cnemit10_orgi MAC cnemit10;
AND nxwell npnrg ncollrg;
SELECT -TOUCH ncollrg pbase1 ncolls;
OR ncolls pbase1 ncoll1;
AREA cnemit1 -ltgt 24.999 25.001 cnemit5_org;
NOT cnemit5_org BJTDMY1 cnemit5_orgi;
NOT cnemit5_orgi MAC cnemit5;
AREA cnemit1 -ltgt 3.999 4.001 cnemit2_org;
NOT cnemit2_org BJTDMY1 cnemit2_orgi;
NOT cnemit2_orgi MAC cnemit2;
AND cemit10_org BJTDMY1 cemit10_orgs;
NOT cemit10_orgs MAC cemit10s;
AND cemit5_org BJTDMY1 cemit5_orgs;
NOT cemit5_orgs MAC cemit5s;
AND cemit2_org BJTDMY1 cemit2_orgs;
NOT cemit2_orgs MAC cemit2s;
AND cnemit10_org BJTDMY1 cnemit10_orgs;
NOT cnemit10_orgs MAC cnemit10s;
AND cnemit5_org BJTDMY1 cnemit5_orgs;
NOT cnemit5_orgs MAC cnemit5s;
AND cnemit2_org BJTDMY1 cnemit2_orgs;
NOT cnemit2_orgs MAC cnemit2s;
AND cemit10_orgi MAC cemit10_mac;
AND cemit5_orgi MAC cemit5_mac;
AND cemit2_orgi MAC cemit2_mac;
AND cnemit10_orgi MAC cnemit10_mac;
AND cnemit5_orgi MAC cnemit5_mac;
AND cnemit2_orgi MAC cnemit2_mac;
AND cemit10_orgs MAC cemit10s_mac;
AND cemit5_orgs MAC cemit5s_mac;
AND cemit2_orgs MAC cemit2s_mac;
AND cnemit10_orgs MAC cnemit10s_mac;
AND cnemit5_orgs MAC cnemit5s_mac;
AND cnemit2_orgs MAC cnemit2s_mac;
AND crown p3 mim_r1;
AND mim_r1 OD mim_r2;
SELECT -INTERACT mim_r2 RPO -NOT mim_r3;
SELECT -INTERACT mim_r3 blc mim_r;
AND crown p3 mim_r4;
OR POI DPO POx;
COPY POx PO;
AND mim_r4 PO mim_r5;
AND mim_r5 EDRAM_DECAP mim_r6;
SELECT -INTERACT mim_r6 NP mim_r7;
SELECT -INTERACT mim_r7 blc mim_r_decap;
AND gatenw NP vargt1;
SELECT -INTERACT VAR RFDMY -NOT VAR_noRF;
AND vargt1 VAR_noRF vargt2;
NOT vargt2 OD18 vargt3;
NOT vargt3 OD25 vargt4;
NOT vargt4 DCO vargt5;
NOT vargt5 OD33 vargt7;
NOT vargt7 OD5 vargt7a;
NOT vargt7a OD6 vargt7b;
NOT vargt7b OD1T vargt;
AND vargt4 DCO vargt6;
NOT vargt6 OD33 vargtlpg;
AND vargt2 OD25 vargt_25;
AND vargt2 OD18 vargt_18;
AND vargt2 OD33 vargt_33;
AND NWDMY NW trwell;
AND diff RPO drpo;
NOT trwell drpo nwsti_r1;
SELECT -INTERACT nwsti_r1 NWDMYi nwsti_r;
AND trwell drpo nwod_r1;
SELECT -INTERACT nwod_r1 NWDMYi nwod_r;
AND rpolywo PP rppolywo_r1;
SELECT -INTERACT RPDMYi RFDMY -NOT RPDMYi_noRF;
SELECT -INTERACT rppolywo_r1 RPDMYi_noRF rppolywo_r;
AND rpolywo NP rnpolywo_r1;
SELECT -INTERACT rnpolywo_r1 RPDMYi_noRF rnpolywo_r;
AND rodwo PP rpodwo_r11;
AND rpodwo_r11 NW rpodwo_r1;
SELECT -INTERACT rpodwo_r1 RPDMYi rpodwo_r;
AND rodwo NP rnodwo_r11;
NOT rnodwo_r11 NW rnodwo_r1;
SELECT -INTERACT rnodwo_r1 RPDMYi rnodwo_r;
AND rpoly PP rppoly;
EDGE_BOOLEAN -INSIDE rppoly POI rppoly_edge;
EDGE_LENGTH -ltge 2 99999999 rppoly_edge l_rppoly_eg;
SELECT -WITH_EDGE rppoly l_rppoly_eg l_rppoly;
SELECT -INTERACT l_rppoly RPDMYi_noRF rppolyl_r;
AND rpoly NP rnpoly;
EDGE_BOOLEAN -INSIDE rnpoly POI rnpoly_edge;
EDGE_LENGTH -ltge 2 99999999 rnpoly_edge l_rnpoly_eg;
SELECT -WITH_EDGE rnpoly l_rnpoly_eg l_rnpoly;
SELECT -INTERACT l_rnpoly RPDMYi rnpolyl_r;
AND rod PP rpod1;
AND rpod1 NW rpod;
EDGE_BOOLEAN -INSIDE rpod diff rpod_edge;
EDGE_LENGTH -ltge 2 99999999 rpod_edge l_rpod;
SELECT -WITH_EDGE rpod l_rpod rpodl_r1;
SELECT -INTERACT rpodl_r1 RPDMYi rpodl_r;
AND rod NP rnod1;
NOT rnod1 NW rnod;
EDGE_BOOLEAN -INSIDE rnod diff rnod_edge;
EDGE_LENGTH -ltge 2 99999999 rnod_edge l_rnod;
SELECT -WITH_EDGE rnod l_rnod rnodl_r1;
SELECT -INTERACT rnodl_r1 RPDMYi rnodl_r;
NOT rppoly l_rppoly s_rppoly;
SELECT -INTERACT s_rppoly RPDMYi_noRF rppolys_r;
NOT rnpoly l_rnpoly s_rnpoly;
SELECT -INTERACT s_rnpoly RPDMYi rnpolys_r;
NOT rpod rpodl_r1 rpods_r1;
SELECT -INTERACT rpods_r1 RPDMYi rpods_r;
NOT rnod rnodl_r1 rnods_r1;
SELECT -INTERACT rnods_r1 RPDMYi rnods_r;
OR M1 CO M1X;
OR M1X DUM1 M1Y;
AND M1Y RMDMY1 mt1res1;
SELECT -INTERACT mt1res1 M1 mt1res;
NOT M1Y mt1res metal1;
OR M2 DUM2 M2X;
OR IND_STD IND_SYM inddmy1;
OR inddmy1 IND_CT inddmy2;
OR inddmy2 IND_STD_MUA inddmy3;
OR inddmy3 IND_SYM_MUA inddmy4;
OR inddmy4 IND_CT_MUA inddmy5;
AND IND_NR RBCDMY IND_meander;
OR inddmy5 IND_meander INDDMY;
NOT M2X INDDMY M2Y;
AND M2Y RMDMY2 mt2res1;
SELECT -INTERACT mt2res1 M2 mt2res;
NOT M2Y mt2res metal2;
OR M3 DUM3 M3X;
NOT M3X INDDMY M3Y;
AND M3Y RMDMY3 mt3res1;
SELECT -INTERACT mt3res1 M3 mt3res;
NOT M3Y mt3res metal3;
OR M4 DUM4 M4X;
NOT M4X INDDMY M4Y;
AND M4Y RMDMY4 mt4res1;
SELECT -INTERACT mt4res1 M4 mt4res;
NOT M4Y mt4res metal4;
OR M5 DUM5 M5X;
NOT M5X INDDMY M5Y;
AND M5Y RMDMY5 mt5res1;
SELECT -INTERACT mt5res1 M5 mt5res;
NOT M5Y mt5res metal5;
OR M6 DUM6 M6X;
NOT M6X INDDMY M6Y;
AND M6Y RMDMY6 mt6res1;
SELECT -INTERACT mt6res1 M6 mt6res;
NOT M6Y mt6res metal6;
OR M7 DUM7 M7X;
NOT M7X INDDMY M7Y;
AND M7Y RMDMY7 mt7res1;
SELECT -INTERACT mt7res1 M7 mt7res;
NOT M7Y mt7res metal7;
OR M8 DUM8 M8X;
NOT M8X INDDMY M8Y;
AND M8Y RMDMY8 mt8res1;
SELECT -INTERACT mt8res1 M8 mt8res;
NOT M8Y mt8res metal8;
OR M9 DUM9 M9X;
NOT M9X INDDMY M9Y;
AND M9Y RMDMY9 mt9res1;
SELECT -INTERACT mt9res1 M9 mt9res;
NOT M9Y mt9res metal9;
OR AP DAP APX;
NOT APX INDDMY M10Y;
AND M10Y RMDMYAP mtAPres1;
SELECT -INTERACT mtAPres1 AP mtAPres;
NOT M10Y mtAPres metal10;
SELECT -INTERACT nwsti_r1 NWDMY1 nwsti_mr;
SELECT -INTERACT nwod_r1 NWDMY1 nwod_mr;
SELECT -INTERACT nxwell DNW dnwdio_b;
SELECT -INSIDE nxwell DNW dnwdio_a;
NOT dnwdio_b dnwdio_a dnwdio_k;
SELECT -INTERACT DNW dnwdio_k dnwdio1;
OR RFDMY5T RFDMY6T rfdmy56;
NOT dnwdio1 rfdmy56 dnwdio;
NOT BULK psubband psub_term_b;
AND BULK DNW psub_term_c;
NOT BULK psub_term_c psub_term_d;
AND psub_term_b psub_term_d psub_term_e;
SELECT -INTERACT psub_term_e DNW psub_term;
NOT DNW nxwell rwdio1;
SELECT -INTERACT rwdio1 BJTDMY -NOT rwdio2;
NOT rwdio2 rfdmy56 rwdio;
SELECT -OUTSIDE nxwell cnwdio pnwdio1;
NOT pnwdio1 DNW pnwdio2a;
NOT pnwdio2a cnbase1 pnwdio2b;
SELECT -INTERACT pnwdio2b NWDMY1 -NOT pnwdio2c;
SELECT -INTERACT pnwdio2c HIADMY -NOT pnwdio2d;
NOT pnwdio2d VAR pnwdio2e;
NOT pnwdio2e SBDDMY pnwdio21;
NOT pnwdio21 SBD3TDMY pnwdio2;
SELECT -INSIDE psub DNW rwel;
SELECT -INSIDE pnwdio1 rwel pnwdio3;
OR pnwdio2 pnwdio3 pnwdio4;
SELECT -touch pnwdio4 psub -eq 1 pnwdio_r;
SELECT -INTERACT RPDMY1 RFDMY -NOT RPDMY1_noRF;
SELECT -INTERACT rppolywo_r1 RPDMY1_noRF rppolywo_d;
AND POI RPDMY1 poly_term1;
SIZE poly_term1 -BY 0.005 poly_term2;
NOT poly_term2 poly_term1 poly_term;
SELECT -INTERACT rnpolywo_r1 RPDMY1_noRF rnpolywo_d;
NOT l_rppoly rppolyl_r rppolyl_d1;
SELECT -INTERACT rppolyl_d1 RPDMY1_noRF rppolyl_d;
NOT l_rnpoly rnpolyl_r rnpolyl_d1;
SELECT -INTERACT rnpolyl_d1 RPDMY1 rnpolyl_d;
NOT s_rppoly rppolys_r rppolys_d1;
SELECT -INTERACT rppolys_d1 RPDMY1_noRF rppolys_d;
NOT s_rnpoly rnpolys_r rnpolys_d1;
SELECT -INTERACT rnpolys_d1 RPDMY1 rnpolys_d;
SELECT -INTERACT rpodwo_r1 RPDMY1 rpodwo_mr;
SELECT -INTERACT rnodwo_r1 RPDMY1 rnodwo_mr;
SELECT -INTERACT rpodl_r1 RPDMY1 rpodl_mr;
SELECT -INTERACT rnodl_r1 RPDMY1 rnodl_mr;
SELECT -INTERACT rpods_r1 RPDMY1 rpods_mr;
SELECT -INTERACT rnods_r1 RPDMY1 rnods_mr;
NOT gate_rf nxwell gate_rfnnw;
AND gate_rfnnw NP ngate_rf1;
NOT ngate_rf1 NT_Ni ngate_rf2;
NOT ngate_rf2 OD2 ngate_rf3;
AND ngate_rf3 ILVT ngate_rfmlv;
SELECT -INTERACT nthin ngate_rfmlv ngate_nthin_mlv1;
SELECT -INSIDE ngate_nthin_mlv1 DNW ngate_nthin_mlv2;
NOT ngate_nthin_mlv2 RFDMY6T ngate_nthin_mlv;
SELECT -OUTSIDE ngate_nthin_mlv1 DNW ngate_nthin_mlvnodnw;
AND gate_rf nxwell gate_rfnw;
AND gate_rfnw PP pgate_rf1;
NOT pgate_rf1 NT_Ni pgate_rf2;
NOT pgate_rf2 OD2 pgate_rf3;
AND pgate_rf3 ILVT pgate_rfmlv;
SELECT -INTERACT pthin pgate_rfmlv pgate_pthin_mlv1;
SELECT -INSIDE pgate_pthin_mlv1 DNW pgate_pthin_mlv2;
NOT pgate_pthin_mlv2 RFDMY5T pgate_pthin_mlv;
SELECT -OUTSIDE pgate_pthin_mlv1 DNW pgate_pthin_mlvnw1;
NOT pgate_pthin_mlvnw1 RFDMY5T pgate_pthin_mlvnw;
AND ngate_nthin_mlv2 RFDMY6T ngate_nthin_mlv_6t;
AND pgate_pthin_mlv2 RFDMY5T pgate_pthin_mlv_5t;
AND pgate_pthin_mlvnw1 RFDMY5T pgate_pthin_mlvnw_5t;
NOT ngate_rf3 VTH_N ngate_rfa;
NOT ngate_rfa VTL_N ngate_rfb;
NOT ngate_rfb ILVT ngate_rf;
SELECT -INTERACT nthin ngate_rf ngate_nthin1;
SELECT -INSIDE ngate_nthin1 DNW ngate_nthin2;
NOT ngate_nthin2 RDKDMY ngate_nthin3;
NOT ngate_nthin3 RFDMY6T ngate_nthin;
AND ngate_nthin2 RDKDMY ngate_nthin_rdk1;
NOT ngate_nthin_rdk1 RFDMY6T ngate_nthin_rdk;
SELECT -OUTSIDE ngate_nthin1 DNW ngate_nthin_nodnw1;
NOT ngate_nthin_nodnw1 RDKDMY ngate_nthin_nodnw;
AND ngate_rf3 VTH_N ngate_rfhv;
SELECT -INTERACT nthin ngate_rfhv ngate_nthin_hv1;
SELECT -INSIDE ngate_nthin_hv1 DNW ngate_nthin_hv2;
NOT ngate_nthin_hv2 RFDMY6T ngate_nthin_hv;
SELECT -OUTSIDE ngate_nthin_hv1 DNW ngate_nthin_hvnodnw;
AND ngate_rf3 VTL_N ngate_rflv;
SELECT -INTERACT nthin ngate_rflv ngate_nthin_lv1;
SELECT -INSIDE ngate_nthin_lv1 DNW ngate_nthin_lv2;
NOT ngate_nthin_lv2 RFDMY6T ngate_nthin_lv;
SELECT -OUTSIDE ngate_nthin_lv1 DNW ngate_nthin_lvnodnw;
AND ngate_rf2 OD2 ngate_rfio1;
NOT ngate_rfio1 VTH_N ngate_rfio2;
NOT ngate_rfio2 VTL_N ngate_rfio3;
AND ngate_rfio3 OD25 ngate_rf_25a;
NOT ngate_rf_25a OD25_33 ngate_rf_25b;
NOT ngate_rf_25b OD25_18 ngate_rf_25c;
NOT ngate_rf_25c OD25_28 ngate_rf_25d;
SELECT -INTERACT ngate_rf_25d HVD_NW -NOT ngate_rf_25;
SELECT -INTERACT nthin ngate_rf_25 ngate_nthin_251;
SELECT -INSIDE ngate_nthin_251 DNW ngate_nthin_252;
NOT ngate_nthin_252 RFDMY6T ngate_nthin_25;
SELECT -OUTSIDE ngate_nthin_251 DNW ngate_nthin_25nodnw;
AND ngate_rf_25a OD25_33 ngate_rf_25od;
SELECT -INTERACT nthin ngate_rf_25od ngate_nthin_253;
SELECT -INSIDE ngate_nthin_253 DNW ngate_nthin_254;
NOT ngate_nthin_254 RFDMY6T ngate_nthin_25od;
SELECT -OUTSIDE ngate_nthin_253 DNW ngate_nthin_25nodnwod;
AND ngate_rf_25a OD25_18 ngate_rf_25ud;
SELECT -INTERACT nthin ngate_rf_25ud ngate_nthin_255;
SELECT -INSIDE ngate_nthin_255 DNW ngate_nthin_256;
NOT ngate_nthin_256 RFDMY6T ngate_nthin_25ud;
SELECT -OUTSIDE ngate_nthin_255 DNW ngate_nthin_25nodnwud;
AND ngate_rfio3 OD18 ngate_rf_18;
SELECT -INTERACT nthin ngate_rf_18 ngate_nthin_181;
SELECT -INSIDE ngate_nthin_181 DNW ngate_nthin_182;
NOT ngate_nthin_182 RFDMY6T ngate_nthin_18;
SELECT -OUTSIDE ngate_nthin_181 DNW ngate_nthin_18nodnw;
AND ngate_rf1 NT_Ni ngate_rf_18na1;
AND ngate_rf_18na1 OD18 ngate_rf_18na2;
NOT ngate_rf_18na2 VTH_N ngate_rf_18na3;
NOT ngate_rf_18na3 VTL_N ngate_rf_18na4;
NOT ngate_rf_18na4 ILVT ngate_rf_18na;
SELECT -INTERACT nthin ngate_rf_18na ngate_nthin_18na1;
NOT ngate_nthin_18na1 DNW ngate_nthin_18na2;
NOT ngate_nthin_18na2 RFDMY6T ngate_nthin_18na;
AND ngate_rfio3 OD33 ngate_rf_33;
SELECT -INTERACT nthin ngate_rf_33 ngate_nthin_331;
SELECT -INSIDE ngate_nthin_331 DNW ngate_nthin_332;
NOT ngate_nthin_332 RFDMY6T ngate_nthin_33;
SELECT -OUTSIDE ngate_nthin_331 DNW ngate_nthin_33nodnw;
AND ngate_nthin3 RFDMY6T ngate_nthin_6t;
AND ngate_nthin_hv2 RFDMY6T ngate_nthin_hv_6t;
AND ngate_nthin_lv2 RFDMY6T ngate_nthin_lv_6t;
AND ngate_nthin_252 RFDMY6T ngate_nthin_25_6t;
AND ngate_nthin_254 RFDMY6T ngate_nthin_25od_6t;
AND ngate_nthin_256 RFDMY6T ngate_nthin_25ud_6t;
AND ngate_nthin_182 RFDMY6T ngate_nthin_18_6t;
AND ngate_nthin_332 RFDMY6T ngate_nthin_33_6t;
NOT pgate_rf3 VTH_P pgate_rfa;
NOT pgate_rfa VTL_P pgate_rfb;
NOT pgate_rfb ILVT pgate_rf;
SELECT -INTERACT pthin pgate_rf pgate_pthin1;
SELECT -INSIDE pgate_pthin1 DNW pgate_pthin2;
NOT pgate_pthin2 RDKDMY pgate_pthin3;
NOT pgate_pthin3 RFDMY5T pgate_pthin;
AND pgate_pthin2 RDKDMY pgate_pthin_rdk1;
NOT pgate_pthin_rdk1 RFDMY5T pgate_pthin_rdk;
SELECT -OUTSIDE pgate_pthin1 DNW pgate_pthin_nw1;
NOT pgate_pthin_nw1 RFDMY5T pgate_pthin_nw;
AND pgate_rf3 VTH_P pgate_rfhv;
SELECT -INTERACT pthin pgate_rfhv pgate_pthin_hv1;
SELECT -INSIDE pgate_pthin_hv1 DNW pgate_pthin_hv2;
NOT pgate_pthin_hv2 RFDMY5T pgate_pthin_hv;
SELECT -OUTSIDE pgate_pthin_hv1 DNW pgate_pthin_hvnw1;
NOT pgate_pthin_hvnw1 RFDMY5T pgate_pthin_hvnw;
AND pgate_rf3 VTL_P pgate_rflv;
SELECT -INTERACT pthin pgate_rflv pgate_pthin_lv1;
SELECT -INSIDE pgate_pthin_lv1 DNW pgate_pthin_lv2;
NOT pgate_pthin_lv2 RFDMY5T pgate_pthin_lv;
SELECT -OUTSIDE pgate_pthin_lv1 DNW pgate_pthin_lvnw1;
NOT pgate_pthin_lvnw1 RFDMY5T pgate_pthin_lvnw;
AND pgate_rf2 OD2 pgate_rfio1;
NOT pgate_rfio1 VTH_P pgate_rfio2;
NOT pgate_rfio2 VTL_P pgate_rfio3;
AND pgate_rfio3 OD25 pgate_rf_25a;
NOT pgate_rf_25a OD25_33 pgate_rf_25b;
NOT pgate_rf_25b OD25_18 pgate_rf_25c;
NOT pgate_rf_25c OD25_28 pgate_rf_25d;
SELECT -INTERACT pgate_rf_25d HVD_P -NOT pgate_rf_25;
SELECT -INTERACT pthin pgate_rf_25 pgate_pthin_251;
SELECT -INSIDE pgate_pthin_251 DNW pgate_pthin_252;
NOT pgate_pthin_252 RFDMY5T pgate_pthin_25;
SELECT -OUTSIDE pgate_pthin_251 DNW pgate_pthin_25nw1;
NOT pgate_pthin_25nw1 RFDMY5T pgate_pthin_25nw;
AND pgate_rf_25a OD25_33 pgate_rf_25od;
SELECT -INTERACT pthin pgate_rf_25od pgate_pthin_253;
SELECT -INSIDE pgate_pthin_253 DNW pgate_pthin_254;
NOT pgate_pthin_254 RFDMY5T pgate_pthin_25od;
SELECT -OUTSIDE pgate_pthin_253 DNW pgate_pthin_25nwod1;
NOT pgate_pthin_25nwod1 RFDMY5T pgate_pthin_25nwod;
AND pgate_rf_25a OD25_18 pgate_rf_25ud;
SELECT -INTERACT pthin pgate_rf_25ud pgate_pthin_255;
SELECT -INSIDE pgate_pthin_255 DNW pgate_pthin_256;
NOT pgate_pthin_256 RFDMY5T pgate_pthin_25ud;
SELECT -OUTSIDE pgate_pthin_255 DNW pgate_pthin_25nwud1;
NOT pgate_pthin_25nwud1 RFDMY5T pgate_pthin_25nwud;
AND pgate_rfio3 OD18 pgate_rf_18;
SELECT -INTERACT pthin pgate_rf_18 pgate_pthin_181;
SELECT -INSIDE pgate_pthin_181 DNW pgate_pthin_182;
NOT pgate_pthin_182 RFDMY5T pgate_pthin_18;
SELECT -OUTSIDE pgate_pthin_181 DNW pgate_pthin_18nw1;
NOT pgate_pthin_18nw1 RFDMY5T pgate_pthin_18nw;
AND pgate_rfio3 OD33 pgate_rf_33;
SELECT -INTERACT pthin pgate_rf_33 pgate_pthin_331;
SELECT -INSIDE pgate_pthin_331 DNW pgate_pthin_332;
NOT pgate_pthin_332 RFDMY5T pgate_pthin_33;
SELECT -OUTSIDE pgate_pthin_331 DNW pgate_pthin_33nw1;
NOT pgate_pthin_33nw1 RFDMY5T pgate_pthin_33nw;
AND pgate_pthin2 RFDMY5T pgate_pthin_5t;
AND pgate_pthin_nw1 RFDMY5T pgate_pthin_nw_5t;
AND pgate_pthin_hv2 RFDMY5T pgate_pthin_hv_5t;
AND pgate_pthin_hvnw1 RFDMY5T pgate_pthin_hvnw_5t;
AND pgate_pthin_lv2 RFDMY5T pgate_pthin_lv_5t;
AND pgate_pthin_lvnw1 RFDMY5T pgate_pthin_lvnw_5t;
AND pgate_pthin_252 RFDMY5T pgate_pthin_25_5t;
AND pgate_pthin_25nw1 RFDMY5T pgate_pthin_25nw_5t;
AND pgate_pthin_254 RFDMY5T pgate_pthin_25od_5t;
AND pgate_pthin_25nwod1 RFDMY5T pgate_pthin_25nwod_5t;
AND pgate_pthin_256 RFDMY5T pgate_pthin_25ud_5t;
AND pgate_pthin_25nwud1 RFDMY5T pgate_pthin_25nwud_5t;
AND pgate_pthin_182 RFDMY5T pgate_pthin_18_5t;
AND pgate_pthin_18nw1 RFDMY5T pgate_pthin_18nw_5t;
AND pgate_pthin_332 RFDMY5T pgate_pthin_33_5t;
AND pgate_pthin_33nw1 RFDMY5T pgate_pthin_33nw_5t;
AND VAR RFDMY VAR_RFi;
NOT VAR_RFi SBDDMY VAR_RF11;
NOT VAR_RF11 SBD3TDMY VAR_RF1;
NOT VAR_RF1 RBCDMY VAR_RF2;
SELECT -INTERACT VAR_RF2 gate_a VAR_RF;
NOT VAR_RF2 VAR_RF XJ_RF;
AND nxwell XJ_RF jvar1_rf;
SELECT -INTERACT jvar1_rf tpdiff jvar2_rf;
SELECT -INTERACT jvar2_rf tndiff jvar_rf1;
AND jvar_rf1 DNW jvar_rf;
AND jvar_rf1 tpdiff jvar3_rf;
AND tpdiff jvar_rf1 tpdiff_jvar;
AND tndiff jvar_rf1 tndiff_jvar;
NOT jvar_rf1 DNW jvar_rfnw;
AND nxwell VAR_RF var_nw_rf;
NOT var_nw_rf OD18 var_nw1_rf;
NOT var_nw1_rf OD25 var_nw2_rf;
NOT var_nw2_rf OD33 var_nw3_rf1;
SELECT -INTERACT var_nw3_rf1 VTH_P -NOT var_nw3_rf2;
NOT var_nw3_rf2 RDKDMY var_nw3_rf3;
AND var_nw3_rf3 DNW var_nw3_rf;
AND gate_a_rf VAR_RF vargt2_rf;
OR OD25 OD25_18 OD2a;
OR OD2a OD25_33 OD2b;
OR OD2b OD18 OD2c;
OR OD2c OD33 OD2d;
OR OD2d OD5 OD2e;
OR OD2e OD6 OD2f;
OR OD2f OD25_28 OD2_mos;
NOT vargt2_rf OD2_mos vargt_rf1;
NOT vargt_rf1 VTH_P vargt_rf;
AND var_nw3_rf2 RDKDMY var_nw3_rdk1;
AND var_nw3_rdk1 DNW var_nw3_rdk;
NOT var_nw3_rf3 DNW var_nw3_rf_nw;
SELECT -INTERACT var_nw3_rf1 VTH_P var_nw3_rf4;
AND var_nw3_rf4 DNW var_nw3_rf_hvt;
AND vargt_rf1 VTH_P vargt_rf_hvt;
NOT var_nw3_rf4 DNW var_nw3_rf_hvt_nw;
AND var_nw_rf OD25 var_nw_rf25a;
AND var_nw_rf25a DNW var_nw_rf25;
AND vargt2_rf OD25 vargt_rf25;
NOT var_nw_rf25a DNW var_nw_rf25_nw;
AND var_nw_rf OD18 var_nw_rf18a;
AND var_nw_rf18a DNW var_nw_rf18;
AND vargt2_rf OD18 vargt_rf18;
NOT var_nw_rf18a DNW var_nw_rf18_nw;
AND var_nw_rf OD33 var_nw_rf33a;
AND var_nw_rf33a DNW var_nw_rf33;
AND vargt2_rf OD33 vargt_rf33;
NOT var_nw_rf33a DNW var_nw_rf33_nw;
AND SBDDMY RFDMY SBD_RF1;
NOT SBD_RF1 VAR SBD_RF;
AND nxwell SBD_RF sbd_nw;
AND nthin1 sbd_nw schottky_n;
SELECT -INTERACT sbd_nw schottky_n sbd_rfnw_org1;
SELECT -CUT mdiff PP pthin1;
AND pthin1 sbd_nw schottky_p;
SELECT -INTERACT sbd_rfnw_org1 schottky_p sbd_rfnw_org;
SELECT -INTERACT sbd_rfnw_org DNW sbd_rfdnw;
SELECT -INTERACT sbd_rfnw_org DNW -NOT sbd_rfnw;
NOT rppolyl_d1 rppolyl_d rppolyl_rf1;
AND rppolyl_rf1 RFDMY rppolyl_rf2;
NOT rppolyl_rf2 RDKDMY rppolyl_rf;
NOT rppolys_d1 rppolyl_d rppolys_rf1;
AND rppolys_rf1 RFDMY rppolys_rf2;
NOT rppolys_rf2 RDKDMY rppolys_rf;
AND rppolywo_r1 RFDMY rppolywo_rf1;
NOT rppolywo_rf1 RDKDMY rppolywo_rf;
AND rppolyl_rf2 RDKDMY rppolyl_rf_rdk;
AND rppolys_rf2 RDKDMY rppolys_rf_rdk;
AND rppolywo_rf1 RDKDMY rppolywo_rf_rdk;
AND ndio1a HIADMY ndio_hia1;
AND ndio_hia1 psub ndio_hia2;
NOT ndio_hia2 OD18 ndio_hia3;
NOT ndio_hia3 OD25 ndio_hia4;
NOT ndio_hia4 OD33 ndio_hia5;
NOT ndio_hia5 DCO ndio_hia6;
NOT ndio_hia6 NT_Ni ndio_hia7;
NOT ndio_hia7 VTH_N ndio_hia8;
NOT ndio_hia8 VTL_N ndio_hia9;
NOT ndio_hia9 ILVT ndio_hia10;
NOT ndio_hia10 UHVT_N ndio_hia11;
AND ndio_hia11 RFDMY ndio_hia12;
NOT ndio_hia12 RBCDMY ndio_hia;
AND pdio1a HIADMY pdio_hia1;
AND pdio_hia1 nxwell pdio_hia2;
NOT pdio_hia2 OD18 pdio_hia3;
NOT pdio_hia3 OD25 pdio_hia4;
NOT pdio_hia4 OD33 pdio_hia5;
NOT pdio_hia5 DCO pdio_hia6;
NOT pdio_hia6 VTH_P pdio_hia7;
NOT pdio_hia7 VTL_P pdio_hia8;
NOT pdio_hia8 ILVT pdio_hia9;
NOT pdio_hia9 UHVT_P pdio_hia10;
AND pdio_hia10 RFDMY pdio_hia11;
NOT pdio_hia11 RBCDMY pdio_hia;
AND HIADMY nxwell dio_inrf1;
SELECT -INSIDE dio_inrf1 RFDMY dio_inrf;
SELECT -INTERACT RFDMY dio_inrf RFDMY_hia1;
NOT RFDMY_hia1 RBCDMY RFDMY_hia;
NOT VAR_RF nxwell pvar_rf1;
AND pvar_rf1 DNW pvar_rf2;
NOT pvar_rf2 OD33 pvar_rf3;
NOT pvar_rf3 OD18 pvar_rf4;
NOT pvar_rf4 OD25 pvar_rf;
AND pvar_rf3 OD18 pvar_rf18a;
NOT pvar_rf18a OD25 pvar_rf18;
AND pvar_rf4 OD25 pvar_rf25;
SELECT -LABEL "INDDMY" -TEXTNAME "sline_ms_mu" -TEXTLAYER IND_TEXT sline_ms_mu_r;
AND M9 TLDMY sline_m9;
AND sline_m9 INDDMY sline_m9a;
NOT sline_m9a IND_MP sline_m9p;
AND sline_m9a IND_MP sline_m9m1;
SIZE sline_m9p -BY 0.001 sline_m9p2;
NOT sline_m9m1 sline_m9p2 sline_m9m;
SELECT -LABEL "INDDMY" -TEXTNAME "sline_gscpw_mu" -TEXTLAYER IND_TEXT sline_cpw_mu_r;
AND M8 TLDMY sline_m8a;
AND sline_m8a INDDMY sline_m8;
AND M9 IND_STD std_ind1;
AND M8 IND_STD std_ind21;
NOT IND_RADi RBCDMY IND_RAD;
SELECT -INTERACT std_ind21 IND_RAD std_ind2;
OR std_ind1 std_ind2 std_ind3;
SELECT -INTERACT std_ind3 IND_RAD std_ind4;
NOT std_ind4 RDKDMY std_ind;
AND std_ind1 std_ind2 std_ind_m;
SIZE INDDMY -BY 0.005 indm9b;
SELECT -INTERACT indm9b TLDMY -NOT indm9a;
AND indm9a M9Y indm9;
NOT indm9 IND_MP indm9p1;
SELECT -INTERACT indm9p1 IND_MP -NOT indm9p2;
NOT indm9p2 IND_D4 indm9p;
AND indm9 IND_MP indm9m;
AND M9 IND_SYM sym_ind1;
AND M8 IND_SYM sym_ind2;
OR sym_ind1 sym_ind2 sym_ind3;
SELECT -INTERACT sym_ind3 IND_RAD sym_ind4;
NOT sym_ind4 RDKDMY sym_ind;
AND sym_ind1 sym_ind2 sym_ind_m;
AND M9 IND_CT ct_ind1;
AND M8 IND_CT ct_ind2;
OR ct_ind1 ct_ind2 ct_inda1;
SELECT -INTERACT ct_inda1 IND_NR ct_inda;
AND M7 IND_CT ct_ind3;
OR ct_inda ct_ind3 ct_ind4;
SELECT -INTERACT ct_ind4 IND_RAD ct_ind5;
NOT ct_ind5 RDKDMY ct_ind;
AND ct_ind1 ct_ind2 ct_ind_m;
AND indm9p2 IND_D4 indm9p3;
SELECT -INTERACT indm9p3 indm9p indm9p4;
NOT IND_D4 indm9p4 IND_D41;
NOT IND_D41 indm9m IND_D42;
SIZE IND_D42 -BY -0.001 IND_D4i;
AND indm9 IND_D4i indm9c1;
AND indm9a M8Y indm8;
AND indm8 IND_D4i indm9c2;
OR indm9c1 indm9c2 indm9c4;
AND indm9a M7Y indm7;
AND indm7 IND_D4i indm9c3;
OR indm9c4 indm9c3 indm9c;
AND std_ind4 RDKDMY std_ind_rdk;
AND sym_ind4 RDKDMY sym_ind_rdk;
AND ct_ind5 RDKDMY ct_ind_rdk;
AND ctm cbm mim_top;
SIZE PROBEM1 -BY 0.005 PROBEM1_T1;
NOT PROBEM1_T1 PROBEM1 PROBEM1_T;
SIZE PROBEM2 -BY 0.005 PROBEM2_T1;
NOT PROBEM2_T1 PROBEM2 PROBEM2_T;
SIZE PROBEM3 -BY 0.005 PROBEM3_T1;
NOT PROBEM3_T1 PROBEM3 PROBEM3_T;
SIZE PROBEM4 -BY 0.005 PROBEM4_T1;
NOT PROBEM4_T1 PROBEM4 PROBEM4_T;
SIZE PROBEM5 -BY 0.005 PROBEM5_T1;
NOT PROBEM5_T1 PROBEM5 PROBEM5_T;
SIZE PROBEM6 -BY 0.005 PROBEM6_T1;
NOT PROBEM6_T1 PROBEM6 PROBEM6_T;
SIZE PROBEM7 -BY 0.005 PROBEM7_T1;
NOT PROBEM7_T1 PROBEM7 PROBEM7_T;
AND nxwell VTDN lin_nw1;
NOT lin_nw1 RFDMY lin_nw2;
NOT lin_nw2 OD25 lin_nw3;
AND lin_nw3 DNW lin_nw;
AND vargt1 VTDN lingt1;
NOT lingt1 OD25 lingt;
AND lin_nw2 OD25 lin_nw4;
AND lin_nw4 DNW lin_nw_25;
AND lingt1 OD25 lingt_25;
AND lin_nw1 RFDMY lin_nw5;
NOT lin_nw5 OD25 lin_nw6;
AND lin_nw6 DNW lin_nw_rf;
AND gate_a_rf NW lingt2;
AND lingt2 NP lingt3;
AND lingt3 VTDN lingt4;
NOT lingt4 OD25 lingt_rf;
AND lin_nw5 OD25 lin_nw7;
AND lin_nw7 DNW lin_nw_rf_25;
AND lingt4 OD25 lingt_rf_25;
AND AP RFPADDMY ap_pad;
AND M9 RFPADDMY m9_pad;
AND ap_pad m9_pad rfpad1;
AND M8 RFPADDMY m8_pad;
SELECT -INTERACT rfpad1 m8_pad rfpad2;
AND rfpad2 PP rfpad3;
AND rfpad3 PO rfpad4;
SELECT -INTERACT rfpad4 CB rfpad5;
SELECT -INTERACT rfpad5 CB2 rfpad6;
SELECT -INTERACT rfpad6 VIA8i rfpad7;
NOT rfpad7 RBCDMY rfpad;
AND M1 RFPADDMY m1_pad;
AND M2 RFPADDMY m2_pad;
OR m1_pad m2_pad bot_dmy1;
AND M3 RFPADDMY m3_pad;
OR bot_dmy1 m3_pad bot_dmy2;
AND M4 RFPADDMY m4_pad;
OR bot_dmy2 m4_pad bot_dmy3;
AND M5 RFPADDMY m5_pad;
OR bot_dmy3 m5_pad bot_dmy4;
AND M6 RFPADDMY m6_pad;
OR bot_dmy4 m6_pad bot_dmy5;
AND M7 RFPADDMY m7_pad;
OR bot_dmy5 m7_pad bot_dmy6;
COPY bot_dmy6 bot_dmy;
AND rf_diff DIFRBC nthin_diff1;
NOT gate_rbc nxwell ngate_rfc1;
AND ngate_rfc1 NP ngate_rfc2;
NOT ngate_rfc2 NT_Ni ngate_rfc;
AND ngate_rfc DIFRBC gate_rbc_diff;
SELECT -INTERACT nthin_diff1 gate_rbc_diff nthin_diff_ori;
SELECT -INTERACT nthin_diff_ori DNW -NOT nthin_diff_nw;
AND rf_diff XCLRBC nthin_xcouple1;
AND ngate_rfc XCLRBC gate_rbc_xcoup;
SELECT -INTERACT nthin_xcouple1 gate_rbc_xcoup nthin_xcouple_ori;
SELECT -INTERACT nthin_xcouple_ori DNW -NOT nthin_xcouple_nw;
AND rf_diff CASRBC nthin_cas1;
AND ngate_rfc CASRBC gate_rbc_cas;
SELECT -INTERACT nthin_cas1 gate_rbc_cas nthin_cas_ori;
SELECT -INTERACT nthin_cas_ori DNW -NOT nthin_cas_nw;
SELECT -INTERACT gate_rbc_cas GTDMY2 gate_rbc_casb;
SELECT -INTERACT gate_rbc_cas GTDMY1 gate_rbc_cast;
AND RFESDMY RBCDMY rfesd_dmy1;
AND rfpad7 RBCDMY rfpad_a;
SELECT -INTERACT rfesd_dmy1 rfpad_a rfesd_dmy;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf1" -TEXTLAYER RBC_TEXT rfesd_r1a;
SELECT -INTERACT rfesd_dmy rfesd_r1a rfesd_r1;
AND HIADMY RBCDMY hiadmy_rbc;
SELECT -INTERACT metal9 hiadmy_rbc cpad1;
SELECT -INTERACT cpad1 indm9m cpad2;
SELECT -INTERACT cpad2 indm9p -NOT cpad;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf2" -TEXTLAYER RBC_TEXT rfesd_r2a;
SELECT -INTERACT rfesd_dmy rfesd_r2a rfesd_r2;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf3" -TEXTLAYER RBC_TEXT rfesd_r3a;
SELECT -INTERACT rfesd_dmy rfesd_r3a rfesd_r3;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf4" -TEXTLAYER RBC_TEXT rfesd_r4a;
SELECT -INTERACT rfesd_dmy rfesd_r4a rfesd_r4;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf5" -TEXTLAYER RBC_TEXT rfesd_r5a;
SELECT -INTERACT rfesd_dmy rfesd_r5a rfesd_r5;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf6" -TEXTLAYER RBC_TEXT rfesd_r6a;
SELECT -INTERACT rfesd_dmy rfesd_r6a rfesd_r6;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf7" -TEXTLAYER RBC_TEXT rfesd_r7a;
SELECT -INTERACT rfesd_dmy rfesd_r7a rfesd_r7;
SELECT -LABEL "RBCDMY" -TEXTNAME "rfesd_rf8" -TEXTLAYER RBC_TEXT rfesd_r8a;
SELECT -INTERACT rfesd_dmy rfesd_r8a rfesd_r8;
SELECT -INTERACT CO POI polyCont;
AND PROBEM6_T BULK PROBEM6_B;
AND metal3 MOMDMY23 mom3p11;
SELECT -INTERACT mom3p11 MOMDMY25 mom3p1;
AND PROBEM5_T BULK PROBEM5_B;
AND PROBEM2_T BULK PROBEM2_B;
AND PROBEM1_T BULK PROBEM1_B;
AND metal5 MOMDMY23 mom5p11;
SELECT -INTERACT mom5p11 MOMDMY25 -NOT mom5m1;
AND metal7 MOMDMY23 mom7p11;
SELECT -INTERACT mom7p11 MOMDMY25 mom7p1;
AND PROBEM4_T BULK PROBEM4_B;
AND metal6 MOMDMY23 mom6p11;
SELECT -INTERACT mom6p11 MOMDMY25 -NOT mom6m1;
NOT RFDMY_hia nxwell RFDMY_hia_psub;
AND PROBEM7_T BULK PROBEM7_B;
AND tndiff HVNW hvntap1;
SELECT -INTERACT hvntap1 CO hvntap2;
SELECT -INTERACT CO OD odCont1;
SELECT -INTERACT CO p3 p3Cont;
NOT odCont1 p3Cont odCont;
SELECT -INTERACT tpdiff odCont tpdiffco;
SELECT -INTERACT hvntap1 tpdiffco hvntap3;
OR hvntap2 hvntap3 ntaphv;
AND metal7 MOMDMY24 mom7p21;
SELECT -INTERACT mom7p21 MOMDMY25 -NOT mom7m2;
SELECT -INTERACT mom7p11 MOMDMY25 -NOT mom7m1;
NOT BULK psubband n_psub;
AND metal4 MOMDMY24 mom4p21;
SELECT -INTERACT mom4p21 MOMDMY25 -NOT mom4m2;
AND tpdiff psub pplug1;
SELECT -INTERACT pplug1 odCont pplug2;
SELECT -INTERACT tndiff odCont tndiffco;
SELECT -INTERACT pplug1 tndiffco pplug3;
OR pplug2 pplug3 pplug;
AND M4 MOMDMY4 MOM_field4;
AND rfdmy56 psub rfdmy56_via1;
SELECT -INSIDE rwel rfdmy56 rwel_rfdmy56;
NOT rfdmy56_via1 rwel_rfdmy56 rfdmy56_via2;
SELECT -INTERACT NW rwel nw_dnw;
NOT rfdmy56_via2 nw_dnw rfdmy56_via;
AND metal4 MOMDMY23 mom4p11;
SELECT -INTERACT mom4p11 MOMDMY25 -NOT mom4m1;
AND M5 MOMDMY5 MOM_field5;
SELECT -INTERACT mom5p11 MOMDMY25 mom5p1;
OR RV CBD VIA9a;
OR VIA9a CB VIA9;
NOT tngate1 VAR erc_nmos_gates1;
OR erc_nmos_gates1 hngate erc_nmos_gates2;
AND hngate7 DNW dhngate1;
AND dhngate1 HVPW dhngate;
OR erc_nmos_gates2 dhngate erc_nmos_gates3;
OR erc_nmos_gates3 hzgate erc_nmos_gates;
COPY ydio ydio_ass;
NOT gate1 OD25 gate1_not_IO1;
NOT gate1_not_IO1 OD33 gate1_not_IO2;
SIZE RFDMY_hia_psub -BY 0.005 rf_hia_via1;
NOT rf_hia_via1 RFDMY_hia_psub rf_hia_via2;
AND rf_hia_via2 psub rf_hia_via;
OR NW NT_Ni nw_ntn;
NOT OD2 nw_ntn nIO;
NOT SRM SRAMTIMER stimer;
NOT gate1 stimer gate_a1;
AND indm9a M10Y indm10;
SELECT -INTERACT indm10 IND_D4 indm10c;
AND M2 MOMDMY2 MOM_field2;
COPY VIA1i VIA1;
AND M7 MOMDMY7 MOM_field7;
AND DNW HVNW dnwc_hvnw;
SELECT -TOUCH ncolls cemit1 ncollsa;
NOT ncolls ncollsa nxwell_npn;
SELECT -INTERACT mom6p11 MOMDMY25 mom6p1;
AND tndiff nxwell nplug1;
SELECT -INTERACT nplug1 odCont nplug2;
SELECT -INTERACT nplug1 tpdiffco nplug3;
OR nplug2 nplug3 nplug;
NOT tpgate1 VAR erc_pmos_gates1;
OR erc_pmos_gates1 hpgate erc_pmos_gates;
AND metal5 MOMDMY24 mom5p21;
SELECT -INTERACT mom5p21 MOMDMY25 mom5p2;
SELECT -OUTSIDE NW NWDMY xwell;
AND tndiff xwell ntapx;
NOT ntapx BJTDMY ntap0;
NOT ntap0 BJT4TDMY ntap1;
SELECT -INTERACT ntap1 CO ntap2;
SELECT -INTERACT ntap1 tpdiffco ntap3;
OR ntap2 ntap3 ntap;
AND tpdiff HVPSUB hvptap1;
SELECT -INTERACT hvptap1 CO hvptap2;
SELECT -INTERACT hvptap1 tndiffco hvptap3;
OR hvptap2 hvptap3 hvptap;
AND poly_term nxwell poly_nw_via;
NOT NW NT_Ni c_pmall1;
NOT c_pmall1 OD33 pCore;
AND M3 MOMDMY3 MOM_field3;
AND tpdiff RFDMY_hia hiaplug1;
SELECT -INTERACT hiaplug1 CO hiaplug2;
SELECT -INTERACT hiaplug1 tndiffco hiaplug3;
OR hiaplug2 hiaplug3 hiaplug4;
NOT hiaplug4 nxwell hiaplug;
SELECT -INTERACT nxwell VAR -NOT nxwell_float1;
SELECT -INTERACT nxwell_float1 trwell -NOT nxwell_float2;
NOT nxwell_float2 TCDDMY nxwell_float;
AND PROBEM3_T BULK PROBEM3_B;
COPY VIA2i VIA2;
AND M6 MOMDMY6 MOM_field6;
AND c_pmall1 OD33 pIO;
SELECT -INTERACT mom5p21 MOMDMY25 -NOT mom5m2;
AND DNW nxwell dnwc;
COPY HVNW nxwell_hv;
NOT diff tpdiff tioda;
NOT tioda tndiff tiodb;
NOT tiodb PO tiod1;
NOT tiod1 RPO tiod2;
NOT tiod2 RPDMY tiod3;
NOT tiod3 NWDMY tiod;
SELECT -INTERACT mom4p21 MOMDMY25 mom4p2;
COPY VIA5i VIA5;
OR OD2 nw_ntn d_nmcore;
NOT BULK d_nmcore nCore;
AND metal6 MOMDMY24 mom6p21;
SELECT -INTERACT mom6p21 MOMDMY25 -NOT mom6m2;
SELECT -INTERACT mom7p21 MOMDMY25 mom7p2;
COPY VIA3i VIA3;
AND metal3 MOMDMY24 mom3p21;
SELECT -INTERACT mom3p21 MOMDMY25 -NOT mom3m2;
COPY VIA4i VIA4;
SELECT -INTERACT mom4p11 MOMDMY25 mom4p1;
SELECT -INTERACT mom3p21 MOMDMY25 mom3p2;
COPY VIA6i VIA6;
SELECT -INTERACT mom6p21 MOMDMY25 mom6p2;
SELECT -INTERACT mdiff odCont n_pplug1;
AND n_pplug1 PP n_pplug2;
NOT n_pplug2 nxwell n_pplug3_1;
AND gatennw PP vargt1_p;
NOT n_pplug3_1 vargt1_p n_pplug3_2;
NOT n_pplug3_2 HVNW n_pplug3;
NOT n_pplug3 rwel n_pplug4;
AND n_pplug4 n_psub n_pplug;
AND poly_term psub poly_psub_via;
COPY NT_Ni nt_n;
SELECT -INTERACT mom3p11 MOMDMY25 -NOT mom3m1;
AND tpdiff psub ptap1;
SELECT -INTERACT ptap1 CO ptap2;
SELECT -INTERACT ptap1 tndiffco ptap3;
OR ptap2 ptap3 ptap;
AND M1 MOMDMY1 MOM_field1;
CONNECT MOM_field1 metal1;
CONNECT MOM_field2 MOM_field1 -BY VIA1;
CONNECT MOM_field2 metal2;
CONNECT MOM_field3 MOM_field2 -BY VIA2;
CONNECT MOM_field3 metal3;
CONNECT MOM_field4 MOM_field3 -BY VIA3;
CONNECT MOM_field4 metal4;
CONNECT MOM_field5 MOM_field4 -BY VIA4;
CONNECT MOM_field5 metal5;
CONNECT MOM_field6 MOM_field5 -BY VIA5;
CONNECT MOM_field6 metal6;
CONNECT MOM_field7 MOM_field6 -BY VIA6;
CONNECT MOM_field7 metal7;
CONNECT cemit1 tpdiff;
CONNECT cnbase1 tndiff -BY nplug;
CONNECT cnemit1 tndiff;
CONNECT cpad metal9;
CONNECT cpbase1 tpdiff -BY pplug;
CONNECT d_nd25hvdw tndiff;
CONNECT d_nd25hvdw tpdiff;
CONNECT d_nd25hvi tpdiff;
CONNECT d_pd25hvd tndiff;
CONNECT d_pd25hvd tpdiff;
CONNECT d_tndiff tndiff;
CONNECT d_tpdiff tpdiff;
CONNECT gate1 poly;
CONNECT gate1_not_IO2 poly;
CONNECT gate_rbc_casb poly;
CONNECT gate_rbc_cast poly;
CONNECT gate_rbc_diff poly;
CONNECT gate_rbc_xcoup poly;
CONNECT metal1 d_nd25hvdw -BY odCont;
CONNECT metal1 d_pd25hvd -BY odCont;
CONNECT metal1 d_tndiff -BY odCont;
CONNECT metal1 d_tpdiff -BY odCont;
CONNECT metal1 p3 -BY p3Cont;
CONNECT metal1 poly -BY polyCont;
CONNECT metal1 s_nd25hvdw -BY odCont;
CONNECT metal1 s_pd25hvd -BY odCont;
CONNECT metal1 s_tndiff -BY odCont;
CONNECT metal1 s_tndiff_cas -BY odCont;
CONNECT metal1 s_tpdiff -BY odCont;
CONNECT metal1 schottky_n -BY odCont;
CONNECT metal1 schottky_p -BY odCont;
CONNECT metal1 tndiff -BY odCont;
CONNECT metal1 tpdiff -BY odCont;
CONNECT metal10 indm10c;
CONNECT metal10 metal9 -BY VIA9;
CONNECT metal2 metal1 -BY VIA1;
CONNECT metal3 metal2 -BY VIA2;
CONNECT metal3 mom3m1;
CONNECT metal3 mom3m2;
CONNECT metal3 mom3p1;
CONNECT metal3 mom3p2;
CONNECT metal4 metal3 -BY VIA3;
CONNECT metal4 mom4m1;
CONNECT metal4 mom4m2;
CONNECT metal4 mom4p1;
CONNECT metal4 mom4p2;
CONNECT metal5 metal4 -BY VIA4;
CONNECT metal5 mom5m1;
CONNECT metal5 mom5m2;
CONNECT metal5 mom5p1;
CONNECT metal5 mom5p2;
CONNECT metal6 metal5 -BY VIA5;
CONNECT metal6 mom6m1;
CONNECT metal6 mom6m2;
CONNECT metal6 mom6p1;
CONNECT metal6 mom6p2;
CONNECT metal7 indm9c;
CONNECT metal7 metal6 -BY VIA6;
CONNECT metal7 mom7m1;
CONNECT metal7 mom7m2;
CONNECT metal7 mom7p1;
CONNECT metal7 mom7p2;
CONNECT metal8 indm9c;
CONNECT metal8 sline_m8;
CONNECT metal9 indm9c;
CONNECT metal9 indm9m;
CONNECT metal9 indm9p;
CONNECT metal9 sline_m9m;
CONNECT metal9 sline_m9p;
CONNECT n_pplug tpdiff;
CONNECT ncoll1 nxwell_npn;
CONNECT nplug tndiff;
CONNECT ntap tndiff;
CONNECT poly crown -BY blc;
CONNECT poly poly_rf;
CONNECT pplug tpdiff;
CONNECT ptap tpdiff;
CONNECT s_nd25hvdw tndiff;
CONNECT s_pd25hvd tpdiff;
CONNECT s_tndiff tndiff;
CONNECT s_tndiff_cas tndiff;
CONNECT s_tpdiff tpdiff;
CONNECT tiod d_nd25hvdw;
CONNECT tiod d_nd25hvi;
CONNECT tiod d_pd25hvd;
CONNECT tiod tndiff;
CONNECT tiod tpdiff;
CONNECT tndiff crown -BY blc;
CONNECT tndiff nxwell_npn -BY nplug;
CONNECT tndiff tpdiff;
CONNECT tndiff ydio_ass;
CONNECT tndiff ydio_hole;
CONNECT tpdiff crown -BY blc;
CONNECT vargt poly;
CONNECT vargt_18 poly;
CONNECT vargt_25 poly;
CONNECT vargt_33 poly;
CONNECT vargtlpg poly;
SCONNECT nxwell poly_term -BY poly_nw_via;
SCONNECT nxwell PROBEM5_T -BY PROBEM5_B;
SCONNECT nxwell PROBEM2_T -BY PROBEM2_B;
SCONNECT nxwell DNW -BY dnwc;
SCONNECT nxwell PROBEM3_T -BY PROBEM3_B;
SCONNECT nxwell PROBEM7_T -BY PROBEM7_B;
SCONNECT nxwell PROBEM1_T -BY PROBEM1_B;
SCONNECT nxwell PROBEM4_T -BY PROBEM4_B;
SCONNECT nxwell PROBEM6_T -BY PROBEM6_B;
SCONNECT psub poly_term -BY poly_psub_via;
SCONNECT psub PROBEM5_T -BY PROBEM5_B;
SCONNECT psub PROBEM2_T -BY PROBEM2_B;
SCONNECT psub RFDMY_hia_psub -BY rf_hia_via;
SCONNECT psub PROBEM3_T -BY PROBEM3_B;
SCONNECT psub PROBEM7_T -BY PROBEM7_B;
SCONNECT psub PROBEM1_T -BY PROBEM1_B;
SCONNECT psub rfdmy56 -BY rfdmy56_via;
SCONNECT psub PROBEM4_T -BY PROBEM4_B;
SCONNECT psub PROBEM6_T -BY PROBEM6_B;
SCONNECT tpdiff rwel -BY pplug;
SCONNECT tpdiff n_psub -BY n_pplug;
SCONNECT tpdiff psub_term -BY pplug;
SCONNECT tpdiff psub -BY pplug;
SCONNECT tpdiff HVPSUB -BY hvptap;
SCONNECT tpdiff HVPW -BY hvptap;
SCONNECT tpdiff RFDMY_hia -BY hiaplug;
SCONNECT tpdiff coll1 -BY pplug;
SCONNECT HVNW DNW -BY dnwc_hvnw;
SCONNECT tndiff nxwell -BY nplug;
SCONNECT tndiff HVNW -BY ntaphv;
DEVICE LDDP ( pch_hv25_spw ) pgate_25hvd d_pd25hvd ( D ) poly ( G ) s_pd25hvd ( S ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25hvd , s_pd25hvd ) + perimeter_coincide ( pgate_25hvd , d_pd25hvd ) ) / 2 
 L = area ( pgate_25hvd ) / W 
 ];
DEVICE LDDP ( pch_hv25_spw ) pgate_25hvd_mac d_pd25hvd ( D ) poly ( G ) s_pd25hvd ( S ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25hvd_mac , s_pd25hvd ) + perimeter_coincide ( pgate_25hvd_mac , d_pd25hvd ) ) / 2 
 L = area ( pgate_25hvd_mac ) / W 
 ];
DEVICE LDDN ( nch_hv25_snw ) ngate_25hvdw d_nd25hvdw ( D ) poly ( G ) s_nd25hvdw ( S ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25hvdw , s_nd25hvdw ) + perimeter_coincide ( ngate_25hvdw , d_nd25hvdw ) ) / 2 
 L = area ( ngate_25hvdw ) / W 
 ];
DEVICE LDDN ( nch_hv25_snw ) ngate_25hvdw_mac d_nd25hvdw ( D ) poly ( G ) s_nd25hvdw ( S ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25hvdw_mac , s_nd25hvdw ) + perimeter_coincide ( ngate_25hvdw_mac , d_nd25hvdw ) ) / 2 
 L = area ( ngate_25hvdw_mac ) / W 
 ];
DEVICE MN ( nch ) ngate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate , tndiff ) + perimeter_inside ( ngate , tndiff ) ) / 2 
 L = area ( ngate ) / W 
 ];
DEVICE MN ( nch_18 ) ngate_18 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_18 , tndiff ) + perimeter_inside ( ngate_18 , tndiff ) ) / 2 
 L = area ( ngate_18 ) / W 
 ];
DEVICE MN ( nch_18_dnw ) dngate_18 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_18 , tndiff ) + perimeter_inside ( dngate_18 , tndiff ) ) / 2 
 L = area ( dngate_18 ) / W 
 ];
DEVICE MN ( nch_18_dnw ) dngate_18_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_18_mac , tndiff ) + perimeter_inside ( dngate_18_mac , tndiff ) ) / 2 
 L = area ( dngate_18_mac ) / W 
 ];
DEVICE MN ( nch_18 ) ngate_18_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_18_mac , tndiff ) + perimeter_inside ( ngate_18_mac , tndiff ) ) / 2 
 L = area ( ngate_18_mac ) / W 
 ];
DEVICE MN ( nch_25 ) ngate_25 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25 , tndiff ) + perimeter_inside ( ngate_25 , tndiff ) ) / 2 
 L = area ( ngate_25 ) / W 
 ];
DEVICE MN ( nch_25_dnw ) dngate_25 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25 , tndiff ) + perimeter_inside ( dngate_25 , tndiff ) ) / 2 
 L = area ( dngate_25 ) / W 
 ];
DEVICE MN ( nch_25_dnw ) dngate_25_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25_mac , tndiff ) + perimeter_inside ( dngate_25_mac , tndiff ) ) / 2 
 L = area ( dngate_25_mac ) / W 
 ];
DEVICE MN ( nch_25_dnwod ) dngate_25od poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25od , tndiff ) + perimeter_inside ( dngate_25od , tndiff ) ) / 2 
 L = area ( dngate_25od ) / W 
 ];
DEVICE MN ( nch_25_dnwod ) dngate_25od_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25od_mac , tndiff ) + perimeter_inside ( dngate_25od_mac , tndiff ) ) / 2 
 L = area ( dngate_25od_mac ) / W 
 ];
DEVICE MN ( nch_25_dnwud ) dngate_25ud poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25ud , tndiff ) + perimeter_inside ( dngate_25ud , tndiff ) ) / 2 
 L = area ( dngate_25ud ) / W 
 ];
DEVICE MN ( nch_25_dnwud ) dngate_25ud_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25ud_mac , tndiff ) + perimeter_inside ( dngate_25ud_mac , tndiff ) ) / 2 
 L = area ( dngate_25ud_mac ) / W 
 ];
DEVICE MN ( nch_25 ) ngate_25_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25_mac , tndiff ) + perimeter_inside ( ngate_25_mac , tndiff ) ) / 2 
 L = area ( ngate_25_mac ) / W 
 ];
DEVICE MN ( nch_25od ) ngate_25od poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25od , tndiff ) + perimeter_inside ( ngate_25od , tndiff ) ) / 2 
 L = area ( ngate_25od ) / W 
 ];
DEVICE MN ( nch_25od28 ) ngate_25od28 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25od28 , tndiff ) + perimeter_inside ( ngate_25od28 , tndiff ) ) / 2 
 L = area ( ngate_25od28 ) / W 
 ];
DEVICE MN ( nch_25od28_dnw ) dngate_25od28 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25od28 , tndiff ) + perimeter_inside ( dngate_25od28 , tndiff ) ) / 2 
 L = area ( dngate_25od28 ) / W 
 ];
DEVICE MN ( nch_25od28_dnw ) dngate_25od28_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_25od28_mac , tndiff ) + perimeter_inside ( dngate_25od28_mac , tndiff ) ) / 2 
 L = area ( dngate_25od28_mac ) / W 
 ];
DEVICE MN ( nch_25od28 ) ngate_25od28_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25od28_mac , tndiff ) + perimeter_inside ( ngate_25od28_mac , tndiff ) ) / 2 
 L = area ( ngate_25od28_mac ) / W 
 ];
DEVICE MN ( nch_25od ) ngate_25od_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25od_mac , tndiff ) + perimeter_inside ( ngate_25od_mac , tndiff ) ) / 2 
 L = area ( ngate_25od_mac ) / W 
 ];
DEVICE MN ( nch_25ud ) ngate_25ud poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25ud , tndiff ) + perimeter_inside ( ngate_25ud , tndiff ) ) / 2 
 L = area ( ngate_25ud ) / W 
 ];
DEVICE MN ( nch_25ud ) ngate_25ud_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25ud_mac , tndiff ) + perimeter_inside ( ngate_25ud_mac , tndiff ) ) / 2 
 L = area ( ngate_25ud_mac ) / W 
 ];
DEVICE MN ( nch_33 ) ngate_33 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_33 , tndiff ) + perimeter_inside ( ngate_33 , tndiff ) ) / 2 
 L = area ( ngate_33 ) / W 
 ];
DEVICE MN ( nch_33_dnw ) dngate_33 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_33 , tndiff ) + perimeter_inside ( dngate_33 , tndiff ) ) / 2 
 L = area ( dngate_33 ) / W 
 ];
DEVICE MN ( nch_33_dnw ) dngate_33_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_33_mac , tndiff ) + perimeter_inside ( dngate_33_mac , tndiff ) ) / 2 
 L = area ( dngate_33_mac ) / W 
 ];
DEVICE MN ( nch_33 ) ngate_33_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_33_mac , tndiff ) + perimeter_inside ( ngate_33_mac , tndiff ) ) / 2 
 L = area ( ngate_33_mac ) / W 
 ];
DEVICE MN ( nch_dnw ) nrgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nrgate , tndiff ) + perimeter_inside ( nrgate , tndiff ) ) / 2 
 L = area ( nrgate ) / W 
 ];
DEVICE MN ( nch_dnw_1tr ) ngate_1tr poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_1tr , tndiff ) + perimeter_inside ( ngate_1tr , tndiff ) ) / 2 
 L = area ( ngate_1tr ) / W 
 ];
DEVICE MN ( nch_dnw ) nrgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nrgate_mac , tndiff ) + perimeter_inside ( nrgate_mac , tndiff ) ) / 2 
 L = area ( nrgate_mac ) / W 
 ];
DEVICE MN ( nch_dnw_w ) ngate_dnw_w poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_dnw_w , tndiff ) + perimeter_inside ( ngate_dnw_w , tndiff ) ) / 2 
 L = area ( ngate_dnw_w ) / W 
 ];
DEVICE MN ( nch_dnw_w_lvt ) ngate_dnw_w_lvt poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_dnw_w_lvt , tndiff ) + perimeter_inside ( ngate_dnw_w_lvt , tndiff ) ) / 2 
 L = area ( ngate_dnw_w_lvt ) / W 
 ];
DEVICE MN ( nch_esd18 ) ngate_esd18 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_esd18 , tndiff ) + perimeter_inside ( ngate_esd18 , tndiff ) ) / 2 
 L = area ( ngate_esd18 ) / W 
 ];
DEVICE MN ( nch_esd18_dnw ) dngate_esd18 poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_esd18 , tndiff ) + perimeter_inside ( dngate_esd18 , tndiff ) ) / 2 
 L = area ( dngate_esd18 ) / W 
 ];
DEVICE MN ( nch_esd18_dnw ) dngate_esd18_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( dngate_esd18_mac , tndiff ) + perimeter_inside ( dngate_esd18_mac , tndiff ) ) / 2 
 L = area ( dngate_esd18_mac ) / W 
 ];
DEVICE MN ( nch_esd18 ) ngate_esd18_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_esd18_mac , tndiff ) + perimeter_inside ( ngate_esd18_mac , tndiff ) ) / 2 
 L = area ( ngate_esd18_mac ) / W 
 ];
DEVICE MN ( nch_hvn ) hngate poly ( G ) tndiff ( S ) tndiff ( D ) HVPSUB ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( hngate , tndiff ) + perimeter_inside ( hngate , tndiff ) ) / 2 
 L = area ( hngate ) / W 
 ];
DEVICE MN ( nch_hvt ) nhvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nhvgate , tndiff ) + perimeter_inside ( nhvgate , tndiff ) ) / 2 
 L = area ( nhvgate ) / W 
 ];
DEVICE MN ( nch_hvt_dnw ) n1hvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1hvgate , tndiff ) + perimeter_inside ( n1hvgate , tndiff ) ) / 2 
 L = area ( n1hvgate ) / W 
 ];
DEVICE MN ( nch_hvt_dnw ) n1hvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1hvgate_mac , tndiff ) + perimeter_inside ( n1hvgate_mac , tndiff ) ) / 2 
 L = area ( n1hvgate_mac ) / W 
 ];
DEVICE MN ( nch_hvt ) nhvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nhvgate_mac , tndiff ) + perimeter_inside ( nhvgate_mac , tndiff ) ) / 2 
 L = area ( nhvgate_mac ) / W 
 ];
DEVICE MN ( nch_hvz ) hzgate poly ( G ) tndiff ( S ) tndiff ( D ) HVPSUB ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( hzgate , tndiff ) + perimeter_inside ( hzgate , tndiff ) ) / 2 
 L = area ( hzgate ) / W 
 ];
DEVICE MN ( nch_lpg ) ngatelpg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngatelpg , tndiff ) + perimeter_inside ( ngatelpg , tndiff ) ) / 2 
 L = area ( ngatelpg ) / W 
 ];
DEVICE MN ( nch_lpghvt ) nhvgatelpg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nhvgatelpg , tndiff ) + perimeter_inside ( nhvgatelpg , tndiff ) ) / 2 
 L = area ( nhvgatelpg ) / W 
 ];
DEVICE MN ( nch_lpgna ) nlgatelpg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nlgatelpg , tndiff ) + perimeter_inside ( nlgatelpg , tndiff ) ) / 2 
 L = area ( nlgatelpg ) / W 
 ];
DEVICE MN ( nch_lvt ) nlvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nlvgate , tndiff ) + perimeter_inside ( nlvgate , tndiff ) ) / 2 
 L = area ( nlvgate ) / W 
 ];
DEVICE MN ( nch_lvt_dnw ) n1lvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1lvgate , tndiff ) + perimeter_inside ( n1lvgate , tndiff ) ) / 2 
 L = area ( n1lvgate ) / W 
 ];
DEVICE MN ( nch_lvt_dnw ) n1lvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1lvgate_mac , tndiff ) + perimeter_inside ( n1lvgate_mac , tndiff ) ) / 2 
 L = area ( n1lvgate_mac ) / W 
 ];
DEVICE MN ( nch_lvt ) nlvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nlvgate_mac , tndiff ) + perimeter_inside ( nlvgate_mac , tndiff ) ) / 2 
 L = area ( nlvgate_mac ) / W 
 ];
DEVICE MN ( nch ) ngate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_mac , tndiff ) + perimeter_inside ( ngate_mac , tndiff ) ) / 2 
 L = area ( ngate_mac ) / W 
 ];
DEVICE MN ( nch_mlvt ) nilvtgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nilvtgate , tndiff ) + perimeter_inside ( nilvtgate , tndiff ) ) / 2 
 L = area ( nilvtgate ) / W 
 ];
DEVICE MN ( nch_mlvt_dnw ) n1ilvtgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1ilvtgate , tndiff ) + perimeter_inside ( n1ilvtgate , tndiff ) ) / 2 
 L = area ( n1ilvtgate ) / W 
 ];
DEVICE MN ( nch_mlvt_dnw ) n1ilvtgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1ilvtgate_mac , tndiff ) + perimeter_inside ( n1ilvtgate_mac , tndiff ) ) / 2 
 L = area ( n1ilvtgate_mac ) / W 
 ];
DEVICE MN ( nch_mlvt ) nilvtgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nilvtgate_mac , tndiff ) + perimeter_inside ( nilvtgate_mac , tndiff ) ) / 2 
 L = area ( nilvtgate_mac ) / W 
 ];
DEVICE MN ( nch_na ) nlgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nlgate , tndiff ) + perimeter_inside ( nlgate , tndiff ) ) / 2 
 L = area ( nlgate ) / W 
 ];
DEVICE MN ( nch_na18 ) ngate_18na poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_18na , tndiff ) + perimeter_inside ( ngate_18na , tndiff ) ) / 2 
 L = area ( ngate_18na ) / W 
 ];
DEVICE MN ( nch_na18 ) ngate_18na_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_18na_mac , tndiff ) + perimeter_inside ( ngate_18na_mac , tndiff ) ) / 2 
 L = area ( ngate_18na_mac ) / W 
 ];
DEVICE MN ( nch_na25 ) ngate_25na poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25na , tndiff ) + perimeter_inside ( ngate_25na , tndiff ) ) / 2 
 L = area ( ngate_25na ) / W 
 ];
DEVICE MN ( nch_na25 ) ngate_25na_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25na_mac , tndiff ) + perimeter_inside ( ngate_25na_mac , tndiff ) ) / 2 
 L = area ( ngate_25na_mac ) / W 
 ];
DEVICE MN ( nch_na25od ) ngate_25naod poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25naod , tndiff ) + perimeter_inside ( ngate_25naod , tndiff ) ) / 2 
 L = area ( ngate_25naod ) / W 
 ];
DEVICE MN ( nch_na25od ) ngate_25naod_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25naod_mac , tndiff ) + perimeter_inside ( ngate_25naod_mac , tndiff ) ) / 2 
 L = area ( ngate_25naod_mac ) / W 
 ];
DEVICE MN ( nch_na25ud ) ngate_25naud poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25naud , tndiff ) + perimeter_inside ( ngate_25naud , tndiff ) ) / 2 
 L = area ( ngate_25naud ) / W 
 ];
DEVICE MN ( nch_na25ud ) ngate_25naud_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_25naud_mac , tndiff ) + perimeter_inside ( ngate_25naud_mac , tndiff ) ) / 2 
 L = area ( ngate_25naud_mac ) / W 
 ];
DEVICE MN ( nch_na33 ) ngate_33na poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_33na , tndiff ) + perimeter_inside ( ngate_33na , tndiff ) ) / 2 
 L = area ( ngate_33na ) / W 
 ];
DEVICE MN ( nch_na33 ) ngate_33na_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_33na_mac , tndiff ) + perimeter_inside ( ngate_33na_mac , tndiff ) ) / 2 
 L = area ( ngate_33na_mac ) / W 
 ];
DEVICE MN ( nch_na ) nlgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nlgate_mac , tndiff ) + perimeter_inside ( nlgate_mac , tndiff ) ) / 2 
 L = area ( nlgate_mac ) / W 
 ];
DEVICE MN ( nch_timer ) ngate_st poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_st , tndiff ) + perimeter_inside ( ngate_st , tndiff ) ) / 2 
 L = area ( ngate_st ) / W 
 ];
DEVICE MN ( nch_uhvt ) nuhvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nuhvgate , tndiff ) + perimeter_inside ( nuhvgate , tndiff ) ) / 2 
 L = area ( nuhvgate ) / W 
 ];
DEVICE MN ( nch_uhvt_dnw ) n1uhvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1uhvgate , tndiff ) + perimeter_inside ( n1uhvgate , tndiff ) ) / 2 
 L = area ( n1uhvgate ) / W 
 ];
DEVICE MN ( nch_uhvt_dnw ) n1uhvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1uhvgate_mac , tndiff ) + perimeter_inside ( n1uhvgate_mac , tndiff ) ) / 2 
 L = area ( n1uhvgate_mac ) / W 
 ];
DEVICE MN ( nch_uhvt ) nuhvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nuhvgate_mac , tndiff ) + perimeter_inside ( nuhvgate_mac , tndiff ) ) / 2 
 L = area ( nuhvgate_mac ) / W 
 ];
DEVICE MN ( nch_ulvt ) nuvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nuvgate , tndiff ) + perimeter_inside ( nuvgate , tndiff ) ) / 2 
 L = area ( nuvgate ) / W 
 ];
DEVICE MN ( nch_ulvt_dnw ) n1uvgate poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1uvgate , tndiff ) + perimeter_inside ( n1uvgate , tndiff ) ) / 2 
 L = area ( n1uvgate ) / W 
 ];
DEVICE MN ( nch_ulvt_dnw ) n1uvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( n1uvgate_mac , tndiff ) + perimeter_inside ( n1uvgate_mac , tndiff ) ) / 2 
 L = area ( n1uvgate_mac ) / W 
 ];
DEVICE MN ( nch_ulvt ) nuvgate_mac poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( nuvgate_mac , tndiff ) + perimeter_inside ( nuvgate_mac , tndiff ) ) / 2 
 L = area ( nuvgate_mac ) / W 
 ];
DEVICE MN ( nch_w ) ngate_w1t poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_w1t , tndiff ) + perimeter_inside ( ngate_w1t , tndiff ) ) / 2 
 L = area ( ngate_w1t ) / W 
 ];
DEVICE MN ( nch_w_lvt ) ngate_w1t_lvt poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_w1t_lvt , tndiff ) + perimeter_inside ( ngate_w1t_lvt , tndiff ) ) / 2 
 L = area ( ngate_w1t_lvt ) / W 
 ];
DEVICE MN ( nchpd_dphcsr ) ngate_spddphc poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spddphc , tndiff ) + perimeter_inside ( ngate_spddphc , tndiff ) ) / 2 
 L = area ( ngate_spddphc ) / W 
 ];
DEVICE MN ( nchpd_dpsr ) ngate_spddp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spddp , tndiff ) + perimeter_inside ( ngate_spddp , tndiff ) ) / 2 
 L = area ( ngate_spddp ) / W 
 ];
DEVICE MN ( nchpd_hvtdphcsr ) ngate_hvspddphc poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_hvspddphc , tndiff ) + perimeter_inside ( ngate_hvspddphc , tndiff ) ) / 2 
 L = area ( ngate_hvspddphc ) / W 
 ];
DEVICE MN ( nchpd_hvtdpsr ) ngate_hvspddp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_hvspddp , tndiff ) + perimeter_inside ( ngate_hvspddp , tndiff ) ) / 2 
 L = area ( ngate_hvspddp ) / W 
 ];
DEVICE MN ( nchpd_hvtsr ) ngate_hvspd poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_hvspd , tndiff ) + perimeter_inside ( ngate_hvspd , tndiff ) ) / 2 
 L = area ( ngate_hvspd ) / W 
 ];
DEVICE MN ( nchpd_lpgdpsr ) ngate_spdlpgdp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdlpgdp , tndiff ) + perimeter_inside ( ngate_spdlpgdp , tndiff ) ) / 2 
 L = area ( ngate_spdlpgdp ) / W 
 ];
DEVICE MN ( nchpd_lpgsr ) ngate_spdlpg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdlpg , tndiff ) + perimeter_inside ( ngate_spdlpg , tndiff ) ) / 2 
 L = area ( ngate_spdlpg ) / W 
 ];
DEVICE MN ( nchpd_lpgtpsr ) ngate_spdlpgtp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdlpgtp , tndiff ) + perimeter_inside ( ngate_spdlpgtp , tndiff ) ) / 2 
 L = area ( ngate_spdlpgtp ) / W 
 ];
DEVICE MN ( nchpd_sr ) ngate_spd poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spd , tndiff ) + perimeter_inside ( ngate_spd , tndiff ) ) / 2 
 L = area ( ngate_spd ) / W 
 ];
DEVICE MN ( nchpd_ulpdpsr ) ngate_spdulpdp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdulpdp , tndiff ) + perimeter_inside ( ngate_spdulpdp , tndiff ) ) / 2 
 L = area ( ngate_spdulpdp ) / W 
 ];
DEVICE MN ( nchpd_ulpsr ) ngate_spdulp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdulp , tndiff ) + perimeter_inside ( ngate_spdulp , tndiff ) ) / 2 
 L = area ( ngate_spdulp ) / W 
 ];
DEVICE MN ( nchpd_wisr ) ngate_spdwi poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdwi , tndiff ) + perimeter_inside ( ngate_spdwi , tndiff ) ) / 2 
 L = area ( ngate_spdwi ) / W 
 ];
DEVICE MN ( nchpd_wosr ) ngate_spdwo poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spdwo , tndiff ) + perimeter_inside ( ngate_spdwo , tndiff ) ) / 2 
 L = area ( ngate_spdwo ) / W 
 ];
DEVICE MN ( nchpg_dphcsr ) ngate_spgdphc poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spgdphc , tndiff ) + perimeter_inside ( ngate_spgdphc , tndiff ) ) / 2 
 L = area ( ngate_spgdphc ) / W 
 ];
DEVICE MN ( nchpg_dpsr ) ngate_spgdp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spgdp , tndiff ) + perimeter_inside ( ngate_spgdp , tndiff ) ) / 2 
 L = area ( ngate_spgdp ) / W 
 ];
DEVICE MN ( nchpg_hvtdphcsr ) ngate_hvspgdphc poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_hvspgdphc , tndiff ) + perimeter_inside ( ngate_hvspgdphc , tndiff ) ) / 2 
 L = area ( ngate_hvspgdphc ) / W 
 ];
DEVICE MN ( nchpg_hvtdpsr ) ngate_hvspgdp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_hvspgdp , tndiff ) + perimeter_inside ( ngate_hvspgdp , tndiff ) ) / 2 
 L = area ( ngate_hvspgdp ) / W 
 ];
DEVICE MN ( nchpg_hvtsr ) ngate_hvspg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_hvspg , tndiff ) + perimeter_inside ( ngate_hvspg , tndiff ) ) / 2 
 L = area ( ngate_hvspg ) / W 
 ];
DEVICE MN ( nchpg_lpgdpsr ) ngate_spglpgdp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spglpgdp , tndiff ) + perimeter_inside ( ngate_spglpgdp , tndiff ) ) / 2 
 L = area ( ngate_spglpgdp ) / W 
 ];
DEVICE MN ( nchpg_lpgsr ) ngate_spglpg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spglpg , tndiff ) + perimeter_inside ( ngate_spglpg , tndiff ) ) / 2 
 L = area ( ngate_spglpg ) / W 
 ];
DEVICE MN ( nchpg_lpgtpsr ) ngate_spglpgtp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spglpgtp , tndiff ) + perimeter_inside ( ngate_spglpgtp , tndiff ) ) / 2 
 L = area ( ngate_spglpgtp ) / W 
 ];
DEVICE MN ( nchpg_sr ) ngate_spg poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spg , tndiff ) + perimeter_inside ( ngate_spg , tndiff ) ) / 2 
 L = area ( ngate_spg ) / W 
 ];
DEVICE MN ( nchpg_ulpdpsr ) ngate_spgulpdp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spgulpdp , tndiff ) + perimeter_inside ( ngate_spgulpdp , tndiff ) ) / 2 
 L = area ( ngate_spgulpdp ) / W 
 ];
DEVICE MN ( nchpg_ulpsr ) ngate_spgulp poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spgulp , tndiff ) + perimeter_inside ( ngate_spgulp , tndiff ) ) / 2 
 L = area ( ngate_spgulp ) / W 
 ];
DEVICE MN ( nchpg_wisr ) ngate_spgwi poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spgwi , tndiff ) + perimeter_inside ( ngate_spgwi , tndiff ) ) / 2 
 L = area ( ngate_spgwi ) / W 
 ];
DEVICE MN ( nchpg_wosr ) ngate_spgwo poly ( G ) tndiff ( S ) tndiff ( D ) psub ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( ngate_spgwo , tndiff ) + perimeter_inside ( ngate_spgwo , tndiff ) ) / 2 
 L = area ( ngate_spgwo ) / W 
 ];
DEVICE MP ( pch ) pgate poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate , tpdiff ) + perimeter_inside ( pgate , tpdiff ) ) / 2 
 L = area ( pgate ) / W 
 ];
DEVICE MP ( pch_18 ) pgate_18 poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_18 , tpdiff ) + perimeter_inside ( pgate_18 , tpdiff ) ) / 2 
 L = area ( pgate_18 ) / W 
 ];
DEVICE MP ( pch_18 ) pgate_18_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_18_mac , tpdiff ) + perimeter_inside ( pgate_18_mac , tpdiff ) ) / 2 
 L = area ( pgate_18_mac ) / W 
 ];
DEVICE MP ( pch_25 ) pgate_25 poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25 , tpdiff ) + perimeter_inside ( pgate_25 , tpdiff ) ) / 2 
 L = area ( pgate_25 ) / W 
 ];
DEVICE MP ( pch_25 ) pgate_25_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25_mac , tpdiff ) + perimeter_inside ( pgate_25_mac , tpdiff ) ) / 2 
 L = area ( pgate_25_mac ) / W 
 ];
DEVICE MP ( pch_25od ) pgate_25od poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25od , tpdiff ) + perimeter_inside ( pgate_25od , tpdiff ) ) / 2 
 L = area ( pgate_25od ) / W 
 ];
DEVICE MP ( pch_25od28 ) pgate_25od28 poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25od28 , tpdiff ) + perimeter_inside ( pgate_25od28 , tpdiff ) ) / 2 
 L = area ( pgate_25od28 ) / W 
 ];
DEVICE MP ( pch_25od28 ) pgate_25od28_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25od28_mac , tpdiff ) + perimeter_inside ( pgate_25od28_mac , tpdiff ) ) / 2 
 L = area ( pgate_25od28_mac ) / W 
 ];
DEVICE MP ( pch_25od ) pgate_25od_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25od_mac , tpdiff ) + perimeter_inside ( pgate_25od_mac , tpdiff ) ) / 2 
 L = area ( pgate_25od_mac ) / W 
 ];
DEVICE MP ( pch_25ud ) pgate_25ud poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25ud , tpdiff ) + perimeter_inside ( pgate_25ud , tpdiff ) ) / 2 
 L = area ( pgate_25ud ) / W 
 ];
DEVICE MP ( pch_25ud ) pgate_25ud_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_25ud_mac , tpdiff ) + perimeter_inside ( pgate_25ud_mac , tpdiff ) ) / 2 
 L = area ( pgate_25ud_mac ) / W 
 ];
DEVICE MP ( pch_33 ) pgate_33 poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_33 , tpdiff ) + perimeter_inside ( pgate_33 , tpdiff ) ) / 2 
 L = area ( pgate_33 ) / W 
 ];
DEVICE MP ( pch_33 ) pgate_33_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_33_mac , tpdiff ) + perimeter_inside ( pgate_33_mac , tpdiff ) ) / 2 
 L = area ( pgate_33_mac ) / W 
 ];
DEVICE MP ( pch_edc ) pgate_1tr poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_1tr , tpdiff ) + perimeter_inside ( pgate_1tr , tpdiff ) ) / 2 
 L = area ( pgate_1tr ) / W 
 ];
DEVICE MP ( pch_hvp ) hpgate poly ( G ) tpdiff ( S ) tpdiff ( D ) HVNW ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( hpgate , tpdiff ) + perimeter_inside ( hpgate , tpdiff ) ) / 2 
 L = area ( hpgate ) / W 
 ];
DEVICE MP ( pch_hvt ) phvgate poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( phvgate , tpdiff ) + perimeter_inside ( phvgate , tpdiff ) ) / 2 
 L = area ( phvgate ) / W 
 ];
DEVICE MP ( pch_hvt ) phvgate_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( phvgate_mac , tpdiff ) + perimeter_inside ( phvgate_mac , tpdiff ) ) / 2 
 L = area ( phvgate_mac ) / W 
 ];
DEVICE MP ( pch_lpg ) pgatelpg poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgatelpg , tpdiff ) + perimeter_inside ( pgatelpg , tpdiff ) ) / 2 
 L = area ( pgatelpg ) / W 
 ];
DEVICE MP ( pch_lpghvt ) phvgatelpg poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( phvgatelpg , tpdiff ) + perimeter_inside ( phvgatelpg , tpdiff ) ) / 2 
 L = area ( phvgatelpg ) / W 
 ];
DEVICE MP ( pch_lvt ) plvgate poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( plvgate , tpdiff ) + perimeter_inside ( plvgate , tpdiff ) ) / 2 
 L = area ( plvgate ) / W 
 ];
DEVICE MP ( pch_lvt ) plvgate_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( plvgate_mac , tpdiff ) + perimeter_inside ( plvgate_mac , tpdiff ) ) / 2 
 L = area ( plvgate_mac ) / W 
 ];
DEVICE MP ( pch ) pgate_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_mac , tpdiff ) + perimeter_inside ( pgate_mac , tpdiff ) ) / 2 
 L = area ( pgate_mac ) / W 
 ];
DEVICE MP ( pch_mlvt ) pilvtgate poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pilvtgate , tpdiff ) + perimeter_inside ( pilvtgate , tpdiff ) ) / 2 
 L = area ( pilvtgate ) / W 
 ];
DEVICE MP ( pch_mlvt ) pilvtgate_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pilvtgate_mac , tpdiff ) + perimeter_inside ( pilvtgate_mac , tpdiff ) ) / 2 
 L = area ( pilvtgate_mac ) / W 
 ];
DEVICE MP ( pch_timer ) pgate_st poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_st , tpdiff ) + perimeter_inside ( pgate_st , tpdiff ) ) / 2 
 L = area ( pgate_st ) / W 
 ];
DEVICE MP ( pch_uhvt ) puhvgate poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( puhvgate , tpdiff ) + perimeter_inside ( puhvgate , tpdiff ) ) / 2 
 L = area ( puhvgate ) / W 
 ];
DEVICE MP ( pch_uhvt ) puhvgate_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( puhvgate_mac , tpdiff ) + perimeter_inside ( puhvgate_mac , tpdiff ) ) / 2 
 L = area ( puhvgate_mac ) / W 
 ];
DEVICE MP ( pch_ulvt ) puvgate poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( puvgate , tpdiff ) + perimeter_inside ( puvgate , tpdiff ) ) / 2 
 L = area ( puvgate ) / W 
 ];
DEVICE MP ( pch_ulvt ) puvgate_mac poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( puvgate_mac , tpdiff ) + perimeter_inside ( puvgate_mac , tpdiff ) ) / 2 
 L = area ( puvgate_mac ) / W 
 ];
DEVICE MP ( pch_w ) pgate_w1t poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_w1t , tpdiff ) + perimeter_inside ( pgate_w1t , tpdiff ) ) / 2 
 L = area ( pgate_w1t ) / W 
 ];
DEVICE MP ( pch_w_lvt ) pgate_w1t_lvt poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_w1t_lvt , tpdiff ) + perimeter_inside ( pgate_w1t_lvt , tpdiff ) ) / 2 
 L = area ( pgate_w1t_lvt ) / W 
 ];
DEVICE MP ( pchpu_dphcsr ) pgate_sdphc poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_sdphc , tpdiff ) + perimeter_inside ( pgate_sdphc , tpdiff ) ) / 2 
 L = area ( pgate_sdphc ) / W 
 ];
DEVICE MP ( pchpu_dpsr ) pgate_sdp poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_sdp , tpdiff ) + perimeter_inside ( pgate_sdp , tpdiff ) ) / 2 
 L = area ( pgate_sdp ) / W 
 ];
DEVICE MP ( pchpu_hvtdphcsr ) pgate_hvsdphc poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_hvsdphc , tpdiff ) + perimeter_inside ( pgate_hvsdphc , tpdiff ) ) / 2 
 L = area ( pgate_hvsdphc ) / W 
 ];
DEVICE MP ( pchpu_hvtdpsr ) pgate_hvsdp poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_hvsdp , tpdiff ) + perimeter_inside ( pgate_hvsdp , tpdiff ) ) / 2 
 L = area ( pgate_hvsdp ) / W 
 ];
DEVICE MP ( pchpu_hvtsr ) pgate_hvs poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_hvs , tpdiff ) + perimeter_inside ( pgate_hvs , tpdiff ) ) / 2 
 L = area ( pgate_hvs ) / W 
 ];
DEVICE MP ( pchpu_lpgdpsr ) pgate_sdplpg poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_sdplpg , tpdiff ) + perimeter_inside ( pgate_sdplpg , tpdiff ) ) / 2 
 L = area ( pgate_sdplpg ) / W 
 ];
DEVICE MP ( pchpu_lpgsr ) pgate_slpg poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_slpg , tpdiff ) + perimeter_inside ( pgate_slpg , tpdiff ) ) / 2 
 L = area ( pgate_slpg ) / W 
 ];
DEVICE MP ( pchpu_lpgtpsr ) pgate_stplpg poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_stplpg , tpdiff ) + perimeter_inside ( pgate_stplpg , tpdiff ) ) / 2 
 L = area ( pgate_stplpg ) / W 
 ];
DEVICE MP ( pchpu_sr ) pgate_s poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_s , tpdiff ) + perimeter_inside ( pgate_s , tpdiff ) ) / 2 
 L = area ( pgate_s ) / W 
 ];
DEVICE MP ( pchpu_ulpdpsr ) pgate_sdpulp poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_sdpulp , tpdiff ) + perimeter_inside ( pgate_sdpulp , tpdiff ) ) / 2 
 L = area ( pgate_sdpulp ) / W 
 ];
DEVICE MP ( pchpu_ulpsr ) pgate_sulp poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_sulp , tpdiff ) + perimeter_inside ( pgate_sulp , tpdiff ) ) / 2 
 L = area ( pgate_sulp ) / W 
 ];
DEVICE MP ( pchpu_wisr ) pgate_swi poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_swi , tpdiff ) + perimeter_inside ( pgate_swi , tpdiff ) ) / 2 
 L = area ( pgate_swi ) / W 
 ];
DEVICE MP ( pchpu_wosr ) pgate_swo poly ( G ) tpdiff ( S ) tpdiff ( D ) nxwell ( B ) [ 
 property W , L 
 W = ( perimeter_coincide ( pgate_swo , tpdiff ) + perimeter_inside ( pgate_swo , tpdiff ) ) / 2 
 L = area ( pgate_swo ) / W 
 ];
LVS_CHECK_PROPERTY LDDP ( pch_hv25_spw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY LDDP ( pch_hv25_spw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY LDDN ( nch_hv25_snw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY LDDN ( nch_hv25_snw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_18 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_18 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_18_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_18_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25_dnwod ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25_dnwod ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25_dnwud ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25_dnwud ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25od ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25od ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25od28 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25od28 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25od28_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25od28_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_25ud ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_25ud ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_33 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_33 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_33_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_33_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_dnw_1tr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_dnw_1tr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_dnw_w ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_dnw_w ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_dnw_w_lvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_dnw_w_lvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_esd18 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_esd18 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_esd18_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_esd18_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_hvn ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_hvn ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_hvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_hvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_hvt_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_hvt_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_hvz ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_hvz ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_lpg ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_lpg ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_lpghvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_lpghvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_lpgna ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_lpgna ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_lvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_lvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_lvt_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_lvt_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_mlvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_mlvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_mlvt_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_mlvt_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_na ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_na ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_na18 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_na18 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_na25 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_na25 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_na25od ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_na25od ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_na25ud ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_na25ud ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_na33 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_na33 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_timer ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_timer ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_uhvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_uhvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_uhvt_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_uhvt_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_ulvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_ulvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_ulvt_dnw ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_ulvt_dnw ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_w ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_w ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nch_w_lvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nch_w_lvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_dphcsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_dphcsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_dpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_dpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_hvtdphcsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_hvtdphcsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_hvtdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_hvtdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_hvtsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_hvtsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_lpgdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_lpgdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_lpgsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_lpgsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_lpgtpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_lpgtpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_sr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_sr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_ulpdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_ulpdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_ulpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_ulpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_wisr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_wisr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpd_wosr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpd_wosr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_dphcsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_dphcsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_dpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_dpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_hvtdphcsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_hvtdphcsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_hvtdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_hvtdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_hvtsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_hvtsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_lpgdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_lpgdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_lpgsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_lpgsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_lpgtpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_lpgtpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_sr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_sr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_ulpdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_ulpdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_ulpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_ulpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_wisr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_wisr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MN ( nchpg_wosr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MN ( nchpg_wosr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_18 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_18 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_25 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_25 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_25od ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_25od ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_25od28 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_25od28 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_25ud ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_25ud ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_33 ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_33 ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_edc ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_edc ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_hvp ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_hvp ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_hvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_hvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_lpg ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_lpg ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_lpghvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_lpghvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_lvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_lvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_mlvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_mlvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_timer ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_timer ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_uhvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_uhvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_ulvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_ulvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_w ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_w ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pch_w_lvt ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pch_w_lvt ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_dphcsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_dphcsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_dpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_dpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_hvtdphcsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_hvtdphcsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_hvtdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_hvtdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_hvtsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_hvtsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_lpgdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_lpgdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_lpgsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_lpgsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_lpgtpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_lpgtpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_sr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_sr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_ulpdpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_ulpdpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_ulpsr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_ulpsr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_wisr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_wisr ) W W -TOLERANCE MOS_Werr;
LVS_CHECK_PROPERTY MP ( pchpu_wosr ) L L -TOLERANCE MOS_Lerr;
LVS_CHECK_PROPERTY MP ( pchpu_wosr ) W W -TOLERANCE MOS_Werr;
DEVICE Q ( npn10 ) cnemit10 ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( npn10 ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( npn10 ) cnemit10_mac ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
DEVICE Q ( npn10_s ) cnemit10s ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( npn10_s ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( npn10_s ) cnemit10s_mac ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
DEVICE Q ( npn2 ) cnemit2 ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( npn2 ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( npn2 ) cnemit2_mac ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
DEVICE Q ( npn2_s ) cnemit2s ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( npn2_s ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( npn2_s ) cnemit2s_mac ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
DEVICE Q ( npn5 ) cnemit5 ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( npn5 ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( npn5 ) cnemit5_mac ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
DEVICE Q ( npn5_s ) cnemit5s ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( npn5_s ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( npn5_s ) cnemit5s_mac ncoll1 cpbase1 cnemit1 [ 
 property A 
 A = area ( cnemit1 ) 
 ];
DEVICE Q ( pnp10 ) cemit10 coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( pnp10 ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( pnp10 ) cemit10_mac coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
DEVICE Q ( pnp10_s ) cemit10s coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( pnp10_s ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( pnp10_s ) cemit10s_mac coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
DEVICE Q ( pnp2 ) cemit2 coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( pnp2 ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( pnp2 ) cemit2_mac coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
DEVICE Q ( pnp2_s ) cemit2s coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( pnp2_s ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( pnp2_s ) cemit2s_mac coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
DEVICE Q ( pnp5 ) cemit5 coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( pnp5 ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( pnp5 ) cemit5_mac coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
DEVICE Q ( pnp5_s ) cemit5s coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
LVS_CHECK_PROPERTY Q ( pnp5_s ) A A -TOLERANCE BJT_Aerr;
DEVICE Q ( pnp5_s ) cemit5s_mac coll1 cnbase1 cemit1 [ 
 property A 
 A = area ( cemit1 ) 
 ];
DEVICE D ( ndio ) cndio psub tndiff -model ndio;
LVS_CHECK_PROPERTY D ( ndio ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_18 ) indio_18 psub tndiff -model ndio_18;
LVS_CHECK_PROPERTY D ( ndio_18 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_25 ) indio_25 psub tndiff -model ndio_25;
LVS_CHECK_PROPERTY D ( ndio_25 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_25od ) indio_25od psub tndiff -model ndio_33;
LVS_CHECK_PROPERTY D ( ndio_25od ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_25od28 ) indio_25od28 psub tndiff -model ndio_25od28;
LVS_CHECK_PROPERTY D ( ndio_25od28 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_25ud ) indio_25ud psub tndiff -model ndio_18;
LVS_CHECK_PROPERTY D ( ndio_25ud ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_33 ) indio_33 psub tndiff -model ndio_33;
LVS_CHECK_PROPERTY D ( ndio_33 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_cehv ) hv_ndio HVPSUB tndiff -model ndio_cehv;
LVS_CHECK_PROPERTY D ( ndio_cehv ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_esd ) ydio psub tndiff -model ndio_esd;
LVS_CHECK_PROPERTY D ( ndio_esd ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_hvt ) ndioh psub tndiff -model ndio_hvt;
LVS_CHECK_PROPERTY D ( ndio_hvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_lpg ) cndiolpg psub tndiff -model ndio_lpg;
LVS_CHECK_PROPERTY D ( ndio_lpg ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_lpghvt ) ndiohlpg psub tndiff -model ndio_lpghvt;
LVS_CHECK_PROPERTY D ( ndio_lpghvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_lpgna ) cndionlpg psub tndiff -model ndio_lpgna;
LVS_CHECK_PROPERTY D ( ndio_lpgna ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_lvt ) ndiol psub tndiff -model ndio_lvt;
LVS_CHECK_PROPERTY D ( ndio_lvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_mlvt ) cndioilvt psub tndiff -model ndio_mlvt;
LVS_CHECK_PROPERTY D ( ndio_mlvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_na ) cndion psub tndiff -model ndio_na;
LVS_CHECK_PROPERTY D ( ndio_na ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_na18 ) ndio_18na psub tndiff -model ndio_na18;
LVS_CHECK_PROPERTY D ( ndio_na18 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_na25 ) ndio_25na psub tndiff -model ndio_na25;
LVS_CHECK_PROPERTY D ( ndio_na25 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_na25od ) ndio_25naod psub tndiff -model ndio_na25od33;
LVS_CHECK_PROPERTY D ( ndio_na25od ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_na25ud ) ndio_25naud psub tndiff -model ndio_na18;
LVS_CHECK_PROPERTY D ( ndio_na25ud ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_na33 ) ndio_33na psub tndiff -model ndio_na33;
LVS_CHECK_PROPERTY D ( ndio_na33 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_uhvt ) ndiouh psub tndiff -model ndio_uhvt;
LVS_CHECK_PROPERTY D ( ndio_uhvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( ndio_w ) endio psub tndiff -model ndio_w;
LVS_CHECK_PROPERTY D ( ndio_w ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( nwdio ) cnwdio psub nxwell -model nwdio;
LVS_CHECK_PROPERTY D ( nwdio ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio ) cpdio tpdiff nxwell -model pdio;
LVS_CHECK_PROPERTY D ( pdio ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_18 ) ipdio_18 tpdiff nxwell -model pdio_18;
LVS_CHECK_PROPERTY D ( pdio_18 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_25 ) ipdio_25 tpdiff nxwell -model pdio_25;
LVS_CHECK_PROPERTY D ( pdio_25 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_25od ) ipdio_25od tpdiff nxwell -model pdio_33;
LVS_CHECK_PROPERTY D ( pdio_25od ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_25od28 ) ipdio_25od28 tpdiff nxwell -model pdio_25od28;
LVS_CHECK_PROPERTY D ( pdio_25od28 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_25ud ) ipdio_25ud tpdiff nxwell -model pdio_18;
LVS_CHECK_PROPERTY D ( pdio_25ud ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_33 ) ipdio_33 tpdiff nxwell -model pdio_33;
LVS_CHECK_PROPERTY D ( pdio_33 ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_cehv ) hv_pdio tpdiff HVNW -model pdio_cehv;
LVS_CHECK_PROPERTY D ( pdio_cehv ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_hvt ) pdioh tpdiff nxwell -model pdio_hvt;
LVS_CHECK_PROPERTY D ( pdio_hvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_lpg ) cpdiolpg tpdiff nxwell -model pdio_lpg;
LVS_CHECK_PROPERTY D ( pdio_lpg ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_lpghvt ) pdiohlpg tpdiff nxwell -model pdio_lpghvt;
LVS_CHECK_PROPERTY D ( pdio_lpghvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_lvt ) pdiol tpdiff nxwell -model pdio_lvt;
LVS_CHECK_PROPERTY D ( pdio_lvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_mlvt ) pdioilvt tpdiff nxwell -model pdio_mlvt;
LVS_CHECK_PROPERTY D ( pdio_mlvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_uhvt ) pdiouh tpdiff nxwell -model pdio_uhvt;
LVS_CHECK_PROPERTY D ( pdio_uhvt ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( pdio_w ) epdio tpdiff nxwell -model pdio_w;
LVS_CHECK_PROPERTY D ( pdio_w ) A A -TOLERANCE DIO_Aerr;
DEVICE D ( zdio_cehv ) hv_zdio HVPSUB tndiff -model zdio_cehv;
LVS_CHECK_PROPERTY D ( zdio_cehv ) A A -TOLERANCE DIO_Aerr;
DEVICE C ( CM ) mim_r p3 crown;
DEVICE C ( CM_decap ) mim_r_decap p3 crown;
COPY MOMDMY0 MOMDMY_all;
SIZE MOMDMY_all -BY 0.005 MOM_dmetal1_0_tmp;
NOT MOMDMY_all MOM_dmetal1_0_tmp MOM_dmetal1_0;
SELECT -INTERACT M1 CO -NOT dmetal1_tmp;
SELECT -INTERACT dmetal1_tmp VIA1 -NOT dmetal1;
SELECT -INTERACT M2 VIA1 -NOT dmetal2_tmp;
SELECT -INTERACT dmetal2_tmp VIA2 -NOT dmetal2;
SELECT -INTERACT M3 VIA2 -NOT dmetal3_tmp;
SELECT -INTERACT dmetal3_tmp VIA3 -NOT dmetal3;
SELECT -INTERACT M4 VIA3 -NOT dmetal4_tmp;
SELECT -INTERACT dmetal4_tmp VIA4 -NOT dmetal4;
SELECT -INTERACT M5 VIA4 -NOT dmetal5_tmp;
SELECT -INTERACT dmetal5_tmp VIA5 -NOT dmetal5;
SELECT -INTERACT M6 VIA5 -NOT dmetal6_tmp;
SELECT -INTERACT dmetal6_tmp VIA6 -NOT dmetal6;
SELECT -INTERACT M7 VIA6 -NOT dmetal7_tmp;
SELECT -INTERACT dmetal7_tmp VIA7 -NOT dmetal7;
SELECT -INTERACT M8 VIA7 -NOT dmetal8_tmp;
SELECT -INTERACT dmetal8_tmp VIA8 -NOT dmetal8;
SELECT -INTERACT M9 VIA8 -NOT dmetal9_tmp;
SELECT -INTERACT dmetal9_tmp VIA9 -NOT dmetal9;
NOT M1X MOM_field1 FM_edge1;
EDGE_SELECT MOM_field1 FM_edge1 FM_len1_pre;
EDGE_SELECT MOMDMY1 FM_len1_pre FM_len1a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge1 FM_len1a FM_len1;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field1 FM_len1 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip1_pre;
AND FM_tip1_pre MOMDMY1 FM_tip1;
OR M1 FM_tip1 MOM_tip1a;
SELECT -INTERACT MOM_tip1a MOMDMY_all MOM_tip1;
HOLES MOM_tip1 -INNER MOM_hole1a;
SELECT -INSIDE MOM_hole1a MOMDMY_all MOM_hole1b;
SELECT -INTERACT MOM_hole1b MOM_field1 -eq 2 MOM_hole1;
SELECT -INTERACT M1 MOMDMY_all MOM_dmetal1;
OR MOM_dmetal1_0 MOM_dmetal1 MOM_dmetal1_1;
NOT M2X MOM_field2 FM_edge2;
EDGE_SELECT MOM_field2 FM_edge2 FM_len2_pre;
EDGE_SELECT MOMDMY2 FM_len2_pre FM_len2a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge2 FM_len2a FM_len2;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field2 FM_len2 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip2_pre;
AND FM_tip2_pre MOMDMY2 FM_tip2;
OR M2 FM_tip2 MOM_tip2a;
SELECT -INTERACT MOM_tip2a MOMDMY_all MOM_tip2;
HOLES MOM_tip2 -INNER MOM_hole2a;
SELECT -INSIDE MOM_hole2a MOMDMY_all MOM_hole2b;
SELECT -INTERACT MOM_hole2b MOM_field2 -eq 2 MOM_hole2;
SELECT -INTERACT M2 MOMDMY_all MOM_dmetal2;
OR MOM_dmetal1_1 MOM_dmetal2 MOM_dmetal1_2;
NOT M3X MOM_field3 FM_edge3;
EDGE_SELECT MOM_field3 FM_edge3 FM_len3_pre;
EDGE_SELECT MOMDMY3 FM_len3_pre FM_len3a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge3 FM_len3a FM_len3;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field3 FM_len3 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip3_pre;
AND FM_tip3_pre MOMDMY3 FM_tip3;
OR M3 FM_tip3 MOM_tip3a;
SELECT -INTERACT MOM_tip3a MOMDMY_all MOM_tip3;
HOLES MOM_tip3 -INNER MOM_hole3a;
SELECT -INSIDE MOM_hole3a MOMDMY_all MOM_hole3b;
SELECT -INTERACT MOM_hole3b MOM_field3 -eq 2 MOM_hole3;
SELECT -INTERACT M3 MOMDMY_all MOM_dmetal3;
OR MOM_dmetal1_2 MOM_dmetal3 MOM_dmetal1_3;
NOT M4X MOM_field4 FM_edge4;
EDGE_SELECT MOM_field4 FM_edge4 FM_len4_pre;
EDGE_SELECT MOMDMY4 FM_len4_pre FM_len4a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge4 FM_len4a FM_len4;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field4 FM_len4 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip4_pre;
AND FM_tip4_pre MOMDMY4 FM_tip4;
OR M4 FM_tip4 MOM_tip4a;
SELECT -INTERACT MOM_tip4a MOMDMY_all MOM_tip4;
HOLES MOM_tip4 -INNER MOM_hole4a;
SELECT -INSIDE MOM_hole4a MOMDMY_all MOM_hole4b;
SELECT -INTERACT MOM_hole4b MOM_field4 -eq 2 MOM_hole4;
SELECT -INTERACT M4 MOMDMY_all MOM_dmetal4;
OR MOM_dmetal1_3 MOM_dmetal4 MOM_dmetal1_4;
NOT M5X MOM_field5 FM_edge5;
EDGE_SELECT MOM_field5 FM_edge5 FM_len5_pre;
EDGE_SELECT MOMDMY5 FM_len5_pre FM_len5a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge5 FM_len5a FM_len5;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field5 FM_len5 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip5_pre;
AND FM_tip5_pre MOMDMY5 FM_tip5;
OR M5 FM_tip5 MOM_tip5a;
SELECT -INTERACT MOM_tip5a MOMDMY_all MOM_tip5;
HOLES MOM_tip5 -INNER MOM_hole5a;
SELECT -INSIDE MOM_hole5a MOMDMY_all MOM_hole5b;
SELECT -INTERACT MOM_hole5b MOM_field5 -eq 2 MOM_hole5;
SELECT -INTERACT M5 MOMDMY_all MOM_dmetal5;
OR MOM_dmetal1_4 MOM_dmetal5 MOM_dmetal1_5;
NOT M6X MOM_field6 FM_edge6;
EDGE_SELECT MOM_field6 FM_edge6 FM_len6_pre;
EDGE_SELECT MOMDMY6 FM_len6_pre FM_len6a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge6 FM_len6a FM_len6;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field6 FM_len6 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip6_pre;
AND FM_tip6_pre MOMDMY6 FM_tip6;
OR M6 FM_tip6 MOM_tip6a;
SELECT -INTERACT MOM_tip6a MOMDMY_all MOM_tip6;
HOLES MOM_tip6 -INNER MOM_hole6a;
SELECT -INSIDE MOM_hole6a MOMDMY_all MOM_hole6b;
SELECT -INTERACT MOM_hole6b MOM_field6 -eq 2 MOM_hole6;
SELECT -INTERACT M6 MOMDMY_all MOM_dmetal6;
OR MOM_dmetal1_5 MOM_dmetal6 MOM_dmetal1_6;
NOT M7X MOM_field7 FM_edge7;
EDGE_SELECT MOM_field7 FM_edge7 FM_len7_pre;
EDGE_SELECT MOMDMY7 FM_len7_pre FM_len7a;
EDGE_BOOLEAN -COINCIDENT_ONLY FM_edge7 FM_len7a FM_len7;
EXTE -lt "MIN_MOM_LR" -OUTPUT REGION -METRIC OPPOSITE MOM_field7 FM_len7 -NOPOINT -METRIC OPPOSITE -OUTPUT REGION FM_tip7_pre;
AND FM_tip7_pre MOMDMY7 FM_tip7;
OR M7 FM_tip7 MOM_tip7a;
SELECT -INTERACT MOM_tip7a MOMDMY_all MOM_tip7;
HOLES MOM_tip7 -INNER MOM_hole7a;
SELECT -INSIDE MOM_hole7a MOMDMY_all MOM_hole7b;
SELECT -INTERACT MOM_hole7b MOM_field7 -eq 2 MOM_hole7;
SELECT -INTERACT M7 MOMDMY_all MOM_dmetal7;
OR MOM_dmetal1_6 MOM_dmetal7 MOM_dmetal1_7;
SELECT -INTERACT MOMDMY3 MOM_field1 mom13_1;
SELECT -INTERACT mom13_1 MOM_field2 mom13_2;
SELECT -INTERACT mom13_2 MOM_field3 mom13_3;
NOT MOM_field3 MOM_field2 mom13_idt;
SELECT -INTERACT mom13_3 MOM_field4 -NOT mom13_Left4;
SELECT -INTERACT mom13_Left4 MOM_field5 -NOT mom13_Left5;
SELECT -INTERACT mom13_Left5 MOM_field6 -NOT mom13_Left6;
SELECT -INTERACT mom13_Left6 MOM_field7 -NOT mom13_Left7;
SELECT -INTERACT mom13_Left7 RFDMY -NOT mom13_reg1;
SELECT -INTERACT mom13_reg1 MOMDMY0 mom13_reg21;
NOT mom13_reg21 MOMDMY22 mom13_reg2;
NOT mom13_reg2 MAC mom13_reg3;
SELECT -INTERACT mom13_reg3 MOMDMY_2T -NOT mom13_reg4;
SELECT -INTERACT mom13_reg4 poly mom13_reg;
SELECT -INTERACT mom13_reg3 MOMDMY_2T mom13_reg_2t;
SELECT -INTERACT mom13_Left7 RFDMY mom13_reg_rf1;
SELECT -INTERACT mom13_reg_rf1 MOMDMY0 mom13_reg_rf21;
NOT mom13_reg_rf21 MOMDMY22 mom13_reg_rf2;
NOT mom13_reg_rf2 MAC mom13_reg_rf3;
NOT mom13_reg_rf3 RDKDMY mom13_reg_rf;
AND mom13_reg_rf3 RDKDMY mom13_reg_rf_rdk;
AND mom13_Left7 MOMDMY22 mom13_mx_aux1;
NOT mom13_mx_aux1 MAC mom13_mx_aux;
SELECT -INTERACT MOMDMY22 mom13_Left7 mom13_mx_reg11;
SELECT -INTERACT mom13_mx_reg11 MOMDMY0 mom13_mx_reg1;
NOT mom13_mx_reg1 MAC mom13_mx_reg2;
SELECT -INTERACT mom13_mx_reg2 MOMDMY_2T -NOT mom13_mx_reg3;
SELECT -INTERACT mom13_mx_reg3 poly mom13_mx_reg;
SELECT -INTERACT mom13_mx_reg2 MOMDMY_2T mom13_mx_reg_4t;
AND mom13_reg2 MAC mom13_freg;
AND mom13_mx_reg1 MAC mom13_mx_freg;
AND mom13_mx_aux1 MAC mom13_mx_faux;
DEVICE crtmom mom13_reg metal3 ( PLUS ) metal3 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom13_reg ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom13_reg ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 3 
 ];
DEVICE crtmom_2t mom13_reg_2t metal3 ( PLUS ) metal3 ( MINUS ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom13_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom13_reg_2t ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 3 
 ];
DEVICE crtmom_rf mom13_reg_rf metal3 ( PLUS ) metal3 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom13_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom13_reg_rf ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 3 
 ];
DEVICE crtmom_rf_rdk mom13_reg_rf_rdk metal3 ( PLUS ) metal3 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom13_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom13_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 3 
 ];
DEVICE crtmom_mx mom13_mx_reg mom3p1 ( PLUS1 ) mom3m1 ( MINUS1 ) mom3p2 ( PLUS2 ) mom3m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom13_mx_aux > < metal3 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal3 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field1 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom13_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole1 , mom13_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 1 
 spm = 3 
 ];
DEVICE fmom mom13_freg metal3 ( PLUS ) metal3 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field1 ) 
 w = perimeter_coincide ( MOM_field2 , mom13_freg ) / nr 
 lr = ( area ( MOM_field1 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom13_freg ) / ( nr-1 ) / 2 
 stm = 1 
 spm = 3 
 ];
DEVICE fmom_mx mom13_mx_freg mom3p1 ( PLUS1 ) mom3m1 ( MINUS1 ) mom3p2 ( PLUS2 ) mom3m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom13_mx_faux > < metal3 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal3 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field1 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom13_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field1 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom13_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 1 
 spm = 3 
 ];
SELECT -INTERACT MOMDMY4 MOM_field1 mom14_1;
SELECT -INTERACT mom14_1 MOM_field2 mom14_2;
SELECT -INTERACT mom14_2 MOM_field3 mom14_3;
SELECT -INTERACT mom14_3 MOM_field4 mom14_4;
NOT MOM_field4 MOM_field3 mom14_idt;
SELECT -INTERACT mom14_4 MOM_field5 -NOT mom14_Left5;
SELECT -INTERACT mom14_Left5 MOM_field6 -NOT mom14_Left6;
SELECT -INTERACT mom14_Left6 MOM_field7 -NOT mom14_Left7;
SELECT -INTERACT mom14_Left7 RFDMY -NOT mom14_reg1;
SELECT -INTERACT mom14_reg1 MOMDMY0 mom14_reg21;
NOT mom14_reg21 MOMDMY22 mom14_reg2;
NOT mom14_reg2 MAC mom14_reg3;
SELECT -INTERACT mom14_reg3 MOMDMY_2T -NOT mom14_reg4;
SELECT -INTERACT mom14_reg4 poly mom14_reg;
SELECT -INTERACT mom14_reg3 MOMDMY_2T mom14_reg_2t;
SELECT -INTERACT mom14_Left7 RFDMY mom14_reg_rf1;
SELECT -INTERACT mom14_reg_rf1 MOMDMY0 mom14_reg_rf21;
NOT mom14_reg_rf21 MOMDMY22 mom14_reg_rf2;
NOT mom14_reg_rf2 MAC mom14_reg_rf3;
NOT mom14_reg_rf3 RDKDMY mom14_reg_rf;
AND mom14_reg_rf3 RDKDMY mom14_reg_rf_rdk;
AND mom14_Left7 MOMDMY22 mom14_mx_aux1;
NOT mom14_mx_aux1 MAC mom14_mx_aux;
SELECT -INTERACT MOMDMY22 mom14_Left7 mom14_mx_reg11;
SELECT -INTERACT mom14_mx_reg11 MOMDMY0 mom14_mx_reg1;
NOT mom14_mx_reg1 MAC mom14_mx_reg2;
SELECT -INTERACT mom14_mx_reg2 MOMDMY_2T -NOT mom14_mx_reg3;
SELECT -INTERACT mom14_mx_reg3 poly mom14_mx_reg;
SELECT -INTERACT mom14_mx_reg2 MOMDMY_2T mom14_mx_reg_4t;
AND mom14_reg2 MAC mom14_freg;
AND mom14_mx_reg1 MAC mom14_mx_freg;
AND mom14_mx_aux1 MAC mom14_mx_faux;
DEVICE crtmom mom14_reg metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom14_reg ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom14_reg ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 4 
 ];
DEVICE crtmom_2t mom14_reg_2t metal4 ( PLUS ) metal4 ( MINUS ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom14_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom14_reg_2t ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 4 
 ];
DEVICE crtmom_rf mom14_reg_rf metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom14_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom14_reg_rf ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 4 
 ];
DEVICE crtmom_rf_rdk mom14_reg_rf_rdk metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom14_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom14_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 4 
 ];
DEVICE crtmom_mx mom14_mx_reg mom4p1 ( PLUS1 ) mom4m1 ( MINUS1 ) mom4p2 ( PLUS2 ) mom4m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom14_mx_aux > < metal4 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal4 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field1 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom14_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole1 , mom14_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 1 
 spm = 4 
 ];
DEVICE fmom mom14_freg metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field1 ) 
 w = perimeter_coincide ( MOM_field2 , mom14_freg ) / nr 
 lr = ( area ( MOM_field1 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom14_freg ) / ( nr-1 ) / 2 
 stm = 1 
 spm = 4 
 ];
DEVICE fmom_mx mom14_mx_freg mom4p1 ( PLUS1 ) mom4m1 ( MINUS1 ) mom4p2 ( PLUS2 ) mom4m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom14_mx_faux > < metal4 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal4 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field1 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom14_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field1 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom14_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 1 
 spm = 4 
 ];
SELECT -INTERACT MOMDMY5 MOM_field1 mom15_1;
SELECT -INTERACT mom15_1 MOM_field2 mom15_2;
SELECT -INTERACT mom15_2 MOM_field3 mom15_3;
SELECT -INTERACT mom15_3 MOM_field4 mom15_4;
SELECT -INTERACT mom15_4 MOM_field5 mom15_5;
NOT MOM_field5 MOM_field4 mom15_idt;
SELECT -INTERACT mom15_5 MOM_field6 -NOT mom15_Left6;
SELECT -INTERACT mom15_Left6 MOM_field7 -NOT mom15_Left7;
SELECT -INTERACT mom15_Left7 RFDMY -NOT mom15_reg1;
SELECT -INTERACT mom15_reg1 MOMDMY0 mom15_reg21;
NOT mom15_reg21 MOMDMY22 mom15_reg2;
NOT mom15_reg2 MAC mom15_reg3;
SELECT -INTERACT mom15_reg3 MOMDMY_2T -NOT mom15_reg4;
SELECT -INTERACT mom15_reg4 poly mom15_reg;
SELECT -INTERACT mom15_reg3 MOMDMY_2T mom15_reg_2t;
SELECT -INTERACT mom15_Left7 RFDMY mom15_reg_rf1;
SELECT -INTERACT mom15_reg_rf1 MOMDMY0 mom15_reg_rf21;
NOT mom15_reg_rf21 MOMDMY22 mom15_reg_rf2;
NOT mom15_reg_rf2 MAC mom15_reg_rf3;
NOT mom15_reg_rf3 RDKDMY mom15_reg_rf;
AND mom15_reg_rf3 RDKDMY mom15_reg_rf_rdk;
AND mom15_Left7 MOMDMY22 mom15_mx_aux1;
NOT mom15_mx_aux1 MAC mom15_mx_aux;
SELECT -INTERACT MOMDMY22 mom15_Left7 mom15_mx_reg11;
SELECT -INTERACT mom15_mx_reg11 MOMDMY0 mom15_mx_reg1;
NOT mom15_mx_reg1 MAC mom15_mx_reg2;
SELECT -INTERACT mom15_mx_reg2 MOMDMY_2T -NOT mom15_mx_reg3;
SELECT -INTERACT mom15_mx_reg3 poly mom15_mx_reg;
SELECT -INTERACT mom15_mx_reg2 MOMDMY_2T mom15_mx_reg_4t;
AND mom15_reg2 MAC mom15_freg;
AND mom15_mx_reg1 MAC mom15_mx_freg;
AND mom15_mx_aux1 MAC mom15_mx_faux;
DEVICE crtmom mom15_reg metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom15_reg ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom15_reg ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 5 
 ];
DEVICE crtmom_2t mom15_reg_2t metal5 ( PLUS ) metal5 ( MINUS ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom15_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom15_reg_2t ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 5 
 ];
DEVICE crtmom_rf mom15_reg_rf metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom15_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom15_reg_rf ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 5 
 ];
DEVICE crtmom_rf_rdk mom15_reg_rf_rdk metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom15_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom15_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 5 
 ];
DEVICE crtmom_mx mom15_mx_reg mom5p1 ( PLUS1 ) mom5m1 ( MINUS1 ) mom5p2 ( PLUS2 ) mom5m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom15_mx_aux > < metal5 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal5 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field1 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom15_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole1 , mom15_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 1 
 spm = 5 
 ];
DEVICE fmom mom15_freg metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field1 ) 
 w = perimeter_coincide ( MOM_field2 , mom15_freg ) / nr 
 lr = ( area ( MOM_field1 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom15_freg ) / ( nr-1 ) / 2 
 stm = 1 
 spm = 5 
 ];
DEVICE fmom_mx mom15_mx_freg mom5p1 ( PLUS1 ) mom5m1 ( MINUS1 ) mom5p2 ( PLUS2 ) mom5m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom15_mx_faux > < metal5 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal5 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field1 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom15_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field1 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom15_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 1 
 spm = 5 
 ];
SELECT -INTERACT MOMDMY6 MOM_field1 mom16_1;
SELECT -INTERACT mom16_1 MOM_field2 mom16_2;
SELECT -INTERACT mom16_2 MOM_field3 mom16_3;
SELECT -INTERACT mom16_3 MOM_field4 mom16_4;
SELECT -INTERACT mom16_4 MOM_field5 mom16_5;
SELECT -INTERACT mom16_5 MOM_field6 mom16_6;
NOT MOM_field6 MOM_field5 mom16_idt;
SELECT -INTERACT mom16_6 MOM_field7 -NOT mom16_Left7;
SELECT -INTERACT mom16_Left7 RFDMY -NOT mom16_reg1;
SELECT -INTERACT mom16_reg1 MOMDMY0 mom16_reg21;
NOT mom16_reg21 MOMDMY22 mom16_reg2;
NOT mom16_reg2 MAC mom16_reg3;
SELECT -INTERACT mom16_reg3 MOMDMY_2T -NOT mom16_reg4;
SELECT -INTERACT mom16_reg4 poly mom16_reg;
SELECT -INTERACT mom16_reg3 MOMDMY_2T mom16_reg_2t;
SELECT -INTERACT mom16_Left7 RFDMY mom16_reg_rf1;
SELECT -INTERACT mom16_reg_rf1 MOMDMY0 mom16_reg_rf21;
NOT mom16_reg_rf21 MOMDMY22 mom16_reg_rf2;
NOT mom16_reg_rf2 MAC mom16_reg_rf3;
NOT mom16_reg_rf3 RDKDMY mom16_reg_rf;
AND mom16_reg_rf3 RDKDMY mom16_reg_rf_rdk;
AND mom16_Left7 MOMDMY22 mom16_mx_aux1;
NOT mom16_mx_aux1 MAC mom16_mx_aux;
SELECT -INTERACT MOMDMY22 mom16_Left7 mom16_mx_reg11;
SELECT -INTERACT mom16_mx_reg11 MOMDMY0 mom16_mx_reg1;
NOT mom16_mx_reg1 MAC mom16_mx_reg2;
SELECT -INTERACT mom16_mx_reg2 MOMDMY_2T -NOT mom16_mx_reg3;
SELECT -INTERACT mom16_mx_reg3 poly mom16_mx_reg;
SELECT -INTERACT mom16_mx_reg2 MOMDMY_2T mom16_mx_reg_4t;
AND mom16_reg2 MAC mom16_freg;
AND mom16_mx_reg1 MAC mom16_mx_freg;
AND mom16_mx_aux1 MAC mom16_mx_faux;
DEVICE crtmom mom16_reg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom16_reg ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom16_reg ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 6 
 ];
DEVICE crtmom_2t mom16_reg_2t metal6 ( PLUS ) metal6 ( MINUS ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom16_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom16_reg_2t ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 6 
 ];
DEVICE crtmom_rf mom16_reg_rf metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom16_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom16_reg_rf ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 6 
 ];
DEVICE crtmom_rf_rdk mom16_reg_rf_rdk metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom16_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom16_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 6 
 ];
DEVICE crtmom_mx mom16_mx_reg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom16_mx_aux > < metal6 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field1 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom16_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole1 , mom16_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 1 
 spm = 6 
 ];
DEVICE fmom mom16_freg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field1 ) 
 w = perimeter_coincide ( MOM_field2 , mom16_freg ) / nr 
 lr = ( area ( MOM_field1 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom16_freg ) / ( nr-1 ) / 2 
 stm = 1 
 spm = 6 
 ];
DEVICE fmom_mx mom16_mx_freg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom16_mx_faux > < metal6 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field1 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom16_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field1 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom16_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 1 
 spm = 6 
 ];
SELECT -INTERACT MOMDMY7 MOM_field1 mom17_1;
SELECT -INTERACT mom17_1 MOM_field2 mom17_2;
SELECT -INTERACT mom17_2 MOM_field3 mom17_3;
SELECT -INTERACT mom17_3 MOM_field4 mom17_4;
SELECT -INTERACT mom17_4 MOM_field5 mom17_5;
SELECT -INTERACT mom17_5 MOM_field6 mom17_6;
SELECT -INTERACT mom17_6 MOM_field7 mom17_7;
NOT MOM_field7 MOM_field6 mom17_idt;
SELECT -INTERACT mom17_7 RFDMY -NOT mom17_reg1;
SELECT -INTERACT mom17_reg1 MOMDMY0 mom17_reg21;
NOT mom17_reg21 MOMDMY22 mom17_reg2;
NOT mom17_reg2 MAC mom17_reg3;
SELECT -INTERACT mom17_reg3 MOMDMY_2T -NOT mom17_reg4;
SELECT -INTERACT mom17_reg4 poly mom17_reg;
SELECT -INTERACT mom17_reg3 MOMDMY_2T mom17_reg_2t;
SELECT -INTERACT mom17_7 RFDMY mom17_reg_rf1;
SELECT -INTERACT mom17_reg_rf1 MOMDMY0 mom17_reg_rf21;
NOT mom17_reg_rf21 MOMDMY22 mom17_reg_rf2;
NOT mom17_reg_rf2 MAC mom17_reg_rf3;
NOT mom17_reg_rf3 RDKDMY mom17_reg_rf;
AND mom17_reg_rf3 RDKDMY mom17_reg_rf_rdk;
AND mom17_7 MOMDMY22 mom17_mx_aux1;
NOT mom17_mx_aux1 MAC mom17_mx_aux;
SELECT -INTERACT MOMDMY22 mom17_7 mom17_mx_reg11;
SELECT -INTERACT mom17_mx_reg11 MOMDMY0 mom17_mx_reg1;
NOT mom17_mx_reg1 MAC mom17_mx_reg2;
SELECT -INTERACT mom17_mx_reg2 MOMDMY_2T -NOT mom17_mx_reg3;
SELECT -INTERACT mom17_mx_reg3 poly mom17_mx_reg;
SELECT -INTERACT mom17_mx_reg2 MOMDMY_2T mom17_mx_reg_4t;
AND mom17_reg2 MAC mom17_freg;
AND mom17_mx_reg1 MAC mom17_mx_freg;
AND mom17_mx_aux1 MAC mom17_mx_faux;
DEVICE crtmom mom17_reg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom17_reg ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom17_reg ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 7 
 ];
DEVICE crtmom_2t mom17_reg_2t metal7 ( PLUS ) metal7 ( MINUS ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom17_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom17_reg_2t ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 7 
 ];
DEVICE crtmom_rf mom17_reg_rf metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom17_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom17_reg_rf ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 7 
 ];
DEVICE crtmom_rf_rdk mom17_reg_rf_rdk metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field1 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom17_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole1 , mom17_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 1 
 spm = 7 
 ];
DEVICE crtmom_mx mom17_mx_reg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom17_mx_aux > < metal7 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field1 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom17_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole1 , mom17_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 1 
 spm = 7 
 ];
DEVICE fmom mom17_freg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field1 ) 
 w = perimeter_coincide ( MOM_field2 , mom17_freg ) / nr 
 lr = ( area ( MOM_field1 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom17_freg ) / ( nr-1 ) / 2 
 stm = 1 
 spm = 7 
 ];
DEVICE fmom_mx mom17_mx_freg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field1 > < MOM_field2 > < MOM_hole1 > < mom17_mx_faux > < metal7 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field1 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom17_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field1 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole1 , mom17_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 1 
 spm = 7 
 ];
SELECT -INTERACT MOMDMY4 MOM_field1 -NOT mom24_1;
SELECT -INTERACT mom24_1 MOM_field2 mom24_2;
SELECT -INTERACT mom24_2 MOM_field3 mom24_3;
SELECT -INTERACT mom24_3 MOM_field4 mom24_4;
NOT MOM_field4 MOM_field3 mom24_idt;
SELECT -INTERACT mom24_4 MOM_field5 -NOT mom24_Left5;
SELECT -INTERACT mom24_Left5 MOM_field6 -NOT mom24_Left6;
SELECT -INTERACT mom24_Left6 MOM_field7 -NOT mom24_Left7;
SELECT -INTERACT mom24_Left7 RFDMY -NOT mom24_reg1;
SELECT -INTERACT mom24_reg1 MOMDMY0 mom24_reg21;
NOT mom24_reg21 MOMDMY22 mom24_reg2;
NOT mom24_reg2 MAC mom24_reg3;
SELECT -INTERACT mom24_reg3 MOMDMY_2T -NOT mom24_reg4;
SELECT -INTERACT mom24_reg4 poly mom24_reg;
SELECT -INTERACT mom24_reg3 MOMDMY_2T mom24_reg_2t;
SELECT -INTERACT mom24_Left7 RFDMY mom24_reg_rf1;
SELECT -INTERACT mom24_reg_rf1 MOMDMY0 mom24_reg_rf21;
NOT mom24_reg_rf21 MOMDMY22 mom24_reg_rf2;
NOT mom24_reg_rf2 MAC mom24_reg_rf3;
NOT mom24_reg_rf3 RDKDMY mom24_reg_rf;
AND mom24_reg_rf3 RDKDMY mom24_reg_rf_rdk;
AND mom24_Left7 MOMDMY22 mom24_mx_aux1;
NOT mom24_mx_aux1 MAC mom24_mx_aux;
SELECT -INTERACT MOMDMY22 mom24_Left7 mom24_mx_reg11;
SELECT -INTERACT mom24_mx_reg11 MOMDMY0 mom24_mx_reg1;
NOT mom24_mx_reg1 MAC mom24_mx_reg2;
SELECT -INTERACT mom24_mx_reg2 MOMDMY_2T -NOT mom24_mx_reg3;
SELECT -INTERACT mom24_mx_reg3 poly mom24_mx_reg;
SELECT -INTERACT mom24_mx_reg2 MOMDMY_2T mom24_mx_reg_4t;
AND mom24_reg2 MAC mom24_freg;
AND mom24_mx_reg1 MAC mom24_mx_freg;
AND mom24_mx_aux1 MAC mom24_mx_faux;
DEVICE crtmom mom24_reg metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom24_reg ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom24_reg ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 4 
 ];
DEVICE crtmom_2t mom24_reg_2t metal4 ( PLUS ) metal4 ( MINUS ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom24_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom24_reg_2t ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 4 
 ];
DEVICE crtmom_rf mom24_reg_rf metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom24_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom24_reg_rf ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 4 
 ];
DEVICE crtmom_rf_rdk mom24_reg_rf_rdk metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom24_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom24_reg_rf_rdk ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 4 
 ];
DEVICE crtmom_mx mom24_mx_reg mom4p1 ( PLUS1 ) mom4m1 ( MINUS1 ) mom4p2 ( PLUS2 ) mom4m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom24_mx_aux > < metal4 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal4 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom24_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole2 , mom24_mx_aux ) / ( mf1* ( nh-1 ) ) / 2 
 stm = 2 
 spm = 4 
 ];
DEVICE fmom mom24_freg metal4 ( PLUS ) metal4 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field2 , mom24_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom24_freg ) / ( nr-1 ) / 2 
 stm = 2 
 spm = 4 
 ];
DEVICE fmom_mx mom24_mx_freg mom4p1 ( PLUS1 ) mom4m1 ( MINUS1 ) mom4p2 ( PLUS2 ) mom4m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom24_mx_faux > < metal4 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal4 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom24_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom24_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 2 
 spm = 4 
 ];
SELECT -INTERACT MOMDMY5 MOM_field1 -NOT mom25_1;
SELECT -INTERACT mom25_1 MOM_field2 mom25_2;
SELECT -INTERACT mom25_2 MOM_field3 mom25_3;
SELECT -INTERACT mom25_3 MOM_field4 mom25_4;
SELECT -INTERACT mom25_4 MOM_field5 mom25_5;
NOT MOM_field5 MOM_field4 mom25_idt;
SELECT -INTERACT mom25_5 MOM_field6 -NOT mom25_Left6;
SELECT -INTERACT mom25_Left6 MOM_field7 -NOT mom25_Left7;
SELECT -INTERACT mom25_Left7 RFDMY -NOT mom25_reg1;
SELECT -INTERACT mom25_reg1 MOMDMY0 mom25_reg21;
NOT mom25_reg21 MOMDMY22 mom25_reg2;
NOT mom25_reg2 MAC mom25_reg3;
SELECT -INTERACT mom25_reg3 MOMDMY_2T -NOT mom25_reg4;
SELECT -INTERACT mom25_reg4 poly mom25_reg;
SELECT -INTERACT mom25_reg3 MOMDMY_2T mom25_reg_2t;
SELECT -INTERACT mom25_Left7 RFDMY mom25_reg_rf1;
SELECT -INTERACT mom25_reg_rf1 MOMDMY0 mom25_reg_rf21;
NOT mom25_reg_rf21 MOMDMY22 mom25_reg_rf2;
NOT mom25_reg_rf2 MAC mom25_reg_rf3;
NOT mom25_reg_rf3 RDKDMY mom25_reg_rf;
AND mom25_reg_rf3 RDKDMY mom25_reg_rf_rdk;
AND mom25_Left7 MOMDMY22 mom25_mx_aux1;
NOT mom25_mx_aux1 MAC mom25_mx_aux;
SELECT -INTERACT MOMDMY22 mom25_Left7 mom25_mx_reg11;
SELECT -INTERACT mom25_mx_reg11 MOMDMY0 mom25_mx_reg1;
NOT mom25_mx_reg1 MAC mom25_mx_reg2;
SELECT -INTERACT mom25_mx_reg2 MOMDMY_2T -NOT mom25_mx_reg3;
SELECT -INTERACT mom25_mx_reg3 poly mom25_mx_reg;
SELECT -INTERACT mom25_mx_reg2 MOMDMY_2T mom25_mx_reg_4t;
AND mom25_reg2 MAC mom25_freg;
AND mom25_mx_reg1 MAC mom25_mx_freg;
AND mom25_mx_aux1 MAC mom25_mx_faux;
DEVICE crtmom mom25_reg metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom25_reg ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom25_reg ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 5 
 ];
DEVICE crtmom_2t mom25_reg_2t metal5 ( PLUS ) metal5 ( MINUS ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom25_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom25_reg_2t ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 5 
 ];
DEVICE crtmom_rf mom25_reg_rf metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom25_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom25_reg_rf ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 5 
 ];
DEVICE crtmom_rf_rdk mom25_reg_rf_rdk metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom25_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom25_reg_rf_rdk ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 5 
 ];
DEVICE crtmom_mx mom25_mx_reg mom5p1 ( PLUS1 ) mom5m1 ( MINUS1 ) mom5p2 ( PLUS2 ) mom5m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom25_mx_aux > < metal5 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal5 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom25_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole2 , mom25_mx_aux ) / ( mf1* ( nh-1 ) ) / 2 
 stm = 2 
 spm = 5 
 ];
DEVICE fmom mom25_freg metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field2 , mom25_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom25_freg ) / ( nr-1 ) / 2 
 stm = 2 
 spm = 5 
 ];
DEVICE fmom_mx mom25_mx_freg mom5p1 ( PLUS1 ) mom5m1 ( MINUS1 ) mom5p2 ( PLUS2 ) mom5m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom25_mx_faux > < metal5 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal5 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom25_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom25_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 2 
 spm = 5 
 ];
SELECT -INTERACT MOMDMY6 MOM_field1 -NOT mom26_1;
SELECT -INTERACT mom26_1 MOM_field2 mom26_2;
SELECT -INTERACT mom26_2 MOM_field3 mom26_3;
SELECT -INTERACT mom26_3 MOM_field4 mom26_4;
SELECT -INTERACT mom26_4 MOM_field5 mom26_5;
SELECT -INTERACT mom26_5 MOM_field6 mom26_6;
NOT MOM_field6 MOM_field5 mom26_idt;
SELECT -INTERACT mom26_6 MOM_field7 -NOT mom26_Left7;
SELECT -INTERACT mom26_Left7 RFDMY -NOT mom26_reg1;
SELECT -INTERACT mom26_reg1 MOMDMY0 mom26_reg21;
NOT mom26_reg21 MOMDMY22 mom26_reg2;
NOT mom26_reg2 MAC mom26_reg3;
SELECT -INTERACT mom26_reg3 MOMDMY_2T -NOT mom26_reg4;
SELECT -INTERACT mom26_reg4 poly mom26_reg;
SELECT -INTERACT mom26_reg3 MOMDMY_2T mom26_reg_2t;
SELECT -INTERACT mom26_Left7 RFDMY mom26_reg_rf1;
SELECT -INTERACT mom26_reg_rf1 MOMDMY0 mom26_reg_rf21;
NOT mom26_reg_rf21 MOMDMY22 mom26_reg_rf2;
NOT mom26_reg_rf2 MAC mom26_reg_rf3;
NOT mom26_reg_rf3 RDKDMY mom26_reg_rf;
AND mom26_reg_rf3 RDKDMY mom26_reg_rf_rdk;
AND mom26_Left7 MOMDMY22 mom26_mx_aux1;
NOT mom26_mx_aux1 MAC mom26_mx_aux;
SELECT -INTERACT MOMDMY22 mom26_Left7 mom26_mx_reg11;
SELECT -INTERACT mom26_mx_reg11 MOMDMY0 mom26_mx_reg1;
NOT mom26_mx_reg1 MAC mom26_mx_reg2;
SELECT -INTERACT mom26_mx_reg2 MOMDMY_2T -NOT mom26_mx_reg3;
SELECT -INTERACT mom26_mx_reg3 poly mom26_mx_reg;
SELECT -INTERACT mom26_mx_reg2 MOMDMY_2T mom26_mx_reg_4t;
AND mom26_reg2 MAC mom26_freg;
AND mom26_mx_reg1 MAC mom26_mx_freg;
AND mom26_mx_aux1 MAC mom26_mx_faux;
DEVICE crtmom mom26_reg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom26_reg ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom26_reg ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 6 
 ];
DEVICE crtmom_2t mom26_reg_2t metal6 ( PLUS ) metal6 ( MINUS ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom26_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom26_reg_2t ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 6 
 ];
DEVICE crtmom_rf mom26_reg_rf metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom26_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom26_reg_rf ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 6 
 ];
DEVICE crtmom_rf_rdk mom26_reg_rf_rdk metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom26_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom26_reg_rf_rdk ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 6 
 ];
DEVICE crtmom_mx mom26_mx_reg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom26_mx_aux > < metal6 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom26_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole2 , mom26_mx_aux ) / ( mf1* ( nh-1 ) ) / 2 
 stm = 2 
 spm = 6 
 ];
DEVICE fmom mom26_freg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field2 , mom26_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom26_freg ) / ( nr-1 ) / 2 
 stm = 2 
 spm = 6 
 ];
DEVICE fmom_mx mom26_mx_freg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom26_mx_faux > < metal6 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom26_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom26_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 2 
 spm = 6 
 ];
SELECT -INTERACT MOMDMY7 MOM_field1 -NOT mom27_1;
SELECT -INTERACT mom27_1 MOM_field2 mom27_2;
SELECT -INTERACT mom27_2 MOM_field3 mom27_3;
SELECT -INTERACT mom27_3 MOM_field4 mom27_4;
SELECT -INTERACT mom27_4 MOM_field5 mom27_5;
SELECT -INTERACT mom27_5 MOM_field6 mom27_6;
SELECT -INTERACT mom27_6 MOM_field7 mom27_7;
NOT MOM_field7 MOM_field6 mom27_idt;
SELECT -INTERACT mom27_7 RFDMY -NOT mom27_reg1;
SELECT -INTERACT mom27_reg1 MOMDMY0 mom27_reg21;
NOT mom27_reg21 MOMDMY22 mom27_reg2;
NOT mom27_reg2 MAC mom27_reg3;
SELECT -INTERACT mom27_reg3 MOMDMY_2T -NOT mom27_reg4;
SELECT -INTERACT mom27_reg4 poly mom27_reg;
SELECT -INTERACT mom27_reg3 MOMDMY_2T mom27_reg_2t;
SELECT -INTERACT mom27_7 RFDMY mom27_reg_rf1;
SELECT -INTERACT mom27_reg_rf1 MOMDMY0 mom27_reg_rf21;
NOT mom27_reg_rf21 MOMDMY22 mom27_reg_rf2;
NOT mom27_reg_rf2 MAC mom27_reg_rf3;
NOT mom27_reg_rf3 RDKDMY mom27_reg_rf;
AND mom27_reg_rf3 RDKDMY mom27_reg_rf_rdk;
AND mom27_7 MOMDMY22 mom27_mx_aux1;
NOT mom27_mx_aux1 MAC mom27_mx_aux;
SELECT -INTERACT MOMDMY22 mom27_7 mom27_mx_reg11;
SELECT -INTERACT mom27_mx_reg11 MOMDMY0 mom27_mx_reg1;
NOT mom27_mx_reg1 MAC mom27_mx_reg2;
SELECT -INTERACT mom27_mx_reg2 MOMDMY_2T -NOT mom27_mx_reg3;
SELECT -INTERACT mom27_mx_reg3 poly mom27_mx_reg;
SELECT -INTERACT mom27_mx_reg2 MOMDMY_2T mom27_mx_reg_4t;
AND mom27_reg2 MAC mom27_freg;
AND mom27_mx_reg1 MAC mom27_mx_freg;
AND mom27_mx_aux1 MAC mom27_mx_faux;
DEVICE crtmom mom27_reg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom27_reg ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom27_reg ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 7 
 ];
DEVICE crtmom_2t mom27_reg_2t metal7 ( PLUS ) metal7 ( MINUS ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom27_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom27_reg_2t ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 7 
 ];
DEVICE crtmom_rf mom27_reg_rf metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom27_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom27_reg_rf ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 7 
 ];
DEVICE crtmom_rf_rdk mom27_reg_rf_rdk metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field2 ) 
 w = perimeter_coincide ( MOM_field2 , mom27_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole2 , mom27_reg_rf_rdk ) / ( nh-1 ) / 2 
 stm = 2 
 spm = 7 
 ];
DEVICE crtmom_mx mom27_mx_reg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom27_mx_aux > < metal7 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field2 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom27_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole2 , mom27_mx_aux ) / ( mf1* ( nh-1 ) ) / 2 
 stm = 2 
 spm = 7 
 ];
DEVICE fmom mom27_freg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field2 , mom27_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom27_freg ) / ( nr-1 ) / 2 
 stm = 2 
 spm = 7 
 ];
DEVICE fmom_mx mom27_mx_freg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field2 > < MOM_hole2 > < mom27_mx_faux > < metal7 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field2 , mom27_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole2 , mom27_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 2 
 spm = 7 
 ];
SELECT -INTERACT MOMDMY5 MOM_field1 -NOT mom35_1;
SELECT -INTERACT mom35_1 MOM_field2 -NOT mom35_2;
SELECT -INTERACT mom35_2 MOM_field3 mom35_3;
SELECT -INTERACT mom35_3 MOM_field4 mom35_4;
SELECT -INTERACT mom35_4 MOM_field5 mom35_5;
NOT MOM_field5 MOM_field4 mom35_idt;
SELECT -INTERACT mom35_5 MOM_field6 -NOT mom35_Left6;
SELECT -INTERACT mom35_Left6 MOM_field7 -NOT mom35_Left7;
SELECT -INTERACT mom35_Left7 RFDMY -NOT mom35_reg1;
SELECT -INTERACT mom35_reg1 MOMDMY0 mom35_reg21;
NOT mom35_reg21 MOMDMY22 mom35_reg2;
NOT mom35_reg2 MAC mom35_reg3;
SELECT -INTERACT mom35_reg3 MOMDMY_2T -NOT mom35_reg4;
SELECT -INTERACT mom35_reg4 poly mom35_reg;
SELECT -INTERACT mom35_reg3 MOMDMY_2T mom35_reg_2t;
SELECT -INTERACT mom35_Left7 RFDMY mom35_reg_rf1;
SELECT -INTERACT mom35_reg_rf1 MOMDMY0 mom35_reg_rf21;
NOT mom35_reg_rf21 MOMDMY22 mom35_reg_rf2;
NOT mom35_reg_rf2 MAC mom35_reg_rf3;
NOT mom35_reg_rf3 RDKDMY mom35_reg_rf;
AND mom35_reg_rf3 RDKDMY mom35_reg_rf_rdk;
AND mom35_Left7 MOMDMY22 mom35_mx_aux1;
NOT mom35_mx_aux1 MAC mom35_mx_aux;
SELECT -INTERACT MOMDMY22 mom35_Left7 mom35_mx_reg11;
SELECT -INTERACT mom35_mx_reg11 MOMDMY0 mom35_mx_reg1;
NOT mom35_mx_reg1 MAC mom35_mx_reg2;
SELECT -INTERACT mom35_mx_reg2 MOMDMY_2T -NOT mom35_mx_reg3;
SELECT -INTERACT mom35_mx_reg3 poly mom35_mx_reg;
SELECT -INTERACT mom35_mx_reg2 MOMDMY_2T mom35_mx_reg_4t;
AND mom35_reg2 MAC mom35_freg;
AND mom35_mx_reg1 MAC mom35_mx_freg;
AND mom35_mx_aux1 MAC mom35_mx_faux;
DEVICE crtmom mom35_reg metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom35_reg ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom35_reg ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 5 
 ];
DEVICE crtmom_2t mom35_reg_2t metal5 ( PLUS ) metal5 ( MINUS ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom35_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom35_reg_2t ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 5 
 ];
DEVICE crtmom_rf mom35_reg_rf metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom35_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom35_reg_rf ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 5 
 ];
DEVICE crtmom_rf_rdk mom35_reg_rf_rdk metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom35_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom35_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 5 
 ];
DEVICE crtmom_mx mom35_mx_reg mom5p1 ( PLUS1 ) mom5m1 ( MINUS1 ) mom5p2 ( PLUS2 ) mom5m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > < mom35_mx_aux > < metal5 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal5 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field4 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom35_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole3 , mom35_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 3 
 spm = 5 
 ];
DEVICE fmom mom35_freg metal5 ( PLUS ) metal5 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field4 , mom35_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole3 , mom35_freg ) / ( nr-1 ) / 2 
 stm = 3 
 spm = 5 
 ];
DEVICE fmom_mx mom35_mx_freg mom5p1 ( PLUS1 ) mom5m1 ( MINUS1 ) mom5p2 ( PLUS2 ) mom5m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > < mom35_mx_faux > < metal5 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal5 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom35_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole3 , mom35_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 3 
 spm = 5 
 ];
SELECT -INTERACT MOMDMY6 MOM_field1 -NOT mom36_1;
SELECT -INTERACT mom36_1 MOM_field2 -NOT mom36_2;
SELECT -INTERACT mom36_2 MOM_field3 mom36_3;
SELECT -INTERACT mom36_3 MOM_field4 mom36_4;
SELECT -INTERACT mom36_4 MOM_field5 mom36_5;
SELECT -INTERACT mom36_5 MOM_field6 mom36_6;
NOT MOM_field6 MOM_field5 mom36_idt;
SELECT -INTERACT mom36_6 MOM_field7 -NOT mom36_Left7;
SELECT -INTERACT mom36_Left7 RFDMY -NOT mom36_reg1;
SELECT -INTERACT mom36_reg1 MOMDMY0 mom36_reg21;
NOT mom36_reg21 MOMDMY22 mom36_reg2;
NOT mom36_reg2 MAC mom36_reg3;
SELECT -INTERACT mom36_reg3 MOMDMY_2T -NOT mom36_reg4;
SELECT -INTERACT mom36_reg4 poly mom36_reg;
SELECT -INTERACT mom36_reg3 MOMDMY_2T mom36_reg_2t;
SELECT -INTERACT mom36_Left7 RFDMY mom36_reg_rf1;
SELECT -INTERACT mom36_reg_rf1 MOMDMY0 mom36_reg_rf21;
NOT mom36_reg_rf21 MOMDMY22 mom36_reg_rf2;
NOT mom36_reg_rf2 MAC mom36_reg_rf3;
NOT mom36_reg_rf3 RDKDMY mom36_reg_rf;
AND mom36_reg_rf3 RDKDMY mom36_reg_rf_rdk;
AND mom36_Left7 MOMDMY22 mom36_mx_aux1;
NOT mom36_mx_aux1 MAC mom36_mx_aux;
SELECT -INTERACT MOMDMY22 mom36_Left7 mom36_mx_reg11;
SELECT -INTERACT mom36_mx_reg11 MOMDMY0 mom36_mx_reg1;
NOT mom36_mx_reg1 MAC mom36_mx_reg2;
SELECT -INTERACT mom36_mx_reg2 MOMDMY_2T -NOT mom36_mx_reg3;
SELECT -INTERACT mom36_mx_reg3 poly mom36_mx_reg;
SELECT -INTERACT mom36_mx_reg2 MOMDMY_2T mom36_mx_reg_4t;
AND mom36_reg2 MAC mom36_freg;
AND mom36_mx_reg1 MAC mom36_mx_freg;
AND mom36_mx_aux1 MAC mom36_mx_faux;
DEVICE crtmom mom36_reg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom36_reg ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom36_reg ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 6 
 ];
DEVICE crtmom_2t mom36_reg_2t metal6 ( PLUS ) metal6 ( MINUS ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom36_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom36_reg_2t ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 6 
 ];
DEVICE crtmom_rf mom36_reg_rf metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom36_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom36_reg_rf ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 6 
 ];
DEVICE crtmom_rf_rdk mom36_reg_rf_rdk metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom36_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom36_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 6 
 ];
DEVICE crtmom_mx mom36_mx_reg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > < mom36_mx_aux > < metal6 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field4 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom36_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole3 , mom36_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 3 
 spm = 6 
 ];
DEVICE fmom mom36_freg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field4 , mom36_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole3 , mom36_freg ) / ( nr-1 ) / 2 
 stm = 3 
 spm = 6 
 ];
DEVICE fmom_mx mom36_mx_freg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > < mom36_mx_faux > < metal6 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom36_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole3 , mom36_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 3 
 spm = 6 
 ];
SELECT -INTERACT MOMDMY7 MOM_field1 -NOT mom37_1;
SELECT -INTERACT mom37_1 MOM_field2 -NOT mom37_2;
SELECT -INTERACT mom37_2 MOM_field3 mom37_3;
SELECT -INTERACT mom37_3 MOM_field4 mom37_4;
SELECT -INTERACT mom37_4 MOM_field5 mom37_5;
SELECT -INTERACT mom37_5 MOM_field6 mom37_6;
SELECT -INTERACT mom37_6 MOM_field7 mom37_7;
NOT MOM_field7 MOM_field6 mom37_idt;
SELECT -INTERACT mom37_7 RFDMY -NOT mom37_reg1;
SELECT -INTERACT mom37_reg1 MOMDMY0 mom37_reg21;
NOT mom37_reg21 MOMDMY22 mom37_reg2;
NOT mom37_reg2 MAC mom37_reg3;
SELECT -INTERACT mom37_reg3 MOMDMY_2T -NOT mom37_reg4;
SELECT -INTERACT mom37_reg4 poly mom37_reg;
SELECT -INTERACT mom37_reg3 MOMDMY_2T mom37_reg_2t;
SELECT -INTERACT mom37_7 RFDMY mom37_reg_rf1;
SELECT -INTERACT mom37_reg_rf1 MOMDMY0 mom37_reg_rf21;
NOT mom37_reg_rf21 MOMDMY22 mom37_reg_rf2;
NOT mom37_reg_rf2 MAC mom37_reg_rf3;
NOT mom37_reg_rf3 RDKDMY mom37_reg_rf;
AND mom37_reg_rf3 RDKDMY mom37_reg_rf_rdk;
AND mom37_7 MOMDMY22 mom37_mx_aux1;
NOT mom37_mx_aux1 MAC mom37_mx_aux;
SELECT -INTERACT MOMDMY22 mom37_7 mom37_mx_reg11;
SELECT -INTERACT mom37_mx_reg11 MOMDMY0 mom37_mx_reg1;
NOT mom37_mx_reg1 MAC mom37_mx_reg2;
SELECT -INTERACT mom37_mx_reg2 MOMDMY_2T -NOT mom37_mx_reg3;
SELECT -INTERACT mom37_mx_reg3 poly mom37_mx_reg;
SELECT -INTERACT mom37_mx_reg2 MOMDMY_2T mom37_mx_reg_4t;
AND mom37_reg2 MAC mom37_freg;
AND mom37_mx_reg1 MAC mom37_mx_freg;
AND mom37_mx_aux1 MAC mom37_mx_faux;
DEVICE crtmom mom37_reg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom37_reg ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom37_reg ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 7 
 ];
DEVICE crtmom_2t mom37_reg_2t metal7 ( PLUS ) metal7 ( MINUS ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom37_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom37_reg_2t ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 7 
 ];
DEVICE crtmom_rf mom37_reg_rf metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom37_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom37_reg_rf ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 7 
 ];
DEVICE crtmom_rf_rdk mom37_reg_rf_rdk metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field3 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom37_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole3 , mom37_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 3 
 spm = 7 
 ];
DEVICE crtmom_mx mom37_mx_reg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > < mom37_mx_aux > < metal7 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field3 ) / mf1 
 nh = count ( MOM_field4 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom37_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole3 , mom37_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 3 
 spm = 7 
 ];
DEVICE fmom mom37_freg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field3 ) 
 w = perimeter_coincide ( MOM_field4 , mom37_freg ) / nr 
 lr = ( area ( MOM_field3 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole3 , mom37_freg ) / ( nr-1 ) / 2 
 stm = 3 
 spm = 7 
 ];
DEVICE fmom_mx mom37_mx_freg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field3 > < MOM_field4 > < MOM_hole3 > < mom37_mx_faux > < metal7 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field3 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom37_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field3 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole3 , mom37_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 3 
 spm = 7 
 ];
SELECT -INTERACT MOMDMY6 MOM_field1 -NOT mom46_1;
SELECT -INTERACT mom46_1 MOM_field2 -NOT mom46_2;
SELECT -INTERACT mom46_2 MOM_field3 -NOT mom46_3;
SELECT -INTERACT mom46_3 MOM_field4 mom46_4;
SELECT -INTERACT mom46_4 MOM_field5 mom46_5;
SELECT -INTERACT mom46_5 MOM_field6 mom46_6;
NOT MOM_field6 MOM_field5 mom46_idt;
SELECT -INTERACT mom46_6 MOM_field7 -NOT mom46_Left7;
SELECT -INTERACT mom46_Left7 RFDMY -NOT mom46_reg1;
SELECT -INTERACT mom46_reg1 MOMDMY0 mom46_reg21;
NOT mom46_reg21 MOMDMY22 mom46_reg2;
NOT mom46_reg2 MAC mom46_reg3;
SELECT -INTERACT mom46_reg3 MOMDMY_2T -NOT mom46_reg4;
SELECT -INTERACT mom46_reg4 poly mom46_reg;
SELECT -INTERACT mom46_reg3 MOMDMY_2T mom46_reg_2t;
SELECT -INTERACT mom46_Left7 RFDMY mom46_reg_rf1;
SELECT -INTERACT mom46_reg_rf1 MOMDMY0 mom46_reg_rf21;
NOT mom46_reg_rf21 MOMDMY22 mom46_reg_rf2;
NOT mom46_reg_rf2 MAC mom46_reg_rf3;
NOT mom46_reg_rf3 RDKDMY mom46_reg_rf;
AND mom46_reg_rf3 RDKDMY mom46_reg_rf_rdk;
AND mom46_Left7 MOMDMY22 mom46_mx_aux1;
NOT mom46_mx_aux1 MAC mom46_mx_aux;
SELECT -INTERACT MOMDMY22 mom46_Left7 mom46_mx_reg11;
SELECT -INTERACT mom46_mx_reg11 MOMDMY0 mom46_mx_reg1;
NOT mom46_mx_reg1 MAC mom46_mx_reg2;
SELECT -INTERACT mom46_mx_reg2 MOMDMY_2T -NOT mom46_mx_reg3;
SELECT -INTERACT mom46_mx_reg3 poly mom46_mx_reg;
SELECT -INTERACT mom46_mx_reg2 MOMDMY_2T mom46_mx_reg_4t;
AND mom46_reg2 MAC mom46_freg;
AND mom46_mx_reg1 MAC mom46_mx_freg;
AND mom46_mx_aux1 MAC mom46_mx_faux;
DEVICE crtmom mom46_reg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom46_reg ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom46_reg ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 6 
 ];
DEVICE crtmom_2t mom46_reg_2t metal6 ( PLUS ) metal6 ( MINUS ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom46_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom46_reg_2t ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 6 
 ];
DEVICE crtmom_rf mom46_reg_rf metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom46_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom46_reg_rf ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 6 
 ];
DEVICE crtmom_rf_rdk mom46_reg_rf_rdk metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom46_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom46_reg_rf_rdk ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 6 
 ];
DEVICE crtmom_mx mom46_mx_reg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > < mom46_mx_aux > < metal6 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field5 ) / mf1 
 nh = count ( MOM_field4 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom46_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole4 , mom46_mx_aux ) / ( mf1* ( nh-1 ) ) / 2 
 stm = 4 
 spm = 6 
 ];
DEVICE fmom mom46_freg metal6 ( PLUS ) metal6 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field5 ) 
 w = perimeter_coincide ( MOM_field4 , mom46_freg ) / nr 
 lr = ( area ( MOM_field5 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole4 , mom46_freg ) / ( nr-1 ) / 2 
 stm = 4 
 spm = 6 
 ];
DEVICE fmom_mx mom46_mx_freg mom6p1 ( PLUS1 ) mom6m1 ( MINUS1 ) mom6p2 ( PLUS2 ) mom6m2 ( MINUS2 ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > < mom46_mx_faux > < metal6 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal6 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field5 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom46_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field5 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole4 , mom46_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 4 
 spm = 6 
 ];
SELECT -INTERACT MOMDMY7 MOM_field1 -NOT mom47_1;
SELECT -INTERACT mom47_1 MOM_field2 -NOT mom47_2;
SELECT -INTERACT mom47_2 MOM_field3 -NOT mom47_3;
SELECT -INTERACT mom47_3 MOM_field4 mom47_4;
SELECT -INTERACT mom47_4 MOM_field5 mom47_5;
SELECT -INTERACT mom47_5 MOM_field6 mom47_6;
SELECT -INTERACT mom47_6 MOM_field7 mom47_7;
NOT MOM_field7 MOM_field6 mom47_idt;
SELECT -INTERACT mom47_7 RFDMY -NOT mom47_reg1;
SELECT -INTERACT mom47_reg1 MOMDMY0 mom47_reg21;
NOT mom47_reg21 MOMDMY22 mom47_reg2;
NOT mom47_reg2 MAC mom47_reg3;
SELECT -INTERACT mom47_reg3 MOMDMY_2T -NOT mom47_reg4;
SELECT -INTERACT mom47_reg4 poly mom47_reg;
SELECT -INTERACT mom47_reg3 MOMDMY_2T mom47_reg_2t;
SELECT -INTERACT mom47_7 RFDMY mom47_reg_rf1;
SELECT -INTERACT mom47_reg_rf1 MOMDMY0 mom47_reg_rf21;
NOT mom47_reg_rf21 MOMDMY22 mom47_reg_rf2;
NOT mom47_reg_rf2 MAC mom47_reg_rf3;
NOT mom47_reg_rf3 RDKDMY mom47_reg_rf;
AND mom47_reg_rf3 RDKDMY mom47_reg_rf_rdk;
AND mom47_7 MOMDMY22 mom47_mx_aux1;
NOT mom47_mx_aux1 MAC mom47_mx_aux;
SELECT -INTERACT MOMDMY22 mom47_7 mom47_mx_reg11;
SELECT -INTERACT mom47_mx_reg11 MOMDMY0 mom47_mx_reg1;
NOT mom47_mx_reg1 MAC mom47_mx_reg2;
SELECT -INTERACT mom47_mx_reg2 MOMDMY_2T -NOT mom47_mx_reg3;
SELECT -INTERACT mom47_mx_reg3 poly mom47_mx_reg;
SELECT -INTERACT mom47_mx_reg2 MOMDMY_2T mom47_mx_reg_4t;
AND mom47_reg2 MAC mom47_freg;
AND mom47_mx_reg1 MAC mom47_mx_freg;
AND mom47_mx_aux1 MAC mom47_mx_faux;
DEVICE crtmom mom47_reg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom47_reg ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom47_reg ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 7 
 ];
DEVICE crtmom_2t mom47_reg_2t metal7 ( PLUS ) metal7 ( MINUS ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom47_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom47_reg_2t ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 7 
 ];
DEVICE crtmom_rf mom47_reg_rf metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom47_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom47_reg_rf ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 7 
 ];
DEVICE crtmom_rf_rdk mom47_reg_rf_rdk metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field4 ) 
 w = perimeter_coincide ( MOM_field4 , mom47_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole4 , mom47_reg_rf_rdk ) / ( nh-1 ) / 2 
 stm = 4 
 spm = 7 
 ];
DEVICE crtmom_mx mom47_mx_reg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > < mom47_mx_aux > < metal7 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field5 ) / mf1 
 nh = count ( MOM_field4 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom47_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole4 , mom47_mx_aux ) / ( mf1* ( nh-1 ) ) / 2 
 stm = 4 
 spm = 7 
 ];
DEVICE fmom mom47_freg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field5 ) 
 w = perimeter_coincide ( MOM_field4 , mom47_freg ) / nr 
 lr = ( area ( MOM_field5 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole4 , mom47_freg ) / ( nr-1 ) / 2 
 stm = 4 
 spm = 7 
 ];
DEVICE fmom_mx mom47_mx_freg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field5 > < MOM_field4 > < MOM_hole4 > < mom47_mx_faux > < metal7 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field5 ) / mf1 
 w = perimeter_coincide ( MOM_field4 , mom47_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field5 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole4 , mom47_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 4 
 spm = 7 
 ];
SELECT -INTERACT MOMDMY7 MOM_field1 -NOT mom57_1;
SELECT -INTERACT mom57_1 MOM_field2 -NOT mom57_2;
SELECT -INTERACT mom57_2 MOM_field3 -NOT mom57_3;
SELECT -INTERACT mom57_3 MOM_field4 -NOT mom57_4;
SELECT -INTERACT mom57_4 MOM_field5 mom57_5;
SELECT -INTERACT mom57_5 MOM_field6 mom57_6;
SELECT -INTERACT mom57_6 MOM_field7 mom57_7;
NOT MOM_field7 MOM_field6 mom57_idt;
SELECT -INTERACT mom57_7 RFDMY -NOT mom57_reg1;
SELECT -INTERACT mom57_reg1 MOMDMY0 mom57_reg21;
NOT mom57_reg21 MOMDMY22 mom57_reg2;
NOT mom57_reg2 MAC mom57_reg3;
SELECT -INTERACT mom57_reg3 MOMDMY_2T -NOT mom57_reg4;
SELECT -INTERACT mom57_reg4 poly mom57_reg;
SELECT -INTERACT mom57_reg3 MOMDMY_2T mom57_reg_2t;
SELECT -INTERACT mom57_7 RFDMY mom57_reg_rf1;
SELECT -INTERACT mom57_reg_rf1 MOMDMY0 mom57_reg_rf21;
NOT mom57_reg_rf21 MOMDMY22 mom57_reg_rf2;
NOT mom57_reg_rf2 MAC mom57_reg_rf3;
NOT mom57_reg_rf3 RDKDMY mom57_reg_rf;
AND mom57_reg_rf3 RDKDMY mom57_reg_rf_rdk;
AND mom57_7 MOMDMY22 mom57_mx_aux1;
NOT mom57_mx_aux1 MAC mom57_mx_aux;
SELECT -INTERACT MOMDMY22 mom57_7 mom57_mx_reg11;
SELECT -INTERACT mom57_mx_reg11 MOMDMY0 mom57_mx_reg1;
NOT mom57_mx_reg1 MAC mom57_mx_reg2;
SELECT -INTERACT mom57_mx_reg2 MOMDMY_2T -NOT mom57_mx_reg3;
SELECT -INTERACT mom57_mx_reg3 poly mom57_mx_reg;
SELECT -INTERACT mom57_mx_reg2 MOMDMY_2T mom57_mx_reg_4t;
AND mom57_reg2 MAC mom57_freg;
AND mom57_mx_reg1 MAC mom57_mx_freg;
AND mom57_mx_aux1 MAC mom57_mx_faux;
DEVICE crtmom mom57_reg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field6 ) 
 w = perimeter_coincide ( MOM_field6 , mom57_reg ) / nh 
 s = perimeter_coincide ( MOM_hole5 , mom57_reg ) / ( nv-1 ) / 2 
 stm = 5 
 spm = 7 
 ];
DEVICE crtmom_2t mom57_reg_2t metal7 ( PLUS ) metal7 ( MINUS ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field6 ) 
 w = perimeter_coincide ( MOM_field6 , mom57_reg_2t ) / nh 
 s = perimeter_coincide ( MOM_hole5 , mom57_reg_2t ) / ( nv-1 ) / 2 
 stm = 5 
 spm = 7 
 ];
DEVICE crtmom_rf mom57_reg_rf metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field6 ) 
 w = perimeter_coincide ( MOM_field6 , mom57_reg_rf ) / nh 
 s = perimeter_coincide ( MOM_hole5 , mom57_reg_rf ) / ( nv-1 ) / 2 
 stm = 5 
 spm = 7 
 ];
DEVICE crtmom_rf_rdk mom57_reg_rf_rdk metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > ( PLUS MINUS ) [ 
 property w , s , nv , nh , stm , spm 
 nv = count ( MOM_field5 ) 
 nh = count ( MOM_field6 ) 
 w = perimeter_coincide ( MOM_field6 , mom57_reg_rf_rdk ) / nh 
 s = perimeter_coincide ( MOM_hole5 , mom57_reg_rf_rdk ) / ( nv-1 ) / 2 
 stm = 5 
 spm = 7 
 ];
DEVICE crtmom_mx mom57_mx_reg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > < mom57_mx_aux > < metal7 > [ 
 property w , s , nv , nh , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nv = count ( MOM_field5 ) / mf1 
 nh = count ( MOM_field6 ) / mf1 
 w = perimeter_coincide ( MOM_field6 , mom57_mx_aux ) / ( nh*mf1 ) 
 s = perimeter_coincide ( MOM_hole5 , mom57_mx_aux ) / ( mf1* ( nv-1 ) ) / 2 
 stm = 5 
 spm = 7 
 ];
DEVICE fmom mom57_freg metal7 ( PLUS ) metal7 ( MINUS ) poly ( BULK ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > ( PLUS MINUS ) [ 
 property w , s , nr , lr , stm , spm 
 nr = count ( MOM_field5 ) 
 w = perimeter_coincide ( MOM_field6 , mom57_freg ) / nr 
 lr = ( area ( MOM_field5 ) / nr ) / w 
 s = perimeter_coincide ( MOM_hole5 , mom57_freg ) / ( nr-1 ) / 2 
 stm = 5 
 spm = 7 
 ];
DEVICE fmom_mx mom57_mx_freg mom7p1 ( PLUS1 ) mom7m1 ( MINUS1 ) mom7p2 ( PLUS2 ) mom7m2 ( MINUS2 ) poly ( BULK ) < MOM_field5 > < MOM_field6 > < MOM_hole5 > < mom57_mx_faux > < metal7 > [ 
 property w , s , nr , lr , stm , spm , mf 
 mf1 = count ( metal7 ) -2 
 mf = mf1 / 2 
 nr = count ( MOM_field5 ) / mf1 
 w = perimeter_coincide ( MOM_field6 , mom57_mx_faux ) / ( nr*mf1 ) 
 lr = ( area ( MOM_field5 ) / ( nr*mf1 ) ) / w 
 s = perimeter_coincide ( MOM_hole5 , mom57_mx_faux ) / ( mf1* ( nr-1 ) ) / 2 
 stm = 5 
 spm = 7 
 ];
LVS_CHECK_PROPERTY crtmom_rf nv nv -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf nh nh -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY crtmom_rf w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY crtmom_rf stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf_rdk nv nv -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf_rdk nh nh -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf_rdk s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY crtmom_rf_rdk w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY crtmom_rf_rdk stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_rf_rdk spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom nv nv -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom nh nh -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY crtmom w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY crtmom stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_2t nv nv -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_2t nh nh -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_2t s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY crtmom_2t w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY crtmom_2t stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_2t spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_mx nv nv -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_mx nh nh -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_mx s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY crtmom_mx w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY crtmom_mx stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_mx spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY crtmom_mx mf mf -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom lr lr -TOLERANCE MOM_Lerr;
LVS_CHECK_PROPERTY fmom s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY fmom w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY fmom stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom_mx nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom_mx lr lr -TOLERANCE MOM_Lerr;
LVS_CHECK_PROPERTY fmom_mx s s -TOLERANCE MOM_Serr;
LVS_CHECK_PROPERTY fmom_mx w w -TOLERANCE MOM_Werr;
LVS_CHECK_PROPERTY fmom_mx stm stm -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom_mx spm spm -TOLERANCE 0;
LVS_CHECK_PROPERTY fmom_mx mf mf -TOLERANCE 0;
DEVICE lincap lin_nw poly ( PLUS ) tndiff ( MINUS ) < lingt > < nthin > -model lincap [ 
 property lr , wr , mr , gr 
 gr = count ( nthin ) 
 mr = count ( lingt ) / gr 
 wr = ( perimeter_coincide ( lingt , tndiff ) / 2 ) / ( mr*gr ) 
 lr = ( area ( lingt ) / wr ) / ( mr*gr ) 
 ];
LVS_CHECK_PROPERTY lincap wr wr -TOLERANCE 0;
LVS_CHECK_PROPERTY lincap lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY lincap mr mr -TOLERANCE 0;
DEVICE lincap_25 lin_nw_25 poly ( PLUS ) tndiff ( MINUS ) < lingt_25 > < nthin > -model lincap_25 [ 
 property lr , wr , mr , gr 
 gr = count ( nthin ) 
 mr = count ( lingt_25 ) / gr 
 wr = ( perimeter_coincide ( lingt_25 , tndiff ) / 2 ) / ( mr*gr ) 
 lr = ( area ( lingt_25 ) / wr ) / ( mr*gr ) 
 ];
LVS_CHECK_PROPERTY lincap_25 wr wr -TOLERANCE 0;
LVS_CHECK_PROPERTY lincap_25 lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY lincap_25 mr mr -TOLERANCE 0;
DEVICE lincap_rf lin_nw_rf poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < lingt_rf > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( lingt_rf ) / gr 
 wr = ( perimeter_coincide ( lingt_rf , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( lingt_rf ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY lincap_rf lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY lincap_rf wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY lincap_rf br br -TOLERANCE 0;
LVS_CHECK_PROPERTY lincap_rf gr gr -TOLERANCE 0;
DEVICE lincap_rf_25 lin_nw_rf_25 poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < lingt_rf_25 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( lingt_rf_25 ) / gr 
 wr = ( perimeter_coincide ( lingt_rf_25 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( lingt_rf_25 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY lincap_rf_25 lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY lincap_rf_25 wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY lincap_rf_25 br br -TOLERANCE 0;
LVS_CHECK_PROPERTY lincap_rf_25 gr gr -TOLERANCE 0;
DEVICE lowcpad_d15 rfpad_15 metal10 ( APAD ) poly ( AVSS ) < ext_rfpad > -model lowcpad_d15 [ 
 property lt , wt , lay 
 A_CAP = area ( ext_rfpad ) 
 P_CAP = perimeter ( ext_rfpad ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 lay = 9 * lt / lt 
 ];
LVS_CHECK_PROPERTY lowcpad_d15 lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY lowcpad_d15 wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY lowcpad_d15 lay lay -TOLERANCE 0;
DEVICE lowcpad_d23 rfpad_23 metal10 ( APAD ) poly ( AVSS ) < ext_rfpad > -model lowcpad_d23 [ 
 property lt , wt , lay 
 A_CAP = area ( ext_rfpad ) 
 P_CAP = perimeter ( ext_rfpad ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 lay = 9 * lt / lt 
 ];
LVS_CHECK_PROPERTY lowcpad_d23 lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY lowcpad_d23 wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY lowcpad_d23 lay lay -TOLERANCE 0;
BBOX rfpad ext_rfpad;
SELECT -INTERACT -NOT rfpad RFPADDMY1 D_15a;
AND D_15a RFPADDMY2 D_15b;
SELECT -INTERACT -NOT D_15b RFPADDMY3 rfpad_15;
SELECT -INTERACT -NOT rfpad RFPADDMY1 D_23a;
SELECT -INTERACT -NOT D_23a RFPADDMY2 D_23b;
AND D_23b RFPADDMY3 rfpad_23;
CONNECT rfpad_15 metal9;
CONNECT rfpad_23 metal9;
AND ctm cbm mim_block;
OR RFDMY RFDMYUD RFDMYall;
OR metal6 metal5 shield1;
AND shield1 ctm shield2;
AND shield2 RFDMY shield3;
SELECT -INTERACT -NOT shield3 CTMDMYUD shield;
AND shield2 RFDMYUD shieldud;
SELECT -INTERACT mim_block VIA7i RCTM;
SELECT -INTERACT cbm RCTM RCBM;
NOT RCBM RCTM OCBM;
AND RCTM VIA7i ctm_via;
AND OCBM VIA7i cbm_via;
NOT VIA7i ctm_via tvia1;
NOT tvia1 cbm_via VIA7;
COPY VIA8i VIA8;
EDGE_BOOLEAN -inside ctm metal8 L_EG1;
EDGE_EXPAND L_EG1 -outside_by 0.005 L_EG_RG1;
EDGE_SELECT ctm L_EG_RG1 L_EG;
EDGE_EXPAND L_EG -outside_by 0.005 L_EG_RG;
AND RCTM RFDMY RCTM_RF1;
SELECT -INTERACT RCTM_RF1 shield RCTM_RF2;
NOT RCTM_RF2 RFDMYUD RCTM_RF;
AND RCTM_RF CAP1P5 RCTM_RF1P5;
AND RCTM_RF CAP2P0 RCTM_RF2P0;
AND RCTM_RF CAP1P0 RCTM_RF1P0;
SELECT -INTERACT -NOT RCTM_RF1 shield RCTM_RF_woum1;
SELECT -INTERACT RCTM_RF_woum1 CTMDMYUD RCTM_RF_woum_ex;
NOT RCTM_RF_woum1 RCTM_RF_woum_ex RCTM_RF_woum;
AND RCTM_RF_woum CAP1P5 RCTM_RF1P5_woum;
AND RCTM_RF_woum CAP2P0 RCTM_RF2P0_woum;
AND RCTM_RF_woum CAP1P0 RCTM_RF1P0_woum;
AND RCTM RFDMYUD RCTM_RFUD1;
SELECT -INTERACT RCTM_RFUD1 shieldud RCTM_RFUD;
AND RCTM_RFUD CAP1P5 RCTM_RF1P5UD;
AND RCTM_RFUD CAP2P0 RCTM_RF2P0UD;
AND RCTM_RFUD CAP1P0 RCTM_RF1P0UD;
NOT RCTM RFDMYall RCTM_R1;
NOT RCTM_R1 CTMDMYUD RCTM_R;
NOT RCTM RFDMYUD RCTM_RUD1;
AND RCTM_RUD1 CTMDMYUD RCTM_RUD;
AND RCTM_R1 MIM_3TDMY RCTM_R_3T;
NOT RCTM_R MIM_3TDMY RCTM_R_2T;
NOT RCTM_RUD MIM_3TDMY RCTM_R_2TUD;
AND RCTM_R_2T CAP1P5 RCTM_R1P5;
AND RCTM_R_2T CAP2P0 RCTM_R2P0;
AND RCTM_R_2T CAP1P0 RCTM_R1P0;
AND RCTM_R_2TUD CAP1P5 RCTM_R1P5UD;
AND RCTM_R_2TUD CAP2P0 RCTM_R2P0UD;
AND RCTM_R_2TUD CAP1P0 RCTM_R1P0UD;
AND RCTM_R_3T CAP1P5 RCTM_R1P5_3T;
AND RCTM_R_3T CAP2P0 RCTM_R2P0_3T;
AND RCTM_R_3T CAP1P0 RCTM_R1P0_3T;
SIZE RCTM_R_3T -BY 0.005 MIM_TERM;
AND MIM_TERM psub mim_psub_via;
AND MIM_TERM nxwell mim_nw_via;
SIZE RCTM_RF_woum -BY 0.005 RF_MIM_TERM1;
NOT RF_MIM_TERM1 RCTM_RF_woum RF_MIM_TERM;
AND RF_MIM_TERM psub rfmim_psub_via;
AND RF_MIM_TERM nxwell rfmim_nw_via;
CONNECT metal8 ctm -BY ctm_via;
CONNECT metal8 cbm -BY cbm_via;
CONNECT metal8 metal7 -BY VIA7;
CONNECT metal9 metal8 -BY VIA8;
CONNECT metal6 shield;
CONNECT shield metal6;
CONNECT shieldud metal6;
DEVICE mimcap_sin RCTM_R1P0 ctm ( PLUS ) cbm ( MINUS ) [ 
 property lt , wt , mimflag 
 A_CAP = area ( RCTM_R1P0 ) 
 P_CAP = perimeter ( RCTM_R1P0 ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 1 
 ];
LVS_CHECK_PROPERTY mimcap_sin lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin RCTM_R1P5 ctm ( PLUS ) cbm ( MINUS ) [ 
 property lt , wt , mimflag 
 A_CAP = area ( RCTM_R1P5 ) 
 P_CAP = perimeter ( RCTM_R1P5 ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 2 
 ];
LVS_CHECK_PROPERTY mimcap_sin lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin RCTM_R2P0 ctm ( PLUS ) cbm ( MINUS ) [ 
 property lt , wt , mimflag 
 A_CAP = area ( RCTM_R2P0 ) 
 P_CAP = perimeter ( RCTM_R2P0 ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 3 
 ];
LVS_CHECK_PROPERTY mimcap_sin lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin RCTM_R1P0UD ctm ( PLUS ) cbm ( MINUS ) [ 
 property lt , wt , mimflag 
 A_CAP = area ( RCTM_R1P0UD ) 
 P_CAP = perimeter ( RCTM_R1P0UD ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 1 
 ];
LVS_CHECK_PROPERTY mimcap_sin lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin RCTM_R1P5UD ctm ( PLUS ) cbm ( MINUS ) [ 
 property lt , wt , mimflag 
 A_CAP = area ( RCTM_R1P5UD ) 
 P_CAP = perimeter ( RCTM_R1P5UD ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 2 
 ];
LVS_CHECK_PROPERTY mimcap_sin lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin RCTM_R2P0UD ctm ( PLUS ) cbm ( MINUS ) [ 
 property lt , wt , mimflag 
 A_CAP = area ( RCTM_R2P0UD ) 
 P_CAP = perimeter ( RCTM_R2P0UD ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 3 
 ];
LVS_CHECK_PROPERTY mimcap_sin lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin mimflag mimflag -TOLERANCE 0;
SCONNECT psub MIM_TERM -by mim_psub_via;
SCONNECT nxwell MIM_TERM -by mim_nw_via;
DEVICE mimcap_sin_3t RCTM_R1P0_3T ctm ( PLUS ) cbm ( MINUS ) MIM_TERM ( BULK ) [ 
 property lt , wt , lay , mimflag 
 A_CAP = area ( RCTM_R1P0_3T ) 
 P_CAP = perimeter ( RCTM_R1P0_3T ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 1 
 lay = 7 * lt / lt 
 
 ];
LVS_CHECK_PROPERTY mimcap_sin_3t lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin_3t RCTM_R1P5_3T ctm ( PLUS ) cbm ( MINUS ) MIM_TERM ( BULK ) [ 
 property lt , wt , lay , mimflag 
 A_CAP = area ( RCTM_R1P5_3T ) 
 P_CAP = perimeter ( RCTM_R1P5_3T ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 2 
 lay = 7 * lt / lt 
 
 ];
LVS_CHECK_PROPERTY mimcap_sin_3t lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_sin_3t RCTM_R2P0_3T ctm ( PLUS ) cbm ( MINUS ) MIM_TERM ( BULK ) [ 
 property lt , wt , lay , mimflag 
 A_CAP = area ( RCTM_R2P0_3T ) 
 P_CAP = perimeter ( RCTM_R2P0_3T ) 
 P_2_CAP = P_CAP * P_CAP 
 AC4 = A_CAP * 16 
 KKK = P_2_CAP-AC4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 lt = ( P_CAP+SQ ) / 4 
 wt = ( P_CAP-SQ ) / 4 
 mimflag = 3 
 lay = 7 * lt / lt 
 
 ];
LVS_CHECK_PROPERTY mimcap_sin_3t lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_sin_3t mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_um_sin_rf RCTM_RF1P0 ctm ( PLUS ) cbm ( MINUS ) shield ( BULK ) < L_EG_RG > [ 
 property lt , wt , mimflag 
 lt = perimeter_coincide ( RCTM_RF1P0 , L_EG_RG ) / 2 
 wt = area ( RCTM_RF1P0 ) / lt 
 mimflag = 1 
 ];
LVS_CHECK_PROPERTY mimcap_um_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_um_sin_rf RCTM_RF1P5 ctm ( PLUS ) cbm ( MINUS ) shield ( BULK ) < L_EG_RG > [ 
 property lt , wt , mimflag 
 lt = perimeter_coincide ( RCTM_RF1P5 , L_EG_RG ) / 2 
 wt = area ( RCTM_RF1P5 ) / lt 
 mimflag = 2 
 ];
LVS_CHECK_PROPERTY mimcap_um_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_um_sin_rf RCTM_RF2P0 ctm ( PLUS ) cbm ( MINUS ) shield ( BULK ) < L_EG_RG > [ 
 property lt , wt , mimflag 
 lt = perimeter_coincide ( RCTM_RF2P0 , L_EG_RG ) / 2 
 wt = area ( RCTM_RF2P0 ) / lt 
 mimflag = 3 
 ];
LVS_CHECK_PROPERTY mimcap_um_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_um_sin_rf RCTM_RF1P0UD ctm ( PLUS ) cbm ( MINUS ) shieldud ( BULK ) < L_EG_RG > [ 
 property lt , wt , mimflag 
 lt = perimeter_coincide ( RCTM_RF1P0UD , L_EG_RG ) / 2 
 wt = area ( RCTM_RF1P0UD ) / lt 
 mimflag = 1 
 ];
LVS_CHECK_PROPERTY mimcap_um_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_um_sin_rf RCTM_RF1P5UD ctm ( PLUS ) cbm ( MINUS ) shieldud ( BULK ) < L_EG_RG > [ 
 property lt , wt , mimflag 
 lt = perimeter_coincide ( RCTM_RF1P5UD , L_EG_RG ) / 2 
 wt = area ( RCTM_RF1P5UD ) / lt 
 mimflag = 2 
 ];
LVS_CHECK_PROPERTY mimcap_um_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf mimflag mimflag -TOLERANCE 0;
DEVICE mimcap_um_sin_rf RCTM_RF2P0UD ctm ( PLUS ) cbm ( MINUS ) shieldud ( BULK ) < L_EG_RG > [ 
 property lt , wt , mimflag 
 lt = perimeter_coincide ( RCTM_RF2P0UD , L_EG_RG ) / 2 
 wt = area ( RCTM_RF2P0UD ) / lt 
 mimflag = 3 
 ];
LVS_CHECK_PROPERTY mimcap_um_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_um_sin_rf mimflag mimflag -TOLERANCE 0;
SCONNECT psub RF_MIM_TERM -by rfmim_psub_via;
SCONNECT nxwell RF_MIM_TERM -by rfmim_nw_via;
DEVICE mimcap_woum_sin_rf RCTM_RF1P0_woum ctm ( PLUS ) cbm ( MINUS ) RF_MIM_TERM ( BULK ) < L_EG_RG > [ 
 property lt , wt , lay , mimflag 
 lt = perimeter_coincide ( RCTM_RF1P0_woum , L_EG_RG ) / 2 
 wt = area ( RCTM_RF1P0_woum ) / lt 
 mimflag = 1 
 lay = 7 * lt / lt 
 ];
LVS_CHECK_PROPERTY mimcap_woum_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf mimflag mimflag -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf lay lay -TOLERANCE 0;
DEVICE mimcap_woum_sin_rf RCTM_RF1P5_woum ctm ( PLUS ) cbm ( MINUS ) RF_MIM_TERM ( BULK ) < L_EG_RG > [ 
 property lt , wt , lay , mimflag 
 lt = perimeter_coincide ( RCTM_RF1P5_woum , L_EG_RG ) / 2 
 wt = area ( RCTM_RF1P5_woum ) / lt 
 mimflag = 2 
 lay = 7 * lt / lt 
 ];
LVS_CHECK_PROPERTY mimcap_woum_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf mimflag mimflag -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf lay lay -TOLERANCE 0;
DEVICE mimcap_woum_sin_rf RCTM_RF2P0_woum ctm ( PLUS ) cbm ( MINUS ) RF_MIM_TERM ( BULK ) < L_EG_RG > [ 
 property lt , wt , lay , mimflag 
 lt = perimeter_coincide ( RCTM_RF2P0_woum , L_EG_RG ) / 2 
 wt = area ( RCTM_RF2P0_woum ) / lt 
 mimflag = 3 
 lay = 7 * lt / lt 
 ];
LVS_CHECK_PROPERTY mimcap_woum_sin_rf wt wt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf lt lt -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf mimflag mimflag -TOLERANCE 0;
LVS_CHECK_PROPERTY mimcap_woum_sin_rf lay lay -TOLERANCE 0;
DEVICE moscap_rf var_nw3_rf poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf ) / gr 
 wr = ( perimeter_coincide ( vargt_rf , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf gr gr -TOLERANCE 0;
DEVICE moscap_rf18 var_nw_rf18 poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf18 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf18 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf18 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf18 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf18 lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf18 wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf18 br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf18 gr gr -TOLERANCE 0;
DEVICE moscap_rf18_nw var_nw_rf18_nw poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf18 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf18 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf18 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf18 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf18_nw lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf18_nw wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf18_nw br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf18_nw gr gr -TOLERANCE 0;
DEVICE moscap_rf25 var_nw_rf25 poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf25 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf25 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf25 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf25 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf25 lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf25 wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf25 br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf25 gr gr -TOLERANCE 0;
DEVICE moscap_rf25_nw var_nw_rf25_nw poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf25 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf25 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf25 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf25 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf25_nw lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf25_nw wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf25_nw br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf25_nw gr gr -TOLERANCE 0;
DEVICE moscap_rf33 var_nw_rf33 poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf33 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf33 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf33 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf33 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf33 lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf33 wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf33 br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf33 gr gr -TOLERANCE 0;
DEVICE moscap_rf33_nw var_nw_rf33_nw poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf33 > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf33 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf33 , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf33 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf33_nw lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf33_nw wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf33_nw br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf33_nw gr gr -TOLERANCE 0;
DEVICE moscap_rf_hvt var_nw3_rf_hvt poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf_hvt > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf_hvt ) / gr 
 wr = ( perimeter_coincide ( vargt_rf_hvt , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf_hvt ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf_hvt lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf_hvt wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf_hvt br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf_hvt gr gr -TOLERANCE 0;
DEVICE moscap_rf_hvt_nw var_nw3_rf_hvt_nw poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf_hvt > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf_hvt ) / gr 
 wr = ( perimeter_coincide ( vargt_rf_hvt , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf_hvt ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf_hvt_nw lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf_hvt_nw wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf_hvt_nw br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf_hvt_nw gr gr -TOLERANCE 0;
DEVICE moscap_rf_nw var_nw3_rf_nw poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf ) / gr 
 wr = ( perimeter_coincide ( vargt_rf , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf_nw lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf_nw wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf_nw br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf_nw gr gr -TOLERANCE 0;
DEVICE moscap_rf_rdk var_nw3_rdk poly ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < vargt_rf > < nthin > [ 
 property lr , wr , br , gr 
 gr = count ( nthin ) 
 br = count ( vargt_rf ) / gr 
 wr = ( perimeter_coincide ( vargt_rf , tndiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY moscap_rf_rdk lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY moscap_rf_rdk wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY moscap_rf_rdk br br -TOLERANCE 0;
LVS_CHECK_PROPERTY moscap_rf_rdk gr gr -TOLERANCE 0;
DEVICE ndio_hia_rf ndio_hia psub ( PLUS ) tndiff ( MINUS ) [ 
 property al , aw 
 A_HIA = area ( ndio_hia ) 
 P_HIA = perimeter ( ndio_hia ) 
 P_2_HIA = P_HIA * P_HIA 
 AHIA4 = A_HIA * 16 
 KKK = P_2_HIA-AHIA4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 al = ( P_HIA+SQ ) / 4 
 aw = ( P_HIA-SQ ) / 4 
 ];
LVS_CHECK_PROPERTY ndio_hia_rf aw aw -TOLERANCE 0;
LVS_CHECK_PROPERTY ndio_hia_rf al al -TOLERANCE 0;
DEVICE nmos_rf ngate_nthin d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf > [ 
 property lr , wr , nr 
 nr = count ( ngate_rf ) 
 wr = ( ( perimeter_coincide ( ngate_rf , s_tndiff ) + perimeter_coincide ( ngate_rf , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf nr nr -TOLERANCE 0;
DEVICE nmos_rf_18 ngate_nthin_18 d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_18 > [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_18 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_18 , s_tndiff ) + perimeter_coincide ( ngate_rf_18 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_18 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_18 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_18 nr nr -TOLERANCE 0;
DEVICE nmos_rf_18_6t ngate_nthin_18_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rf_18 > -model nmos_rf_18_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_18 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_18 , s_tndiff ) + perimeter_coincide ( ngate_rf_18 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_18_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_18_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_18_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_18_nodnw ngate_nthin_18nodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_18 > -model nmos_rf_18 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_18 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_18 , s_tndiff ) + perimeter_coincide ( ngate_rf_18 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_18_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_18_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_18_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_25 ngate_nthin_25 d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_25 > [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25 , s_tndiff ) + perimeter_coincide ( ngate_rf_25 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25 nr nr -TOLERANCE 0;
DEVICE nmos_rf_25_6t ngate_nthin_25_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rf_25 > -model nmos_rf_25_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25 , s_tndiff ) + perimeter_coincide ( ngate_rf_25 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_25_nodnw ngate_nthin_25nodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_25 > -model nmos_rf_25 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25 , s_tndiff ) + perimeter_coincide ( ngate_rf_25 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_25_nodnwod ngate_nthin_25nodnwod d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_25od > -model nmos_rf_33 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25od ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25od , s_tndiff ) + perimeter_coincide ( ngate_rf_25od , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25_nodnwod wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25_nodnwod lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25_nodnwod nr nr -TOLERANCE 0;
DEVICE nmos_rf_25_nodnwud ngate_nthin_25nodnwud d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_25ud > -model nmos_rf_18 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25ud , s_tndiff ) + perimeter_coincide ( ngate_rf_25ud , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25_nodnwud wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25_nodnwud lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25_nodnwud nr nr -TOLERANCE 0;
DEVICE nmos_rf_25od ngate_nthin_25od d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_25od > -model nmos_rf_33 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25od ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25od , s_tndiff ) + perimeter_coincide ( ngate_rf_25od , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25od wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25od lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25od nr nr -TOLERANCE 0;
DEVICE nmos_rf_25od33_6t ngate_nthin_25od_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rf_25od > -model nmos_rf_33_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25od ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25od , s_tndiff ) + perimeter_coincide ( ngate_rf_25od , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25od33_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25od33_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25od33_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_25ud ngate_nthin_25ud d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_25ud > -model nmos_rf_18 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25ud , s_tndiff ) + perimeter_coincide ( ngate_rf_25ud , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25ud wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25ud lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25ud nr nr -TOLERANCE 0;
DEVICE nmos_rf_25ud18_6t ngate_nthin_25ud_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rf_25ud > -model nmos_rf_18_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( ngate_rf_25ud , s_tndiff ) + perimeter_coincide ( ngate_rf_25ud , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_25ud18_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_25ud18_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_25ud18_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_33 ngate_nthin_33 d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_33 > [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_33 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_33 , s_tndiff ) + perimeter_coincide ( ngate_rf_33 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_33 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_33 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_33 nr nr -TOLERANCE 0;
DEVICE nmos_rf_33_6t ngate_nthin_33_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rf_33 > -model nmos_rf_33_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_33 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_33 , s_tndiff ) + perimeter_coincide ( ngate_rf_33 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_33_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_33_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_33_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_33_nodnw ngate_nthin_33nodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_33 > -model nmos_rf_33 [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_33 ) 
 wr = ( ( perimeter_coincide ( ngate_rf_33 , s_tndiff ) + perimeter_coincide ( ngate_rf_33 , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_33_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_33_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_33_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_6t ngate_nthin_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rf > -model nmos_rf_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rf ) 
 wr = ( ( perimeter_coincide ( ngate_rf , s_tndiff ) + perimeter_coincide ( ngate_rf , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_cas_nw nthin_cas_nw d_tndiff ( D ) gate_rbc_casb ( GB ) s_tndiff_cas ( S ) psub ( B ) gate_rbc_cast ( GT ) -model nmos_rf_cas_nw [ 
 property wr , lr , wrr , lrr , nr , nrr 
 nr = count ( gate_rbc_casb ) 
 nrr = count ( gate_rbc_cast ) 
 wr = perimeter_coincide ( gate_rbc_casb , s_tndiff_cas ) / nr 
 wrr = perimeter_coincide ( gate_rbc_cast , d_tndiff ) / nrr 
 lr = area ( gate_rbc_casb ) / ( wr*nr ) 
 lrr = area ( gate_rbc_cast ) / ( wrr*nrr ) 
 ];
LVS_CHECK_PROPERTY nmos_rf_cas_nw wr wr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cas_nw lr lr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cas_nw nr nr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cas_nw lrr lrr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cas_nw wrr wrr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cas_nw nrr nrr -tolerance 0;
DEVICE nmos_rf_cross_nw nthin_xcouple_nw d_tndiff ( DP ) d_tndiff ( DM ) s_tndiff ( S ) psub ( B ) < gate_rbc_xcoup > -model nmos_rf_cross_nw [ 
 property wr , lr , nr 
 nr = count ( gate_rbc_xcoup ) / 2 
 wr = ( ( perimeter_coincide ( gate_rbc_xcoup , d_tndiff ) +perimeter_coincide ( gate_rbc_xcoup , s_tndiff ) ) / 2 ) / ( 2*nr ) 
 lr = area ( gate_rbc_xcoup ) / ( wr*nr*2 ) 
 ];
LVS_CHECK_PROPERTY nmos_rf_cross_nw wr wr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cross_nw lr lr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_cross_nw nr nr -tolerance 0;
DEVICE nmos_rf_diff_nw nthin_diff_nw d_tndiff ( DP ) gate_rbc_diff ( GP ) s_tndiff ( S ) psub ( B ) d_tndiff ( DM ) gate_rbc_diff ( GM ) -model nmos_rf_diff_nw [ 
 property wr , lr , nr 
 nr = count ( gate_rbc_diff ) / 2 
 wr = ( ( perimeter_coincide ( gate_rbc_diff , d_tndiff ) +perimeter_coincide ( gate_rbc_diff , s_tndiff ) ) / 2 ) / ( 2*nr ) 
 lr = area ( gate_rbc_diff ) / ( wr*nr*2 ) 
 ];
LVS_CHECK_PROPERTY nmos_rf_diff_nw wr wr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_diff_nw lr lr -tolerance 0;
LVS_CHECK_PROPERTY nmos_rf_diff_nw nr nr -tolerance 0;
DEVICE nmos_rf_hvt ngate_nthin_hv d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rfhv > [ 
 property lr , wr , nr 
 nr = count ( ngate_rfhv ) 
 wr = ( ( perimeter_coincide ( ngate_rfhv , s_tndiff ) + perimeter_coincide ( ngate_rfhv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_hvt wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_hvt lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_hvt nr nr -TOLERANCE 0;
DEVICE nmos_rf_hvt_6t ngate_nthin_hv_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rfhv > -model nmos_rf_hvt_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rfhv ) 
 wr = ( ( perimeter_coincide ( ngate_rfhv , s_tndiff ) + perimeter_coincide ( ngate_rfhv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_hvt_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_hvt_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_hvt_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_hvt_nodnw ngate_nthin_hvnodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rfhv > -model nmos_rf_hvt [ 
 property lr , wr , nr 
 nr = count ( ngate_rfhv ) 
 wr = ( ( perimeter_coincide ( ngate_rfhv , s_tndiff ) + perimeter_coincide ( ngate_rfhv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_hvt_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_hvt_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_hvt_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_lvt ngate_nthin_lv d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rflv > [ 
 property lr , wr , nr 
 nr = count ( ngate_rflv ) 
 wr = ( ( perimeter_coincide ( ngate_rflv , s_tndiff ) + perimeter_coincide ( ngate_rflv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_lvt wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_lvt lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_lvt nr nr -TOLERANCE 0;
DEVICE nmos_rf_lvt_6t ngate_nthin_lv_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rflv > -model nmos_rf_lvt_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rflv ) 
 wr = ( ( perimeter_coincide ( ngate_rflv , s_tndiff ) + perimeter_coincide ( ngate_rflv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_lvt_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_lvt_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_lvt_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_lvt_nodnw ngate_nthin_lvnodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rflv > -model nmos_rf_lvt [ 
 property lr , wr , nr 
 nr = count ( ngate_rflv ) 
 wr = ( ( perimeter_coincide ( ngate_rflv , s_tndiff ) + perimeter_coincide ( ngate_rflv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_lvt_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_lvt_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_lvt_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_mlvt ngate_nthin_mlv d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rfmlv > [ 
 property lr , wr , nr 
 nr = count ( ngate_rfmlv ) 
 wr = ( ( perimeter_coincide ( ngate_rfmlv , s_tndiff ) + perimeter_coincide ( ngate_rfmlv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_mlvt wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_mlvt lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_mlvt nr nr -TOLERANCE 0;
DEVICE nmos_rf_mlvt_6t ngate_nthin_mlv_6t d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) rwel ( B ) DNW ( NG ) rfdmy56 ( PG ) < ngate_rfmlv > -model nmos_rf_mlvt_6t [ 
 property lr , wr , nr 
 nr = count ( ngate_rfmlv ) 
 wr = ( ( perimeter_coincide ( ngate_rfmlv , s_tndiff ) + perimeter_coincide ( ngate_rfmlv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_mlvt_6t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_mlvt_6t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_mlvt_6t nr nr -TOLERANCE 0;
DEVICE nmos_rf_mlvt_nodnw ngate_nthin_mlvnodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rfmlv > -model nmos_rf_mlvt [ 
 property lr , wr , nr 
 nr = count ( ngate_rfmlv ) 
 wr = ( ( perimeter_coincide ( ngate_rfmlv , s_tndiff ) + perimeter_coincide ( ngate_rfmlv , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_mlvt_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_mlvt_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_mlvt_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_na18 ngate_nthin_18na d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf_18na > [ 
 property lr , wr , nr 
 nr = count ( ngate_rf_18na ) 
 wr = ( ( perimeter_coincide ( ngate_rf_18na , s_tndiff ) + perimeter_coincide ( ngate_rf_18na , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf_18na ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_na18 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_na18 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_na18 nr nr -TOLERANCE 0;
DEVICE nmos_rf_nodnw ngate_nthin_nodnw d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf > -model nmos_rf [ 
 property lr , wr , nr 
 nr = count ( ngate_rf ) 
 wr = ( ( perimeter_coincide ( ngate_rf , s_tndiff ) + perimeter_coincide ( ngate_rf , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_nodnw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_nodnw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_nodnw nr nr -TOLERANCE 0;
DEVICE nmos_rf_rdk ngate_nthin_rdk d_tndiff ( D ) poly_rf ( G ) s_tndiff ( S ) psub ( B ) < ngate_rf > [ 
 property lr , wr , nr 
 nr = count ( ngate_rf ) 
 wr = ( ( perimeter_coincide ( ngate_rf , s_tndiff ) + perimeter_coincide ( ngate_rf , d_tndiff ) ) / 2 ) / nr 
 lr = ( area ( ngate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY nmos_rf_rdk wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY nmos_rf_rdk lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY nmos_rf_rdk nr nr -TOLERANCE 0;
DEVICE nmoscap vargt poly ( PLUS ) tndiff ( MINUS ) < nthin > -model nmoscap [ 
 property wr , lr 
 lr = perimeter_coincide ( vargt , nthin ) / 2 
 A = area ( vargt ) 
 wr = A / lr 
 ];
LVS_CHECK_PROPERTY nmoscap lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY nmoscap wr wr -TOLERANCE 0;
DEVICE nmoscap_18 vargt_18 poly ( PLUS ) tndiff ( MINUS ) < nthin > -model nmoscap_18 [ 
 property wr , lr 
 lr = perimeter_coincide ( vargt_18 , nthin ) / 2 
 A = area ( vargt_18 ) 
 wr = A / lr 
 ];
LVS_CHECK_PROPERTY nmoscap_18 lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY nmoscap_18 wr wr -TOLERANCE 0;
DEVICE nmoscap_25 vargt_25 poly ( PLUS ) tndiff ( MINUS ) < nthin > -model nmoscap_25 [ 
 property wr , lr 
 lr = perimeter_coincide ( vargt_25 , nthin ) / 2 
 A = area ( vargt_25 ) 
 wr = A / lr 
 ];
LVS_CHECK_PROPERTY nmoscap_25 lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY nmoscap_25 wr wr -TOLERANCE 0;
DEVICE nmoscap_33 vargt_33 poly ( PLUS ) tndiff ( MINUS ) < nthin > -model nmoscap_33 [ 
 property wr , lr 
 lr = perimeter_coincide ( vargt_33 , nthin ) / 2 
 A = area ( vargt_33 ) 
 wr = A / lr 
 ];
LVS_CHECK_PROPERTY nmoscap_33 lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY nmoscap_33 wr wr -TOLERANCE 0;
DEVICE nmoscap_lpg vargtlpg poly ( PLUS ) tndiff ( MINUS ) < nthin > -model nmoscap_lpg [ 
 property wr , lr 
 lr = perimeter_coincide ( vargtlpg , nthin ) / 2 
 A = area ( vargtlpg ) 
 wr = A / lr 
 ];
LVS_CHECK_PROPERTY nmoscap_lpg lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY nmoscap_lpg wr wr -TOLERANCE 0;
DEVICE pdio_hia_rf pdio_hia tpdiff ( PLUS ) nxwell ( MINUS ) RFDMY_hia ( BULK ) [ 
 property al , aw 
 A_HIA = area ( pdio_hia ) 
 P_HIA = perimeter ( pdio_hia ) 
 P_2_HIA = P_HIA * P_HIA 
 AHIA4 = A_HIA * 16 
 KKK = P_2_HIA-AHIA4 
 IF ( KKK < 0 ) { 
 KKK = 0 
 } 
 SQ = sqrt ( KKK ) 
 al = ( P_HIA+SQ ) / 4 
 aw = ( P_HIA-SQ ) / 4 
 ];
LVS_CHECK_PROPERTY pdio_hia_rf aw aw -TOLERANCE 0;
LVS_CHECK_PROPERTY pdio_hia_rf al al -TOLERANCE 0;
DEVICE pmos_rf pgate_pthin d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf ) 
 wr = ( ( perimeter_coincide ( pgate_rf , s_tpdiff ) + perimeter_coincide ( pgate_rf , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf nr nr -TOLERANCE 0;
DEVICE pmos_rf_18 pgate_pthin_18 d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_18 > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_18 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_18 , s_tpdiff ) + perimeter_coincide ( pgate_rf_18 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_18 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_18 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_18 nr nr -TOLERANCE 0;
DEVICE pmos_rf_18_5t pgate_pthin_18_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_18 > -model pmos_rf_18_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_18 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_18 , s_tpdiff ) + perimeter_coincide ( pgate_rf_18 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_18_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_18_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_18_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_18_nw pgate_pthin_18nw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_18 > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_18 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_18 , s_tpdiff ) + perimeter_coincide ( pgate_rf_18 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_18_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_18_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_18_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_18_nw_5t pgate_pthin_18nw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_18 > -model pmos_rf_18_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_18 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_18 , s_tpdiff ) + perimeter_coincide ( pgate_rf_18 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_18 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_18_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_18_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_18_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_25 pgate_pthin_25 d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_25 > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25 , s_tpdiff ) + perimeter_coincide ( pgate_rf_25 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25 nr nr -TOLERANCE 0;
DEVICE pmos_rf_25_5t pgate_pthin_25_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_25 > -model pmos_rf_25_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25 , s_tpdiff ) + perimeter_coincide ( pgate_rf_25 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_25_nw pgate_pthin_25nw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_25 > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25 , s_tpdiff ) + perimeter_coincide ( pgate_rf_25 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_25_nw_5t pgate_pthin_25nw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_25 > -model pmos_rf_25_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25 , s_tpdiff ) + perimeter_coincide ( pgate_rf_25 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_25_nwod pgate_pthin_25nwod d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_25od > -model pmos_rf_33_nw [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25od ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25od , s_tpdiff ) + perimeter_coincide ( pgate_rf_25od , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25_nwod wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25_nwod lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25_nwod nr nr -TOLERANCE 0;
DEVICE pmos_rf_25_nwud pgate_pthin_25nwud d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_25ud > -model pmos_rf_18_nw [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25ud , s_tpdiff ) + perimeter_coincide ( pgate_rf_25ud , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25_nwud wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25_nwud lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25_nwud nr nr -TOLERANCE 0;
DEVICE pmos_rf_25od pgate_pthin_25od d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_25od > -model pmos_rf_33 [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25od ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25od , s_tpdiff ) + perimeter_coincide ( pgate_rf_25od , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25od wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25od lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25od nr nr -TOLERANCE 0;
DEVICE pmos_rf_25od33_5t pgate_pthin_25od_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_25od > -model pmos_rf_33_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25od ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25od , s_tpdiff ) + perimeter_coincide ( pgate_rf_25od , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25od33_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25od33_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25od33_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_25od33_nw_5t pgate_pthin_25nwod_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_25od > -model pmos_rf_33_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25od ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25od , s_tpdiff ) + perimeter_coincide ( pgate_rf_25od , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25od ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25od33_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25od33_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25od33_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_25ud pgate_pthin_25ud d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_25ud > -model pmos_rf_18 [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25ud , s_tpdiff ) + perimeter_coincide ( pgate_rf_25ud , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25ud wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25ud lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25ud nr nr -TOLERANCE 0;
DEVICE pmos_rf_25ud18_5t pgate_pthin_25ud_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_25ud > -model pmos_rf_18_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25ud , s_tpdiff ) + perimeter_coincide ( pgate_rf_25ud , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25ud18_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25ud18_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25ud18_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_25ud18_nw_5t pgate_pthin_25nwud_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_25ud > -model pmos_rf_18_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_25ud ) 
 wr = ( ( perimeter_coincide ( pgate_rf_25ud , s_tpdiff ) + perimeter_coincide ( pgate_rf_25ud , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_25ud ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_25ud18_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_25ud18_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_25ud18_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_33 pgate_pthin_33 d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_33 > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_33 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_33 , s_tpdiff ) + perimeter_coincide ( pgate_rf_33 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_33 wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_33 lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_33 nr nr -TOLERANCE 0;
DEVICE pmos_rf_33_5t pgate_pthin_33_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_33 > -model pmos_rf_33_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_33 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_33 , s_tpdiff ) + perimeter_coincide ( pgate_rf_33 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_33_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_33_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_33_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_33_nw pgate_pthin_33nw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf_33 > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_33 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_33 , s_tpdiff ) + perimeter_coincide ( pgate_rf_33 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_33_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_33_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_33_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_33_nw_5t pgate_pthin_33nw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf_33 > -model pmos_rf_33_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf_33 ) 
 wr = ( ( perimeter_coincide ( pgate_rf_33 , s_tpdiff ) + perimeter_coincide ( pgate_rf_33 , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf_33 ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_33_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_33_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_33_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_5t pgate_pthin_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf > -model pmos_rf_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf ) 
 wr = ( ( perimeter_coincide ( pgate_rf , s_tpdiff ) + perimeter_coincide ( pgate_rf , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_hvt pgate_pthin_hv d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rfhv > [ 
 property lr , wr , nr 
 nr = count ( pgate_rfhv ) 
 wr = ( ( perimeter_coincide ( pgate_rfhv , s_tpdiff ) + perimeter_coincide ( pgate_rfhv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_hvt wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_hvt lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_hvt nr nr -TOLERANCE 0;
DEVICE pmos_rf_hvt_5t pgate_pthin_hv_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rfhv > -model pmos_rf_hvt_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rfhv ) 
 wr = ( ( perimeter_coincide ( pgate_rfhv , s_tpdiff ) + perimeter_coincide ( pgate_rfhv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_hvt_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_hvt_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_hvt_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_hvt_nw pgate_pthin_hvnw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rfhv > [ 
 property lr , wr , nr 
 nr = count ( pgate_rfhv ) 
 wr = ( ( perimeter_coincide ( pgate_rfhv , s_tpdiff ) + perimeter_coincide ( pgate_rfhv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_hvt_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_hvt_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_hvt_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_hvt_nw_5t pgate_pthin_hvnw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rfhv > -model pmos_rf_hvt_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rfhv ) 
 wr = ( ( perimeter_coincide ( pgate_rfhv , s_tpdiff ) + perimeter_coincide ( pgate_rfhv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfhv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_hvt_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_hvt_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_hvt_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_lvt pgate_pthin_lv d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rflv > [ 
 property lr , wr , nr 
 nr = count ( pgate_rflv ) 
 wr = ( ( perimeter_coincide ( pgate_rflv , s_tpdiff ) + perimeter_coincide ( pgate_rflv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_lvt wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_lvt lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_lvt nr nr -TOLERANCE 0;
DEVICE pmos_rf_lvt_5t pgate_pthin_lv_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rflv > -model pmos_rf_lvt_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rflv ) 
 wr = ( ( perimeter_coincide ( pgate_rflv , s_tpdiff ) + perimeter_coincide ( pgate_rflv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_lvt_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_lvt_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_lvt_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_lvt_nw pgate_pthin_lvnw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rflv > [ 
 property lr , wr , nr 
 nr = count ( pgate_rflv ) 
 wr = ( ( perimeter_coincide ( pgate_rflv , s_tpdiff ) + perimeter_coincide ( pgate_rflv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_lvt_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_lvt_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_lvt_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_lvt_nw_5t pgate_pthin_lvnw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rflv > -model pmos_rf_lvt_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rflv ) 
 wr = ( ( perimeter_coincide ( pgate_rflv , s_tpdiff ) + perimeter_coincide ( pgate_rflv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rflv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_lvt_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_lvt_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_lvt_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_mlvt pgate_pthin_mlv d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rfmlv > [ 
 property lr , wr , nr 
 nr = count ( pgate_rfmlv ) 
 wr = ( ( perimeter_coincide ( pgate_rfmlv , s_tpdiff ) + perimeter_coincide ( pgate_rfmlv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_mlvt wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_mlvt lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_mlvt nr nr -TOLERANCE 0;
DEVICE pmos_rf_mlvt_5t pgate_pthin_mlv_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rfmlv > -model pmos_rf_mlvt_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rfmlv ) 
 wr = ( ( perimeter_coincide ( pgate_rfmlv , s_tpdiff ) + perimeter_coincide ( pgate_rfmlv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_mlvt_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_mlvt_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_mlvt_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_mlvt_nw pgate_pthin_mlvnw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rfmlv > [ 
 property lr , wr , nr 
 nr = count ( pgate_rfmlv ) 
 wr = ( ( perimeter_coincide ( pgate_rfmlv , s_tpdiff ) + perimeter_coincide ( pgate_rfmlv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_mlvt_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_mlvt_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_mlvt_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_mlvt_nw_5t pgate_pthin_mlvnw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rfmlv > -model pmos_rf_mlvt_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rfmlv ) 
 wr = ( ( perimeter_coincide ( pgate_rfmlv , s_tpdiff ) + perimeter_coincide ( pgate_rfmlv , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rfmlv ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_mlvt_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_mlvt_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_mlvt_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_nw pgate_pthin_nw d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf ) 
 wr = ( ( perimeter_coincide ( pgate_rf , s_tpdiff ) + perimeter_coincide ( pgate_rf , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_nw wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_nw lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_nw nr nr -TOLERANCE 0;
DEVICE pmos_rf_nw_5t pgate_pthin_nw_5t d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) rfdmy56 ( PG ) < pgate_rf > -model pmos_rf_nw_5t [ 
 property lr , wr , nr 
 nr = count ( pgate_rf ) 
 wr = ( ( perimeter_coincide ( pgate_rf , s_tpdiff ) + perimeter_coincide ( pgate_rf , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_nw_5t wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_nw_5t lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_nw_5t nr nr -TOLERANCE 0;
DEVICE pmos_rf_rdk pgate_pthin_rdk d_tpdiff ( D ) poly_rf ( G ) s_tpdiff ( S ) nxwell ( B ) < pgate_rf > [ 
 property lr , wr , nr 
 nr = count ( pgate_rf ) 
 wr = ( ( perimeter_coincide ( pgate_rf , s_tpdiff ) + perimeter_coincide ( pgate_rf , d_tpdiff ) ) / 2 ) / nr 
 lr = ( area ( pgate_rf ) / wr ) / nr 
 ];
LVS_CHECK_PROPERTY pmos_rf_rdk wr wr -TOLERANCE RFMOS_Werr;
LVS_CHECK_PROPERTY pmos_rf_rdk lr lr -TOLERANCE RFMOS_Lerr;
LVS_CHECK_PROPERTY pmos_rf_rdk nr nr -TOLERANCE 0;
DEVICE pmoscap_rf pvar_rf poly ( PLUS ) tpdiff ( MINUS ) DNW ( BULK ) < vargt_rf > < pthin > [ 
 property lr , wr , br , gr 
 gr = count ( pthin ) 
 br = count ( vargt_rf ) / gr 
 wr = ( perimeter_coincide ( vargt_rf , tpdiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY pmoscap_rf lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY pmoscap_rf wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY pmoscap_rf br br -TOLERANCE 0;
LVS_CHECK_PROPERTY pmoscap_rf gr gr -TOLERANCE 0;
DEVICE pmoscap_rf18 pvar_rf18 poly ( PLUS ) tpdiff ( MINUS ) DNW ( BULK ) < vargt_rf18 > < pthin > [ 
 property lr , wr , br , gr 
 gr = count ( pthin ) 
 br = count ( vargt_rf18 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf18 , tpdiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf18 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY pmoscap_rf18 lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY pmoscap_rf18 wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY pmoscap_rf18 br br -TOLERANCE 0;
LVS_CHECK_PROPERTY pmoscap_rf18 gr gr -TOLERANCE 0;
DEVICE pmoscap_rf25 pvar_rf25 poly ( PLUS ) tpdiff ( MINUS ) DNW ( BULK ) < vargt_rf25 > < pthin > [ 
 property lr , wr , br , gr 
 gr = count ( pthin ) 
 br = count ( vargt_rf25 ) / gr 
 wr = ( perimeter_coincide ( vargt_rf25 , tpdiff ) / 2 ) / ( br*gr ) 
 lr = ( area ( vargt_rf25 ) / wr ) / ( br*gr ) 
 ];
LVS_CHECK_PROPERTY pmoscap_rf25 lr lr -TOLERANCE MOSCAP_Lerr;
LVS_CHECK_PROPERTY pmoscap_rf25 wr wr -TOLERANCE MOSCAP_Werr;
LVS_CHECK_PROPERTY pmoscap_rf25 br br -TOLERANCE 0;
LVS_CHECK_PROPERTY pmoscap_rf25 gr gr -TOLERANCE 0;
DEVICE probe1 PROBEM1 metal1 ( TOP ) PROBEM1_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM1 ) 
 pj = perimeter ( PROBEM1 ) 
 ];
LVS_CHECK_PROPERTY probe1 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe1 pj pj -TOLERANCE PROBE_Perr;
DEVICE probe2 PROBEM2 metal2 ( TOP ) PROBEM2_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM2 ) 
 pj = perimeter ( PROBEM2 ) 
 ];
LVS_CHECK_PROPERTY probe2 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe2 pj pj -TOLERANCE PROBE_Perr;
DEVICE probe3 PROBEM3 metal3 ( TOP ) PROBEM3_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM3 ) 
 pj = perimeter ( PROBEM3 ) 
 ];
LVS_CHECK_PROPERTY probe3 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe3 pj pj -TOLERANCE PROBE_Perr;
DEVICE probe4 PROBEM4 metal4 ( TOP ) PROBEM4_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM4 ) 
 pj = perimeter ( PROBEM4 ) 
 ];
LVS_CHECK_PROPERTY probe4 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe4 pj pj -TOLERANCE PROBE_Perr;
DEVICE probe5 PROBEM5 metal5 ( TOP ) PROBEM5_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM5 ) 
 pj = perimeter ( PROBEM5 ) 
 ];
LVS_CHECK_PROPERTY probe5 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe5 pj pj -TOLERANCE PROBE_Perr;
DEVICE probe6 PROBEM6 metal6 ( TOP ) PROBEM6_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM6 ) 
 pj = perimeter ( PROBEM6 ) 
 ];
LVS_CHECK_PROPERTY probe6 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe6 pj pj -TOLERANCE PROBE_Perr;
DEVICE probe7 PROBEM7 metal7 ( TOP ) PROBEM7_T ( BULK ) [ 
 property a , pj 
 a = area ( PROBEM7 ) 
 pj = perimeter ( PROBEM7 ) 
 ];
LVS_CHECK_PROPERTY probe7 a a -TOLERANCE PROBE_Aerr;
LVS_CHECK_PROPERTY probe7 pj pj -TOLERANCE PROBE_Perr;
DEVICE rfesd_rf1 rfesd_r1 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf1 [ 
 property lay 
 a1 = area ( rfesd_r1 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf1 lay lay -tolerance 0;
DEVICE rfesd_rf2 rfesd_r2 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf2 [ 
 property lay 
 a1 = area ( rfesd_r2 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf2 lay lay -tolerance 0;
DEVICE rfesd_rf3 rfesd_r3 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf3 [ 
 property lay 
 a1 = area ( rfesd_r3 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf3 lay lay -tolerance 0;
DEVICE rfesd_rf4 rfesd_r4 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf4 [ 
 property lay 
 a1 = area ( rfesd_r4 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf4 lay lay -tolerance 0;
DEVICE rfesd_rf5 rfesd_r5 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf5 [ 
 property lay 
 a1 = area ( rfesd_r5 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf5 lay lay -tolerance 0;
DEVICE rfesd_rf6 rfesd_r6 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf6 [ 
 property lay 
 a1 = area ( rfesd_r6 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf6 lay lay -tolerance 0;
DEVICE rfesd_rf7 rfesd_r7 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf7 [ 
 property lay 
 a1 = area ( rfesd_r7 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf7 lay lay -tolerance 0;
DEVICE rfesd_rf8 rfesd_r8 metal10 ( APAD ) cpad ( CPAD ) nxwell ( DCPAD ) psub ( GNODE ) -model rfesd_rf8 [ 
 property lay 
 a1 = area ( rfesd_r8 ) 
 lay = 9 * a1 / a1 
 ];
LVS_CHECK_PROPERTY rfesd_rf8 lay lay -tolerance 0;
DEVICE rm1 mt1res metal1 ( PLUS ) metal1 ( MINUS ) -model rm1w [ 
 property w , l 
 w = perimeter_coincide ( mt1res , metal1 ) / 2 
 l = area ( mt1res ) / w 
 ];
LVS_CHECK_PROPERTY rm1 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm1 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm1 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm1 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm10 mtAPres metal10 ( PLUS ) metal10 ( MINUS ) -model rm10 [ 
 property w , l 
 w = perimeter_coincide ( mtAPres , metal10 ) / 2 
 l = area ( mtAPres ) / w 
 ];
LVS_CHECK_PROPERTY rm10 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm10 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm10 -PARALLEL YES [ TOLERANCE l 0 
 EFFECTIVE w , l 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm10 -SERIES PLUS MINUS YES [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm2 mt2res metal2 ( PLUS ) metal2 ( MINUS ) -model rmxw [ 
 property w , l 
 w = perimeter_coincide ( mt2res , metal2 ) / 2 
 l = area ( mt2res ) / w 
 ];
LVS_CHECK_PROPERTY rm2 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm2 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm2 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm2 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm3 mt3res metal3 ( PLUS ) metal3 ( MINUS ) -model rmxw [ 
 property w , l 
 w = perimeter_coincide ( mt3res , metal3 ) / 2 
 l = area ( mt3res ) / w 
 ];
LVS_CHECK_PROPERTY rm3 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm3 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm3 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm3 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm4 mt4res metal4 ( PLUS ) metal4 ( MINUS ) -model rmxw [ 
 property w , l 
 w = perimeter_coincide ( mt4res , metal4 ) / 2 
 l = area ( mt4res ) / w 
 ];
LVS_CHECK_PROPERTY rm4 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm4 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm4 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm4 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm5 mt5res metal5 ( PLUS ) metal5 ( MINUS ) -model rmxw [ 
 property w , l 
 w = perimeter_coincide ( mt5res , metal5 ) / 2 
 l = area ( mt5res ) / w 
 ];
LVS_CHECK_PROPERTY rm5 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm5 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm5 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm5 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm6 mt6res metal6 ( PLUS ) metal6 ( MINUS ) -model rmxw [ 
 property w , l 
 w = perimeter_coincide ( mt6res , metal6 ) / 2 
 l = area ( mt6res ) / w 
 ];
LVS_CHECK_PROPERTY rm6 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm6 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm6 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm6 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm7 mt7res metal7 ( PLUS ) metal7 ( MINUS ) -model rmxw [ 
 property w , l 
 w = perimeter_coincide ( mt7res , metal7 ) / 2 
 l = area ( mt7res ) / w 
 ];
LVS_CHECK_PROPERTY rm7 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm7 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm7 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm7 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm8 mt8res metal8 ( PLUS ) metal8 ( MINUS ) -model rmzw [ 
 property w , l , ee 
 w = perimeter_coincide ( mt8res , metal8 ) / 2 
 l = area ( mt8res ) / w 
 ];
LVS_CHECK_PROPERTY rm8 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm8 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm8 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm8 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rm9 mt9res metal9 ( PLUS ) metal9 ( MINUS ) -model rmt [ 
 property w , l , gg 
 w = perimeter_coincide ( mt9res , metal9 ) / 2 
 l = area ( mt9res ) / w 
 ];
LVS_CHECK_PROPERTY rm9 w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rm9 l l -TOLERANCE RES_Lerr;
LVS_REDUCE_DEVICE rm9 -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rm9 -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnodl rnodl_r tndiff ( PLUS ) tndiff ( MINUS ) -model rnodl [ 
 property w , l 
 w = perimeter_coincide ( rnodl_r , tndiff ) / 2 
 l = area ( rnodl_r ) / w 
 ];
LVS_CHECK_PROPERTY rnodl l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnodl w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnodl -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnodl -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnodl_m rnodl_mr tndiff ( PLUS ) tndiff ( MINUS ) psub ( BULK ) -model rnodl_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rnodl_mr , tndiff ) / 2 
 lr = area ( rnodl_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rnodl_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnodl_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnodl_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnodl_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnods rnods_r tndiff ( PLUS ) tndiff ( MINUS ) -model rnods [ 
 property w , l 
 w = perimeter_coincide ( rnods_r , tndiff ) / 2 
 l = area ( rnods_r ) / w 
 ];
LVS_CHECK_PROPERTY rnods l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnods w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnods -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnods -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnods_m rnods_mr tndiff ( PLUS ) tndiff ( MINUS ) psub ( BULK ) -model rnods_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rnods_mr , tndiff ) / 2 
 lr = area ( rnods_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rnods_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnods_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnods_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnods_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnodwo rnodwo_r tndiff ( PLUS ) tndiff ( MINUS ) -model rnodwo [ 
 property w , l 
 w = perimeter_coincide ( rnodwo_r , tndiff ) / 2 
 l = area ( rnodwo_r ) / w 
 ];
LVS_CHECK_PROPERTY rnodwo l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnodwo w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnodwo -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnodwo -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnodwo_m rnodwo_mr tndiff ( PLUS ) tndiff ( MINUS ) psub ( BULK ) -model rnodwo_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rnodwo_mr , tndiff ) / 2 
 lr = area ( rnodwo_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rnodwo_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnodwo_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnodwo_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnodwo_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnpolyl rnpolyl_r poly ( PLUS ) poly ( MINUS ) -model rnpolyl [ 
 property w , l 
 w = perimeter_coincide ( rnpolyl_r , poly ) / 2 
 l = area ( rnpolyl_r ) / w 
 ];
LVS_CHECK_PROPERTY rnpolyl l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnpolyl w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnpolyl -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnpolyl -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnpolyl_m rnpolyl_d poly ( PLUS ) poly ( MINUS ) poly_term ( BULK ) -model rnpolyl_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rnpolyl_d , poly ) / 2 
 lr = area ( rnpolyl_d ) / wr 
 ];
LVS_CHECK_PROPERTY rnpolyl_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnpolyl_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnpolyl_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnpolyl_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnpolys rnpolys_r poly ( PLUS ) poly ( MINUS ) -model rnpolys [ 
 property w , l 
 w = perimeter_coincide ( rnpolys_r , poly ) / 2 
 l = area ( rnpolys_r ) / w 
 ];
LVS_CHECK_PROPERTY rnpolys l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnpolys w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnpolys -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnpolys -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnpolys_m rnpolys_d poly ( PLUS ) poly ( MINUS ) poly_term ( BULK ) -model rnpolys_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rnpolys_d , poly ) / 2 
 lr = area ( rnpolys_d ) / wr 
 ];
LVS_CHECK_PROPERTY rnpolys_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnpolys_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnpolys_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnpolys_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnpolywo rnpolywo_r poly ( PLUS ) poly ( MINUS ) -model rnpolywo [ 
 property w , l 
 w = perimeter_coincide ( rnpolywo_r , poly ) / 2 
 l = area ( rnpolywo_r ) / w 
 ];
LVS_CHECK_PROPERTY rnpolywo l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnpolywo w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnpolywo -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnpolywo -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnpolywo_m rnpolywo_d poly ( PLUS ) poly ( MINUS ) poly_term ( BULK ) -model rnpolywo_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rnpolywo_d , poly ) / 2 
 lr = area ( rnpolywo_d ) / wr 
 ];
LVS_CHECK_PROPERTY rnpolywo_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnpolywo_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnpolywo_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnpolywo_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnwod nwod_r nxwell ( PLUS ) nxwell ( MINUS ) -model rnwod [ 
 property w , l 
 w = perimeter_coincide ( nwod_r , nxwell ) / 2 
 l = area ( nwod_r ) / w 
 ];
LVS_CHECK_PROPERTY rnwod l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnwod w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnwod -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnwod -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnwod_m nwod_mr nxwell ( PLUS ) nxwell ( MINUS ) psub ( BULK ) -model rnwod_m [ 
 property wr , lr 
 wr = perimeter_coincide ( nwod_mr , nxwell ) / 2 
 lr = area ( nwod_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rnwod_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnwod_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnwod_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnwod_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rnwsti nwsti_r nxwell ( PLUS ) nxwell ( MINUS ) -model rnwsti [ 
 property w , l 
 w = perimeter_coincide ( nwsti_r , nxwell ) / 2 
 l = area ( nwsti_r ) / w 
 ];
LVS_CHECK_PROPERTY rnwsti l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rnwsti w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rnwsti -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rnwsti -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rnwsti_m nwsti_mr nxwell ( PLUS ) nxwell ( MINUS ) psub ( BULK ) -model rnwsti_m [ 
 property wr , lr 
 wr = perimeter_coincide ( nwsti_mr , nxwell ) / 2 
 lr = area ( nwsti_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rnwsti_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rnwsti_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rnwsti_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rnwsti_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rpodl rpodl_r tpdiff ( PLUS ) tpdiff ( MINUS ) -model rpodl [ 
 property w , l 
 w = perimeter_coincide ( rpodl_r , tpdiff ) / 2 
 l = area ( rpodl_r ) / w 
 ];
LVS_CHECK_PROPERTY rpodl l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rpodl w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rpodl -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rpodl -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rpodl_m rpodl_mr tpdiff ( PLUS ) tpdiff ( MINUS ) nxwell ( BULK ) -model rpodl_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rpodl_mr , tpdiff ) / 2 
 lr = area ( rpodl_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rpodl_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rpodl_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rpodl_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rpodl_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rpods rpods_r tpdiff ( PLUS ) tpdiff ( MINUS ) -model rpods [ 
 property w , l 
 w = perimeter_coincide ( rpods_r , tpdiff ) / 2 
 l = area ( rpods_r ) / w 
 ];
LVS_CHECK_PROPERTY rpods l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rpods w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rpods -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rpods -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rpods_m rpods_mr tpdiff ( PLUS ) tpdiff ( MINUS ) nxwell ( BULK ) -model rpods_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rpods_mr , tpdiff ) / 2 
 lr = area ( rpods_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rpods_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rpods_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rpods_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rpods_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rpodwo rpodwo_r tpdiff ( PLUS ) tpdiff ( MINUS ) -model rpodwo [ 
 property w , l 
 w = perimeter_coincide ( rpodwo_r , tpdiff ) / 2 
 l = area ( rpodwo_r ) / w 
 ];
LVS_CHECK_PROPERTY rpodwo l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rpodwo w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rpodwo -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rpodwo -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rpodwo_m rpodwo_mr tpdiff ( PLUS ) tpdiff ( MINUS ) nxwell ( BULK ) -model rpodwo_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rpodwo_mr , tpdiff ) / 2 
 lr = area ( rpodwo_mr ) / wr 
 ];
LVS_CHECK_PROPERTY rpodwo_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rpodwo_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rpodwo_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rpodwo_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rppolyl rppolyl_r poly ( PLUS ) poly ( MINUS ) -model rppolyl [ 
 property w , l 
 w = perimeter_coincide ( rppolyl_r , poly ) / 2 
 l = area ( rppolyl_r ) / w 
 ];
LVS_CHECK_PROPERTY rppolyl l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rppolyl w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rppolyl -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rppolyl -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rppolyl_m rppolyl_d poly ( PLUS ) poly ( MINUS ) poly_term ( BULK ) -model rppolyl_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rppolyl_d , poly ) / 2 
 lr = area ( rppolyl_d ) / wr 
 ];
LVS_CHECK_PROPERTY rppolyl_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rppolyl_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rppolyl_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rppolyl_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rppolyl_rf rppolyl_rf poly ( PLUS ) poly ( MINUS ) nxwell ( BULK ) [ 
 property l , w 
 w = perimeter_coincide ( rppolyl_rf , poly ) / 2 
 l = area ( rppolyl_rf ) / w 
 ];
LVS_CHECK_PROPERTY rppolyl_rf w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rppolyl_rf l l -TOLERANCE RES_Lerr;
DEVICE rppolyl_rf_rdk rppolyl_rf_rdk poly ( PLUS ) poly ( MINUS ) nxwell ( BULK ) [ 
 property l , w 
 w = perimeter_coincide ( rppolyl_rf_rdk , poly ) / 2 
 l = area ( rppolyl_rf_rdk ) / w 
 ];
LVS_CHECK_PROPERTY rppolyl_rf_rdk w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rppolyl_rf_rdk l l -TOLERANCE RES_Lerr;
DEVICE rppolys rppolys_r poly ( PLUS ) poly ( MINUS ) -model rppolys [ 
 property w , l 
 w = perimeter_coincide ( rppolys_r , poly ) / 2 
 l = area ( rppolys_r ) / w 
 ];
LVS_CHECK_PROPERTY rppolys l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rppolys w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rppolys -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rppolys -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rppolys_m rppolys_d poly ( PLUS ) poly ( MINUS ) poly_term ( BULK ) -model rppolys_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rppolys_d , poly ) / 2 
 lr = area ( rppolys_d ) / wr 
 ];
LVS_CHECK_PROPERTY rppolys_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rppolys_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rppolys_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rppolys_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rppolys_rf rppolys_rf poly ( PLUS ) poly ( MINUS ) nxwell ( BULK ) [ 
 property l , w 
 w = perimeter_coincide ( rppolys_rf , poly ) / 2 
 l = area ( rppolys_rf ) / w 
 ];
LVS_CHECK_PROPERTY rppolys_rf w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rppolys_rf l l -TOLERANCE RES_Lerr;
DEVICE rppolys_rf_rdk rppolys_rf_rdk poly ( PLUS ) poly ( MINUS ) nxwell ( BULK ) [ 
 property l , w 
 w = perimeter_coincide ( rppolys_rf_rdk , poly ) / 2 
 l = area ( rppolys_rf_rdk ) / w 
 ];
LVS_CHECK_PROPERTY rppolys_rf_rdk w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rppolys_rf_rdk l l -TOLERANCE RES_Lerr;
DEVICE rppolywo rppolywo_r poly ( PLUS ) poly ( MINUS ) -model rppolywo [ 
 property w , l 
 w = perimeter_coincide ( rppolywo_r , poly ) / 2 
 l = area ( rppolywo_r ) / w 
 ];
LVS_CHECK_PROPERTY rppolywo l l -TOLERANCE 0;
LVS_CHECK_PROPERTY rppolywo w w -TOLERANCE 0;
LVS_REDUCE_DEVICE rppolywo -parallel yes [ TOLERANCE l 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
LVS_REDUCE_DEVICE rppolywo -series PLUS MINUS yes [ TOLERANCE w 0 
 effective w , l 
 w = sum ( w ) / count ( ) 
 l = sum ( l ) 
 ];
DEVICE rppolywo_m rppolywo_d poly ( PLUS ) poly ( MINUS ) poly_term ( BULK ) -model rppolywo_m [ 
 property wr , lr 
 wr = perimeter_coincide ( rppolywo_d , poly ) / 2 
 lr = area ( rppolywo_d ) / wr 
 ];
LVS_CHECK_PROPERTY rppolywo_m lr lr -TOLERANCE 0;
LVS_CHECK_PROPERTY rppolywo_m wr wr -TOLERANCE 0;
LVS_REDUCE_DEVICE rppolywo_m -parallel yes [ TOLERANCE lr 0 
 effective lr , wr 
 lr = sum ( lr ) / count ( ) 
 wr = sum ( wr ) 
 ];
LVS_REDUCE_DEVICE rppolywo_m -series PLUS MINUS yes [ TOLERANCE wr 0 
 effective wr , lr 
 wr = sum ( wr ) / count ( ) 
 lr = sum ( lr ) 
 ];
DEVICE rppolywo_rf rppolywo_rf poly ( PLUS ) poly ( MINUS ) nxwell ( BULK ) [ 
 property l , w 
 w = perimeter_coincide ( rppolywo_rf , poly ) / 2 
 l = area ( rppolywo_rf ) / w 
 ];
LVS_CHECK_PROPERTY rppolywo_rf w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rppolywo_rf l l -TOLERANCE RES_Lerr;
DEVICE rppolywo_rf_rdk rppolywo_rf_rdk poly ( PLUS ) poly ( MINUS ) nxwell ( BULK ) [ 
 property l , w 
 w = perimeter_coincide ( rppolywo_rf_rdk , poly ) / 2 
 l = area ( rppolywo_rf_rdk ) / w 
 ];
LVS_CHECK_PROPERTY rppolywo_rf_rdk w w -TOLERANCE RES_Werr;
LVS_CHECK_PROPERTY rppolywo_rf_rdk l l -TOLERANCE RES_Lerr;
EXTE -lt 0.325 -output region -metric opposite schottky_n schottky_p -nopoint -metric opposite -output region sbd_w;
DEVICE sbd_rf sbd_rfdnw schottky_p ( PLUS ) schottky_n ( MINUS ) psub ( BULK ) < sbd_w > -model sbd_rf [ 
 property w , l , nf 
 nf = count ( schottky_p ) 
 w = ( perimeter_coincide ( schottky_p , sbd_w ) / nf ) / 2 
 l = ( area ( schottky_p ) / w ) / nf 
 ];
LVS_CHECK_PROPERTY sbd_rf w w -TOLERANCE 0;
LVS_CHECK_PROPERTY sbd_rf l l -TOLERANCE 0;
LVS_CHECK_PROPERTY sbd_rf nf nf -TOLERANCE 0;
DEVICE sbd_rf_nw sbd_rfnw schottky_p ( PLUS ) schottky_n ( MINUS ) psub ( BULK ) < sbd_w > -model sbd_rf_nw [ 
 property w , l , nf 
 nf = count ( schottky_p ) 
 w = ( perimeter_coincide ( schottky_p , sbd_w ) / nf ) / 2 
 l = ( area ( schottky_p ) / w ) / nf 
 ];
LVS_CHECK_PROPERTY sbd_rf_nw w w -TOLERANCE 0;
LVS_CHECK_PROPERTY sbd_rf_nw l l -TOLERANCE 0;
LVS_CHECK_PROPERTY sbd_rf_nw nf nf -TOLERANCE 0;
DEVICE sline_gscpw_mu sline_cpw_mu_r sline_m9p ( PLUS ) sline_m9m ( MINUS ) sline_m8 ( BULK ) < INDDMY > < sline_m9a > -model sline_gscpw_mu ( PLUS MINUS ) [ 
 property w , l , lay , s 
 w = perimeter_coincide ( sline_m9p , INDDMY ) 
 lay = 9 
 l = area ( sline_m9a ) / w 
 s = ( area ( INDDMY ) / l-w ) / 2 
 ];
LVS_CHECK_PROPERTY sline_gscpw_mu l l -tolerance 0;
LVS_CHECK_PROPERTY sline_gscpw_mu w w -tolerance 0;
LVS_CHECK_PROPERTY sline_gscpw_mu s s -tolerance 0;
LVS_CHECK_PROPERTY sline_gscpw_mu lay lay -tolerance 0;
DEVICE sline_ms_mu sline_ms_mu_r sline_m9p ( PLUS ) sline_m9m ( MINUS ) metal1 ( BULK ) < INDDMY > < sline_m9a > -model sline_ms_mu ( PLUS MINUS ) [ 
 property w , l , lay 
 w = perimeter_coincide ( sline_m9p , INDDMY ) 
 lay = 9 
 l = area ( sline_m9a ) / w 
 s = ( area ( INDDMY ) / l-w ) / 2 
 ];
LVS_CHECK_PROPERTY sline_ms_mu l l -tolerance 0;
LVS_CHECK_PROPERTY sline_ms_mu w w -tolerance 0;
LVS_CHECK_PROPERTY sline_ms_mu lay lay -tolerance 0;
INTE std_ind std_ind -lt 31 -metric opposite -output region -exclude_shielded -parallel only std_w_tmp_tmp1;
RECT_CHK std_w_tmp_tmp1 -orthogonal_only std_w_tmp;
SELECT -interact -not std_w_tmp indm9 std_w;
DEVICE spiral_std_mu_z std_ind indm9p ( PLUS ) indm9m ( MINUS ) psub ( BULK ) < IND_RAD > < IND_NR > < IND_GDIS > < IND_S > < std_w > -model spiral_std_mu_z [ 
 PROPERTY w , spacing , nr , rad , lay , gdis 
 lay = 9 
 nnr = ( perimeter ( IND_NR ) - 5e-9*2 ) / 2 
 nr = ( nnr / 1e-08 ) * 0.25 
 rad = ( perimeter ( IND_RAD ) - 5e-7*2 ) / 2 
 gdis = ( perimeter ( IND_GDIS ) - 5e-7*2 ) / 2 
 nw = count ( std_w ) 
 w = ( perimeter_in ( std_w , std_ind ) / ( nw*2 ) ) 
 spacing = ( perimeter ( IND_S ) - 5e-7*2 ) / 2 
 ];
LVS_CHECK_PROPERTY spiral_std_mu_z lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_std_mu_z w w -TOLERANCE SPIRAL_Werr;
LVS_CHECK_PROPERTY spiral_std_mu_z spacing spacing -TOLERANCE SPIRAL_Serr;
LVS_CHECK_PROPERTY spiral_std_mu_z nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_std_mu_z rad rad -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_std_mu_z gdis gdis -TOLERANCE 0;

RULE STD_IND_CHECK {
    CAPTION VIA8 is needed for connection of M9 and M8 in Std. inductor.;
    SELECT -interact std_ind1 IND_RAD -not A;
    SELECT -interact std_ind2 IND_RAD A1;
    AND A A1 B;
    SELECT -interact B VIA8 -not;
    SELECT -interact std_ind_m IND_RAD C;
    SELECT -interact C VIA8 -not;
}

RULE STD_IND_CHECK.1 {
    CAPTION VIA7 INTERACT std_mu_z inductor is forbidden.;
    AND std_ind VIA7;
}
INTE std_ind_rdk std_ind_rdk -lt 31 -metric opposite -output region -exclude_shielded -parallel only std_w_rdk_tmp_tmp1;
RECT_CHK std_w_rdk_tmp_tmp1 -orthogonal_only std_w_rdk_tmp;
SELECT -interact -not std_w_rdk_tmp indm9 std_w_rdk;
DEVICE spiral_std_mu_z_rdk std_ind_rdk indm9p ( PLUS ) indm9m ( MINUS ) psub ( BULK ) < IND_RAD > < IND_NR > < IND_GDIS > < IND_S > < std_w_rdk > -model spiral_std_mu_z_rdk [ 
 PROPERTY w , spacing , nr , rad , lay , gdis 
 lay = 9 
 nnr = ( perimeter ( IND_NR ) - 5e-9*2 ) / 2 
 nr = ( nnr / 1e-08 ) * 0.25 
 rad = ( perimeter ( IND_RAD ) - 5e-7*2 ) / 2 
 gdis = ( perimeter ( IND_GDIS ) - 5e-7*2 ) / 2 
 nw = count ( std_w_rdk ) 
 w = ( perimeter_in ( std_w_rdk , std_ind_rdk ) ) / ( nw*2 ) 
 spacing = ( perimeter ( IND_S ) - 5e-7*2 ) / 2 
 ];
LVS_CHECK_PROPERTY spiral_std_mu_z_rdk lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_std_mu_z_rdk w w -TOLERANCE SPIRAL_Werr;
LVS_CHECK_PROPERTY spiral_std_mu_z_rdk spacing spacing -TOLERANCE SPIRAL_Serr;
LVS_CHECK_PROPERTY spiral_std_mu_z_rdk nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_std_mu_z_rdk rad rad -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_std_mu_z_rdk gdis gdis -TOLERANCE 0;
INTE ct_inda ct_inda -lt 31 -metric opposite -output region -exclude_shielded -parallel only ct_w_tmp_tmp1;
RECT_CHK ct_w_tmp_tmp1 -orthogonal_only ct_w_tmp;
SELECT -interact -not ct_w_tmp indm9 ct_w_tmp1;
SELECT -interact -not ct_w_tmp1 ct_ind2 ct_w;
DEVICE spiral_sym_ct_mu_z ct_ind indm9p ( PLUS ) indm9m ( MINUS ) psub ( BULK ) indm9c ( CTAP ) < IND_RAD > < IND_NR > < IND_GDIS > < IND_S > < ct_w > < ct_inda > -model spiral_sym_ct_mu_z [ 
 PROPERTY w , spacing , nr , rad , lay , gdis 
 lay = 9 
 nnr = ( perimeter ( IND_NR ) - 5e-9*2 ) / 2 
 nr = ( nnr / 1e-08 ) * 0.25 
 rad = ( perimeter ( IND_RAD ) - 5e-7*2 ) / 2 
 gdis = ( perimeter ( IND_GDIS ) - 5e-7*2 ) / 2 
 nw = count ( ct_w ) 
 w = ( perimeter_in ( ct_w , ct_inda ) / ( nw*2 ) ) 
 spacing = ( perimeter ( IND_S ) - 5e-7*2 ) / 2 
 ];
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z w w -TOLERANCE SPIRAL_Werr;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z spacing spacing -TOLERANCE SPIRAL_Serr;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z rad rad -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z gdis gdis -TOLERANCE 0;

RULE CT_IND_CHECK {
    CAPTION VIA8 is needed for connection of M9 and M8 in Cnt. inductor.;
    SELECT -interact ct_ind1 IND_NR A1;
    SELECT -interact ct_ind2 A1 A2;
    AND A2 ct_ind1 A3;
    RECT_CHK A3 -orthogonal_only A;
    SELECT -interact A VIA8 -not AA;
    SELECT -interact AA ptap -not;
}

RULE CT_IND_CHECK.1 {
    CAPTION VIA6 INTERACT sym_ct_mu_z inductor is forbidden.;
    AND ct_ind VIA6;
}
AND ct_w RDKDMY ct_w_rdk;
DEVICE spiral_sym_ct_mu_z_rdk ct_ind_rdk indm9p ( PLUS ) indm9m ( MINUS ) psub ( BULK ) indm9c ( CTAP ) < IND_RAD > < IND_NR > < IND_GDIS > < IND_S > < ct_w_rdk > < ct_inda > -model spiral_sym_ct_mu_z_rdk [ 
 PROPERTY w , spacing , nr , rad , lay , gdis 
 lay = 9 
 nnr = ( perimeter ( IND_NR ) - 5e-9*2 ) / 2 
 nr = ( nnr / 1e-08 ) * 0.25 
 rad = ( perimeter ( IND_RAD ) - 5e-7*2 ) / 2 
 gdis = ( perimeter ( IND_GDIS ) - 5e-7*2 ) / 2 
 nw = count ( ct_w_rdk ) 
 w = ( perimeter_in ( ct_w_rdk , ct_inda ) ) / ( nw*2 ) 
 spacing = ( perimeter ( IND_S ) - 5e-7*2 ) / 2 
 ];
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z_rdk lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z_rdk w w -TOLERANCE SPIRAL_Werr;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z_rdk spacing spacing -TOLERANCE SPIRAL_Serr;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z_rdk nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z_rdk rad rad -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_ct_mu_z_rdk gdis gdis -TOLERANCE 0;
INTE sym_ind sym_ind -lt 31 -metric opposite -output region -exclude_shielded -parallel only sym_w_tmp_tmp1;
RECT_CHK sym_w_tmp_tmp1 -orthogonal_only sym_w_tmp;
SELECT -interact -not sym_w_tmp indm9 sym_w_tmp1;
SELECT -interact -not sym_w_tmp1 sym_ind2 sym_w;
DEVICE spiral_sym_mu_z sym_ind indm9p ( PLUS ) indm9m ( MINUS ) psub ( BULK ) < IND_RAD > < IND_NR > < IND_GDIS > < IND_S > < sym_w > -model spiral_sym_mu_z [ 
 PROPERTY w , spacing , nr , rad , lay , gdis 
 lay = 9 
 nnr = ( perimeter ( IND_NR ) - 5e-9*2 ) / 2 
 nr = ( nnr / 1e-08 ) * 0.25 
 rad = ( perimeter ( IND_RAD ) - 5e-7*2 ) / 2 
 gdis = ( perimeter ( IND_GDIS ) - 5e-7*2 ) / 2 
 nw = count ( sym_w ) 
 w = ( perimeter_in ( sym_w , sym_ind ) / ( nw*2 ) ) 
 spacing = ( perimeter ( IND_S ) - 5e-7*2 ) / 2 
 ];
LVS_CHECK_PROPERTY spiral_sym_mu_z lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_mu_z w w -TOLERANCE SPIRAL_Werr;
LVS_CHECK_PROPERTY spiral_sym_mu_z spacing spacing -TOLERANCE SPIRAL_Serr;
LVS_CHECK_PROPERTY spiral_sym_mu_z nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_mu_z rad rad -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_mu_z gdis gdis -TOLERANCE 0;

RULE SYM_IND_CHECK {
    CAPTION VIA8 is needed for connection of M9 and M8 in Sym. inductor.;
    SELECT -interact sym_ind1 IND_NR A1;
    SELECT -interact sym_ind2 A1 A2;
    AND A2 sym_ind1 A3;
    RECT_CHK A3 -orthogonal_only A;
    SELECT -interact A VIA8 -not AA;
    SELECT -interact AA ptap -not;
}

RULE SYM_IND_CHECK.1 {
    CAPTION VIA7 INTERACT sym_mu_z inductor is forbidden.;
    AND sym_ind VIA7;
}
INTE sym_ind_rdk sym_ind_rdk -lt 31 -metric opposite -output region -exclude_shielded -parallel only sym_w_rdk_tmp_tmp1;
RECT_CHK sym_w_rdk_tmp_tmp1 -orthogonal_only sym_w_rdk_tmp;
SELECT -interact -not sym_w_rdk_tmp indm9 sym_w_rdk_tmp1;
SELECT -interact -not sym_w_rdk_tmp1 sym_ind2 sym_w_rdk;
DEVICE spiral_sym_mu_z_rdk sym_ind_rdk indm9p ( PLUS ) indm9m ( MINUS ) psub ( BULK ) < IND_RAD > < IND_NR > < IND_GDIS > < IND_S > < sym_w_rdk > -model spiral_sym_mu_z_rdk [ 
 PROPERTY w , spacing , nr , rad , lay , gdis 
 lay = 9 
 nnr = ( perimeter ( IND_NR ) - 5e-9*2 ) / 2 
 nr = ( nnr / 1e-08 ) * 0.25 
 rad = ( perimeter ( IND_RAD ) - 5e-7*2 ) / 2 
 gdis = ( perimeter ( IND_GDIS ) - 5e-7*2 ) / 2 
 nw = count ( sym_w_rdk ) 
 w = ( perimeter_in ( sym_w_rdk , sym_ind_rdk ) ) / ( nw*2 ) 
 spacing = ( perimeter ( IND_S ) - 5e-7*2 ) / 2 
 ];
LVS_CHECK_PROPERTY spiral_sym_mu_z_rdk lay lay -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_mu_z_rdk w w -TOLERANCE SPIRAL_Werr;
LVS_CHECK_PROPERTY spiral_sym_mu_z_rdk spacing spacing -TOLERANCE SPIRAL_Serr;
LVS_CHECK_PROPERTY spiral_sym_mu_z_rdk nr nr -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_mu_z_rdk rad rad -TOLERANCE 0;
LVS_CHECK_PROPERTY spiral_sym_mu_z_rdk gdis gdis -TOLERANCE 0;
EXTE -lt 0.29 -output region -metric opposite tpdiff_jvar tndiff_jvar -nopoint -metric opposite -output region w_fac;
DEVICE xjvar jvar_rf tpdiff ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < w_fac > < jvar3_rf > [ 
 property l , w , nr 
 nr = count ( jvar3_rf ) 
 w = ( perimeter_coincide ( jvar3_rf , w_fac ) / nr ) / 2 
 l = ( area ( jvar3_rf ) / w ) / nr 
 ];
LVS_CHECK_PROPERTY xjvar w w -TOLERANCE VAR_Werr;
LVS_CHECK_PROPERTY xjvar l l -TOLERANCE VAR_Lerr;
LVS_CHECK_PROPERTY xjvar nr nr -TOLERANCE 0;
EXTE -lt 0.29 -output region -metric opposite tpdiff_jvar tndiff_jvar -nopoint -metric opposite -output region w_fac1;
DEVICE xjvar_nw jvar_rfnw tpdiff ( PLUS ) tndiff ( MINUS ) psub ( BULK ) < w_fac1 > < jvar3_rf > [ 
 property l , w , nr 
 nr = count ( jvar3_rf ) 
 w = ( perimeter_coincide ( jvar3_rf , w_fac1 ) / nr ) / 2 
 l = ( area ( jvar3_rf ) / w ) / nr 
 ];
LVS_CHECK_PROPERTY xjvar_nw w w -TOLERANCE VAR_Werr;
LVS_CHECK_PROPERTY xjvar_nw l l -TOLERANCE VAR_Lerr;
 LVS_CHECK_PROPERTY xjvar_nw nr nr -TOLERANCE 0;

tcl_code device_function
{

    package require PvsLVS_DEVICE_DFM
    namespace import device::*
    proc catching_expr { arg } {
      	#
      	set rtval 0.0
      	if { [ catch {
            set rtval [ expr $arg ]
      	} result ] } {
            global errorCode
            set tmpError $errorCode
            #
            if { [ string match "ARITH UNDERFLOW *" $errorCode ] } {
            	#
            	set rtval 0.0
            } elseif { [ string match "ARITH OVERFLOW *" $errorCode ] } {
	    	#
            	set rtval 1e200
            } else {
            	#
            	error $result $tmpError
            }
      	}
      	return $rtval
    }

    proc calc_sca { SCH SCV W L LR_EXT TOP_EXT BOT_EXT SCALE } {
  	set sca_sum1 0.0
  	set sca_sum2 0.0
  	set SCref 1.0
  	set slice_count1 [ $SCH slice_count ]
  	set slice_count2 [ $SCV slice_count ]

  	for { set i 0 } { $i < $slice_count1} { incr i } {
       	    set sca_sum1 [ expr { $sca_sum1 + ( ([$SCALE]*[$SCH w $i]) * ( ($SCref * $SCref/([$SCALE]*([$SCH a $i]+[$LR_EXT]))) - ($SCref * $SCref/([$SCALE]*([$SCH a $i]+[$L]+[$LR_EXT]))) +  ($SCref * $SCref/([$SCALE]*([$SCH b $i]+[$LR_EXT]))) - ($SCref * $SCref/([$SCALE]*([$SCH b $i]+[$L]+[$LR_EXT]))))) }]
       	}

  	for { set i 0 } { $i < $slice_count2} { incr i } {
            set sca_sum2 [ expr { $sca_sum2 + ( ([$SCALE]*[$SCV w $i]) * ( ($SCref * $SCref/([$SCALE]*([$SCV a $i]+[$BOT_EXT]))) - ($SCref * $SCref/([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))) + ($SCref * $SCref/([$SCALE]*([$SCV b $i]+[$TOP_EXT]))) - ($SCref * $SCref/([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))))) }]
       	}

  	return [ expr { ($sca_sum1 + $sca_sum2) / ( (([$SCALE]*[$W]) * ([$SCALE]*[$L])) * 1e12) }]
    }

    proc calc_scb {  SCH SCV W  L LR_EXT TOP_EXT BOT_EXT SCALE } {
  	set scb_sum1 0.0
	set scb_sum2 0.0
  	set SCref 1.0
  	set slice_count1 [ $SCH slice_count ]
  	set slice_count2 [ $SCV slice_count ]
  	for { set i 0 } { $i < $slice_count1} { incr i } {
  	    set exp_term1 [ catching_expr " exp(-10*([$SCALE]*([$SCH a $i]+[$LR_EXT]))*1e6/$SCref) " ]
  	    set exp_term2 [ catching_expr " exp(-10*([$SCALE]*([$SCH a $i]+[$LR_EXT]))*1e6/$SCref) " ]
  	    set exp_term3 [ catching_expr " exp(-10*([$SCALE]*([$SCH a $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
    	    set exp_term4 [ catching_expr " exp(-10*([$SCALE]*([$SCH a $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
   	    set exp_term5 [ catching_expr " exp(-10*([$SCALE]*([$SCH b $i]+[$LR_EXT]))*1e6/$SCref) " ]
  	    set exp_term6 [ catching_expr " exp(-10*([$SCALE]*([$SCH b $i]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term7 [ catching_expr " exp(-10*([$SCALE]*([$SCH b $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term8 [ catching_expr " exp(-10*([$SCALE]*([$SCH b $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
	    set scb_sum1 [ expr { $scb_sum1 + ( ([$SCALE]*[ $SCH w $i ])*1e6 * (   (([$SCALE]*([$SCH a $i]+[$LR_EXT]))*1e6*( $exp_term1/10)) +   ($SCref*($exp_term2/100)) - (([$SCALE]*([$SCH a $i]+[$L]+[$LR_EXT]))*1e6*($exp_term3/10)) - (($SCref*($exp_term4/100))) + (([$SCALE]*([$SCH b $i]+[$LR_EXT]))*1e6*( $exp_term5/10)) +   ($SCref*($exp_term6/100)) - (([$SCALE]*([$SCH b $i]+[$L]+[$LR_EXT]))*1e6*($exp_term7/10)) - ($SCref*($exp_term8/100))       )) } ]
     	}
   	for { set i 0 } { $i < $slice_count2} { incr i } {
	    set exp_term1 [ catching_expr " exp(-10*([$SCALE]*([$SCV a $i]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term2 [ catching_expr " exp(-10*([$SCALE]*([$SCV a $i]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term3 [ catching_expr " exp(-10*([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term4 [ catching_expr " exp(-10*([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term5 [ catching_expr " exp(-10*([$SCALE]*([$SCV b $i]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set exp_term6 [ catching_expr " exp(-10*([$SCALE]*([$SCV b $i]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set exp_term7 [ catching_expr " exp(-10*([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set exp_term8 [ catching_expr " exp(-10*([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set scb_sum2 [ expr { $scb_sum2 + ( ([$SCALE]*[$SCV w $i])*1e6 * (   (([$SCALE]*([$SCV a $i]+[$BOT_EXT]))*1e6*( $exp_term1/10)) +   ($SCref*($exp_term2/100)) - (([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))*1e6*($exp_term3/10)) - ($SCref*($exp_term4/100)) + (([$SCALE]*([$SCV b $i]+[$TOP_EXT]))*1e6*( $exp_term5/10)) +   ($SCref*($exp_term6/100)) - (([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))*1e6*($exp_term7/10)) - ($SCref*($exp_term8/100))       )) } ]
     	}
	return [ expr { ( $scb_sum1 + $scb_sum2)  / ( (([$SCALE]*[$W]) * ([$SCALE]*[$L])) *1e12) }]
    }

    proc calc_scc { SCH SCV W L LR_EXT TOP_EXT BOT_EXT SCALE } {
  	set scc_sum1 0.0
	set scc_sum2 0.0
	set SCref 1.0
	set slice_count1 [ $SCH slice_count ]
	set slice_count2 [ $SCV slice_count ]
	for { set i 0 } { $i < $slice_count1} { incr i } { 
	    set exp_term1 [ catching_expr " exp(-20*([$SCALE]*([$SCH a $i]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term2 [ catching_expr " exp(-20*([$SCALE]*([$SCH a $i]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term3 [ catching_expr " exp(-20*([$SCALE]*([$SCH a $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term4 [ catching_expr " exp(-20*([$SCALE]*([$SCH a $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term5 [ catching_expr " exp(-20*([$SCALE]*([$SCH b $i]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term6 [ catching_expr " exp(-20*([$SCALE]*([$SCH b $i]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term7 [ catching_expr " exp(-20*([$SCALE]*([$SCH b $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
	    set exp_term8 [ catching_expr " exp(-20*([$SCALE]*([$SCH b $i]+[$L]+[$LR_EXT]))*1e6/$SCref) " ]
	    set scc_sum1 [ expr { $scc_sum1 + ( ([$SCALE]*[$SCH w $i])*1e6 * (   (([$SCALE]*([$SCH a $i]+ [$LR_EXT]))*1e6*( $exp_term1/20)) +   ($SCref*($exp_term2/400)) - (([$SCALE]*([$SCH a $i]+[$L]+ [$LR_EXT]))*1e6*($exp_term3/20)) - ($SCref*($exp_term4/400)) + (([$SCALE]*([$SCH b $i]+ [$LR_EXT]))*1e6*( $exp_term5/20)) +   ($SCref*($exp_term6/400)) - (([$SCALE]*([$SCH b $i]+[$L]+ [$LR_EXT]))*1e6*($exp_term7/20)) - ($SCref*($exp_term8/400))       )) } ]
	}
	for { set i 0 } { $i < $slice_count2} { incr i } {
	    set exp_term1 [ catching_expr " exp(-20*([$SCALE]*([$SCV a $i]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term2 [ catching_expr " exp(-20*([$SCALE]*([$SCV a $i]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term3 [ catching_expr " exp(-20*([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term4 [ catching_expr " exp(-20*([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))*1e6/$SCref) " ]
	    set exp_term5 [ catching_expr " exp(-20*([$SCALE]*([$SCV b $i]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set exp_term6 [ catching_expr " exp(-20*([$SCALE]*([$SCV b $i]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set exp_term7 [ catching_expr " exp(-20*([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set exp_term8 [ catching_expr " exp(-20*([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))*1e6/$SCref) " ]
	    set scc_sum2 [ expr { $scc_sum2 + ( ([$SCALE]*[$SCV w $i])*1e6 * (   (([$SCALE]*([$SCV a $i]+[$BOT_EXT]))*1e6*( $exp_term1/20)) +   ($SCref*($exp_term2/400)) - (([$SCALE]*([$SCV a $i]+[$W]+[$BOT_EXT]))*1e6*($exp_term3/20)) - ($SCref*($exp_term4/400)) + (([$SCALE]*([$SCV b $i]+[$TOP_EXT]))*1e6*( $exp_term5/20)) +   ($SCref*($exp_term6/400)) - (([$SCALE]*([$SCV b $i]+[$W]+[$TOP_EXT]))*1e6*($exp_term7/20)) - ($SCref*($exp_term8/400))       )) } ]
	}
	return [ expr { ( $scc_sum1 + $scc_sum2)  / ( (([$SCALE]*[$W]) * ([$SCALE]*[$L])) *1e12) }]
    }
    proc calc_lod_sasb { dfm_vec drawn_width drawn_length units scale } {
       set measurments [ dfm_vec_measurements $dfm_vec ]
       set accum 0.0
       set Wsi [expr {[$drawn_width]*[$scale]} ]
       set Lsi [expr {[$drawn_length]*[$scale]} ]
       foreach segment $measurments {
           foreach { pw sa } $segment {
	        set pw [ expr {$pw*[$units]*[$scale]} ]
		set sa [ expr {$sa*[$units]*[$scale]} ]
		set val [expr {($pw/$Wsi)*1.0/($sa+0.5*$Lsi)} ]
                set accum [ expr {$accum + $val} ]
            }
        }
               return [ expr { ((1.0/$accum)-0.5*$Lsi)/[$scale] } ]
    }

    proc calc_sca_dfm__getsum { tclvec pgw ext units WPED } {
        
        #
        #
        #
        
        set SCref 1.0
        set sum 0.0
        
        foreach segment $tclvec {
        	foreach { width encval } $segment {
        	    set width [ expr { $width * $units } ]
        	    set encval [ min $encval $WPED ]
        	    set encval [ expr { $encval * $units } ]
        	    set sum [ expr { $sum + $width * (  $SCref * $SCref / ( $encval + $ext ) -  $SCref * $SCref / ( $encval + $pgw + $ext )  ) } ]
        	}
        }
        
        return $sum
    }

    proc calc_sca_dfm { PER_1 PER_2 PAR_1 PAR_2 W L LR_EXT TOP_EXT BOT_EXT UNITS SCALE WPED} {
        
        set side_1 [ dfm_vec_measurements $PER_1 ]
        set side_2 [ dfm_vec_measurements $PER_2 ]
        set sides  [ concat $side_1 $side_2 ]
    
        set end_1  [ dfm_vec_measurements $PAR_1 ]
        set end_2  [ dfm_vec_measurements $PAR_2 ]
        
        set sum [ expr { [ calc_sca_dfm__getsum $sides [$L] [$LR_EXT] [$UNITS] [$WPED] ] +  [ calc_sca_dfm__getsum $end_1 [$W] [$BOT_EXT] [$UNITS] [$WPED] ] +  [ calc_sca_dfm__getsum $end_2 [$W] [$TOP_EXT] [$UNITS] [$WPED] ] } ]
        
        return [ expr { $sum / ( [$SCALE] * [$W] * [$SCALE] * [$L] * 1e12 ) } ]
    }	

    proc calc_scbscc_dfm__getsum { tclvec pgw ext units scale em d1 d2 WPED} {
    
        #
        #
        #
        #
        #
        
        set SCref 1.0
        set sum 0.0
        set constant 1e6
        
        foreach segment $tclvec {
        	foreach { width encval } $segment {
        	    set width [ expr { $width * $units } ]
        	    set encval [ min $encval $WPED ]
        	    set encval [ expr { $encval * $units } ]
        	    set encval_1 [ expr { $scale * ( $encval + $ext ) } ]
        	    set encval_2 [ expr { $scale * ( $encval + $pgw + $ext ) } ]
                    set encval_1_exp [ catching_expr "exp( $em * $encval_1 * $constant / $SCref )" ]
                    set encval_2_exp [ catching_expr "exp( $em * $encval_2 * $constant / $SCref )" ]
        	    set sum [ expr { $sum + $scale * $width * $constant * (  $encval_1 * $constant * ( $encval_1_exp/$d1 ) +  $SCref * ( $encval_1_exp/$d2 ) -  $encval_2 * $constant * ( $encval_2_exp/$d1 ) -  $SCref * ( $encval_2_exp/$d2 )  ) } ]
    		}
        }
        
        return $sum
    }
    
    
    proc calc_scb_dfm { PER_1 PER_2 PAR_1 PAR_2 W L LR_EXT TOP_EXT BOT_EXT UNITS SCALE WPED } {
    
        set side_1 [ dfm_vec_measurements $PER_1 ]
        set side_2 [ dfm_vec_measurements $PER_2 ]
        set sides  [ concat $side_1 $side_2 ]
    
        set end_1  [ dfm_vec_measurements $PAR_1 ]
        set end_2  [ dfm_vec_measurements $PAR_2 ]
        
        set sum [ expr { [ calc_scbscc_dfm__getsum $sides [$L] [$LR_EXT] [$UNITS] [$SCALE] -10 10 100 [$WPED] ] +  [ calc_scbscc_dfm__getsum $end_1 [$W] [$BOT_EXT] [$UNITS] [$SCALE] -10 10 100 [$WPED] ] +  [ calc_scbscc_dfm__getsum $end_2 [$W] [$TOP_EXT] [$UNITS] [$SCALE] -10 10 100 [$WPED] ] } ]
        
        return [ expr { $sum / ( [$SCALE] * [$W] * [$SCALE] * [$L] * 1e12 ) } ]
    }

    proc calc_scc_dfm { PER_1 PER_2 PAR_1 PAR_2 W L LR_EXT TOP_EXT BOT_EXT UNITS SCALE WPED } {
    
        set side_1 [ dfm_vec_measurements $PER_1 ]
        set side_2 [ dfm_vec_measurements $PER_2 ]
        set sides  [ concat $side_1 $side_2 ]
        
        set end_1  [ dfm_vec_measurements $PAR_1 ]
        set end_2  [ dfm_vec_measurements $PAR_2 ]
        
        set sum [ expr { [ calc_scbscc_dfm__getsum $sides [$L] [$LR_EXT] [$UNITS] [$SCALE] -20 20 400 [$WPED] ] +  [ calc_scbscc_dfm__getsum $end_1 [$W] [$BOT_EXT] [$UNITS] [$SCALE] -20 20 400 [$WPED] ] +  [ calc_scbscc_dfm__getsum $end_2 [$W] [$TOP_EXT] [$UNITS] [$SCALE] -20 20 400 [$WPED] ] } ]
        
        return [ expr { $sum / ( [$SCALE] * [$W] * [$SCALE] * [$L] * 1e12 ) } ]
    }

    proc min { a b } {
            return [ expr { ($a < $b) ? $a : $b } ]
    }

};

LVS_DEVICE_TYPE RESISTOR rm1 rm10 rm2 rm3 rm4 rm5 rm6 rm7 rm8 rm9 rnodl rnodl_m rnods rnods_m rnodwo rnodwo_m rnpolyl rnpolyl_m rnpolys rnpolys_m rnpolywo rnpolywo_m rnwod rnwod_m rnwsti rnwsti_m rpodl rpodl_m rpods rpods_m rpodwo rpodwo_m rppolyl rppolyl_m rppolyl_rf rppolyl_rf_rdk rppolys rppolys_m rppolys_rf rppolys_rf_rdk rppolywo rppolywo_m rppolywo_rf rppolywo_rf_rdk [ POS = PLUS NEG = MINUS ];
LVS_REDUCE_DEVICE rppolyl_rf -PARALLEL NO;
LVS_REDUCE_DEVICE rppolyl_rf -SERIES PLUS MINUS NO;
LVS_REDUCE_DEVICE rppolyl_rf_rdk -PARALLEL NO;
LVS_REDUCE_DEVICE rppolyl_rf_rdk -SERIES PLUS MINUS NO;
LVS_REDUCE_DEVICE rppolys_rf -PARALLEL NO;
LVS_REDUCE_DEVICE rppolys_rf -SERIES PLUS MINUS NO;
LVS_REDUCE_DEVICE rppolys_rf_rdk -PARALLEL NO;
LVS_REDUCE_DEVICE rppolys_rf_rdk -SERIES PLUS MINUS NO;
LVS_REDUCE_DEVICE rppolywo_rf -PARALLEL NO;
LVS_REDUCE_DEVICE rppolywo_rf -SERIES PLUS MINUS NO;
LVS_REDUCE_DEVICE rppolywo_rf_rdk -PARALLEL NO;
LVS_REDUCE_DEVICE rppolywo_rf_rdk -SERIES PLUS MINUS NO;
LVS_SOFTCHK DNW -TYPE CONTACT;
LVS_SOFTCHK DNW -TYPE CONTACT;
LVS_SOFTCHK PROBEM1_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM2_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM3_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM4_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM5_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM6_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM7_T -TYPE CONTACT;
LVS_SOFTCHK poly_term -TYPE CONTACT;
LVS_SOFTCHK PROBEM1_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM2_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM3_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM4_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM5_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM6_T -TYPE CONTACT;
LVS_SOFTCHK PROBEM7_T -TYPE CONTACT;
LVS_SOFTCHK RFDMY_hia_psub -TYPE CONTACT;
LVS_SOFTCHK poly_term -TYPE CONTACT;
LVS_SOFTCHK rfdmy56 -TYPE CONTACT;
LVS_SOFTCHK HVNW -TYPE CONTACT;
LVS_SOFTCHK nxwell -TYPE CONTACT;
LVS_SOFTCHK HVPSUB -TYPE CONTACT;
LVS_SOFTCHK HVPW -TYPE CONTACT;
LVS_SOFTCHK RFDMY_hia -TYPE CONTACT;
LVS_SOFTCHK coll1 -TYPE CONTACT;
LVS_SOFTCHK n_psub -TYPE CONTACT;
LVS_SOFTCHK psub -TYPE CONTACT;
LVS_SOFTCHK psub_term -TYPE CONTACT;
LVS_SOFTCHK rwel -TYPE CONTACT;
GROUP_RULES ERC_WELL_TO_PG_CHECK npvss49 ppvdd49;
SELECT_CHECK -ERC ERC_WELL_TO_PG_CHECK;
GROUP_RULES ERC_DS_TO_PG_CHECK mnpg mppg mnpg_ldd1 mppg_ldd1;
SELECT_CHECK -ERC ERC_DS_TO_PG_CHECK;
GROUP_RULES ERC_FLOATING_WELL_CHECK floating.nxwell_float floating.nxwell_hv floating.psub;
SELECT_CHECK -ERC ERC_FLOATING_WELL_CHECK;
SELECT_NET tndiff AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  -OUTPUT N1tndiff;
SELECT -TOUCH erc_nmos_gates N1tndiff T1tndiff;
SELECT_NET tndiff AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  -OUTPUT N2tndiff;
SELECT -TOUCH erc_nmos_gates N2tndiff T2tndiff;

RULE mnpg {
    CAPTION MOS connected to both power and ground;
    AND T1tndiff T2tndiff;
}
SELECT_NET tpdiff AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  -OUTPUT N1tpdiff;
SELECT -TOUCH erc_pmos_gates N1tpdiff T1tpdiff;
SELECT_NET tpdiff AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  -OUTPUT N2tpdiff;
SELECT -TOUCH erc_pmos_gates N2tpdiff T2tpdiff;

RULE mppg {
    CAPTION MOS connected to both power and ground;
    AND T1tpdiff T2tpdiff;
}
SELECT_NET d_nd25hvdw AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  -OUTPUT N1d_nd25hvdw_mnpg_ldd1A;
SELECT -TOUCH erc_nmos_gates N1d_nd25hvdw_mnpg_ldd1A T1d_nd25hvdw_mnpg_ldd1A;
SELECT_NET s_nd25hvdw AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  N2s_nd25hvdw_mnpg_ldd1A;
SELECT -TOUCH erc_nmos_gates N2s_nd25hvdw_mnpg_ldd1A T2s_nd25hvdw_mnpg_ldd1A;
SELECT_NET s_nd25hvdw AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  N1s_nd25hvdw_mnpg_ldd1B;
SELECT -TOUCH erc_nmos_gates N1s_nd25hvdw_mnpg_ldd1B T1s_nd25hvdw_mnpg_ldd1B;
SELECT_NET d_nd25hvdw AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  N2d_nd25hvdw_mnpg_ldd1B;
SELECT -TOUCH erc_nmos_gates N2d_nd25hvdw_mnpg_ldd1B T2d_nd25hvdw_mnpg_ldd1B;

RULE mnpg_ldd1 {
    CAPTION MOS connected to both power and ground;
    AND T1d_nd25hvdw_mnpg_ldd1A T2s_nd25hvdw_mnpg_ldd1A mnpg_ldd1_tmp1;
    AND T1s_nd25hvdw_mnpg_ldd1B T2d_nd25hvdw_mnpg_ldd1B mnpg_ldd1_tmp2;
    OR mnpg_ldd1_tmp1 mnpg_ldd1_tmp2;
}
SELECT_NET d_pd25hvd AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  -OUTPUT N1d_pd25hvd_mppg_ldd1A;
SELECT -TOUCH erc_pmos_gates N1d_pd25hvd_mppg_ldd1A T1d_pd25hvd_mppg_ldd1A;
SELECT_NET s_pd25hvd AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  N2s_pd25hvd_mppg_ldd1A;
SELECT -TOUCH erc_pmos_gates N2s_pd25hvd_mppg_ldd1A T2s_pd25hvd_mppg_ldd1A;
SELECT_NET s_pd25hvd AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  N1s_pd25hvd_mppg_ldd1B;
SELECT -TOUCH erc_pmos_gates N1s_pd25hvd_mppg_ldd1B T1s_pd25hvd_mppg_ldd1B;
SELECT_NET d_pd25hvd AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  N2d_pd25hvd_mppg_ldd1B;
SELECT -TOUCH erc_pmos_gates N2d_pd25hvd_mppg_ldd1B T2d_pd25hvd_mppg_ldd1B;

RULE mppg_ldd1 {
    CAPTION MOS connected to both power and ground;
    AND T1d_pd25hvd_mppg_ldd1A T2s_pd25hvd_mppg_ldd1A mppg_ldd1_tmp1;
    AND T1s_pd25hvd_mppg_ldd1B T2d_pd25hvd_mppg_ldd1B mppg_ldd1_tmp2;
    OR mppg_ldd1_tmp1 mppg_ldd1_tmp2;
}
SCONNECT tndiff nxwell_float -by nplug;

RULE floating.nxwell_float {
    CAPTION nxwell_float is not connected to POWER;
    PATHCHK nxwell_float -power not -ports_also no_power_path;
    SELECT_NET nxwell_float AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  -output direct_connect_ground;
    OR no_power_path direct_connect_ground;
}
SCONNECT tndiff nxwell_hv -by ntaphv;

RULE floating.nxwell_hv {
    CAPTION nxwell_hv is not connected to POWER;
    PATHCHK nxwell_hv -power not -ports_also no_power_path;
    SELECT_NET nxwell_hv AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  -output direct_connect_ground;
    OR no_power_path direct_connect_ground;
}

RULE floating.psub {
    CAPTION psub is not connected to GROUND;
    PATHCHK psub -ground not -ports_also no_ground_path;
    SELECT_NET psub AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  -output direct_connect_power;
    OR no_ground_path direct_connect_power;
}
SELECT_NET gate1_not_IO2_not_IO2 AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB  -OUTPUT gate1_not_IO2_GND;

RULE npvss49 {
    CAPTION ntap connected to GROUND;
    NOT ntap VAR ntap_not_var;
    SELECT_NET ntap_not_var AGND AHVSS AHVSSB AHVSSG AHVSSR AHVSSUB AVSS AVSSB AVSSBG AVSSG AVSSR AVSSUB DHVSS DVSS GND HVSSUB TACVSS TAVSS TAVSSPST TVSS VS33 VSS VSSESD VSSG VSSM VSSPST VSSUB ;
}
NOT gate1_not_IO2 OD25_28 gate1_not_IO2_not_IO1;
NOT gate1_not_IO2_not_IO1 OD33 gate1_not_IO2_not_IO2;
CONNECT gate1_not_IO2_not_IO2 poly;
SELECT_NET gate1_not_IO2_not_IO2 AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL  -OUTPUT gate1_not_IO2_PWR;

RULE ppvdd49 {
    CAPTION ptap connected to POWER;
    SELECT_NET ptap AHVDD AHVDDB AHVDDG AHVDDR AHVDDWELL AVDD AVDDB AVDDBG AVDDG AVDDR AVDWELL DHVDD DVDD HVDDWELL TACVDD TAVD33 TAVD33PST TAVDD TAVDDPST TVDD VD33 VDD VDD5V VDDESD VDDG VDDM VDDPST VDDSA VDWELL ;
}
NOT mdiff gate1 all_sd;


########################################################################
Optimizing Rules ...
########################################################################
[WARN] Neither hcell nor -automatch option is specified.
Operation 'NOT' at line 2758 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 2759 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2761 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 2772 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2773 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -outside' at line 2776 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2777 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2778 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 2779 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 2780 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2781 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2782 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 2783 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -inside' at line 2785 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 2786 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -touch' at line 2787 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3326 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3347 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3360 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3449 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3450 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3451 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3452 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3453 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3454 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3455 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3456 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3457 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3458 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3459 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3460 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3461 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'COPY' at line 3462 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3646 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 3647 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 3648 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 3649 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 3703 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 3704 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 3727 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 3749 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 3750 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'COPY' at line 3793 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SIZE' at line 15925 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 15926 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15928 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15929 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15930 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15931 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15932 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15933 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15934 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15935 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15936 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15937 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15938 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15939 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15940 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15941 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15942 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15943 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15944 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15945 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15960 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 15961 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15974 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 15975 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 15988 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 15989 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16002 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 16003 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16016 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 16017 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 16018 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EDGE_SELECT' at line 16019 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EDGE_SELECT' at line 16020 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EDGE_BOOLEAN' at line 16021 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EXTE' at line 16022 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 16023 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 16024 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16025 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'HOLES' at line 16026 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -inside' at line 16027 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16028 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16030 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 16031 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 16032 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EDGE_SELECT' at line 16033 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EDGE_SELECT' at line 16034 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EDGE_BOOLEAN' at line 16035 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'EXTE' at line 16036 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 16037 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 16038 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16039 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'HOLES' at line 16040 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -inside' at line 16041 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16042 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16044 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'OR' at line 16045 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16085 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16203 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16322 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16442 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16563 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16681 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16800 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 16920 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17041 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17159 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17278 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17398 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17516 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17635 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 17753 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20311 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20312 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 20313 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20314 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20315 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20316 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 20321 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20369 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20370 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 20371 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'RECT_CHK' at line 20372 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20373 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20374 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 20379 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20426 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20427 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 20428 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'RECT_CHK' at line 20429 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20430 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'SELECT -interact' at line 20431 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'AND' at line 20436 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Operation 'NOT' at line 20992 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m is not selected for executing, remove it.
Two 'SIZE' operations at line 1425 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m and at line 1426 in file /afs/ee.cooper.edu/dist/cadence-tools/tsmc65/PVS/./LVS/MAIN_DECK/UTM/DFM_LVS_RC_PVS_N65_ALRDL_UTM_v1.6b.9m are converted into two 'SIZE' operations, and one operation with -underover option.
Completed execution early, as requested by the "-get_rules" or "-gen_tags"

   ONE LAYER BOOLEAN: Cumulative Time CPU =        0(s) REAL =        0(s)
   TWO LAYER BOOLEAN: Cumulative Time CPU =        0(s) REAL =        0(s)
 POLYGON TOPOLOGICAL: Cumulative Time CPU =        0(s) REAL =        0(s)
 POLYGON MEASUREMENT: Cumulative Time CPU =        0(s) REAL =        0(s)
                SIZE: Cumulative Time CPU =        0(s) REAL =        0(s)
    EDGE TOPOLOGICAL: Cumulative Time CPU =        0(s) REAL =        0(s)
    EDGE MEASUREMENT: Cumulative Time CPU =        0(s) REAL =        0(s)
               STAMP: Cumulative Time CPU =        0(s) REAL =        0(s)
       ONE LAYER DRC: Cumulative Time CPU =        0(s) REAL =        0(s)
       TWO LAYER DRC: Cumulative Time CPU =        0(s) REAL =        0(s)
            NET AREA: Cumulative Time CPU =        0(s) REAL =        0(s)
             DENSITY: Cumulative Time CPU =        0(s) REAL =        0(s)
       MISCELLANEOUS: Cumulative Time CPU =        0(s) REAL =        0(s)
             CONNECT: Cumulative Time CPU =        0(s) REAL =        0(s)
              DEVICE: Cumulative Time CPU =        0(s) REAL =        0(s)
                 ERC: Cumulative Time CPU =        0(s) REAL =        0(s)
       PATTERN_MATCH: Cumulative Time CPU =        0(s) REAL =        0(s)
            DFM FILL: Cumulative Time CPU =        0(s) REAL =        0(s)


Total CPU Time                    : 0(s)
Total Real Time                   : 1(s)
Peak Memory Used                  : 20(M)
Total Original Geometry           : 0(0)
Total ERC RuleChecks              : 0
Total ERC Results                 : 0 (0)
Graphic report database is erc.db


Netlist Extraction Finished Normally. Sat Apr 30 23:25:23 2022


